diff --git a/trilinos/packages/teuchos/numerics/src/Teuchos_SerialBandDenseMatrix.hpp b/trilinos/packages/teuchos/numerics/src/Teuchos_SerialBandDenseMatrix.hpp
index 897d8a90..c1237df8 100644
--- a/trilinos/packages/teuchos/numerics/src/Teuchos_SerialBandDenseMatrix.hpp
+++ b/trilinos/packages/teuchos/numerics/src/Teuchos_SerialBandDenseMatrix.hpp
@@ -130,7 +130,7 @@ the object.  Specifically:
 namespace Teuchos {
 
 template<typename OrdinalType, typename ScalarType>
-class SerialBandDenseMatrix : public CompObject, public Object, public BLAS<OrdinalType, ScalarType>
+class SerialBandDenseMatrix : public CompObject, /*public Object,*/ public BLAS<OrdinalType, ScalarType>
 {
 public:
 
@@ -448,7 +448,7 @@ protected:
 template<typename OrdinalType, typename ScalarType>
 SerialBandDenseMatrix<OrdinalType, ScalarType>::SerialBandDenseMatrix ()
   : CompObject (),
-    Object(),
+    //Object(),
     BLAS<OrdinalType,ScalarType>(),
     numRows_ (0),
     numCols_ (0),
@@ -467,7 +467,7 @@ SerialBandDenseMatrix (OrdinalType numRows_in,
                        OrdinalType ku_in,
                        bool zeroOut)
   : CompObject (),
-    Object(),
+    //Object(),
     BLAS<OrdinalType,ScalarType>(),
     numRows_ (numRows_in),
     numCols_ (numCols_in),
@@ -493,7 +493,7 @@ SerialBandDenseMatrix (DataAccess CV,
                        OrdinalType kl_in,
                        OrdinalType ku_in)
   : CompObject (),
-    Object(),
+    //Object(),
     BLAS<OrdinalType,ScalarType>(),
     numRows_ (numRows_in),
     numCols_ (numCols_in),
@@ -515,7 +515,7 @@ template<typename OrdinalType, typename ScalarType>
 SerialBandDenseMatrix<OrdinalType, ScalarType>::
 SerialBandDenseMatrix (const SerialBandDenseMatrix<OrdinalType, ScalarType> &Source, ETransp trans)
   : CompObject (),
-    Object(),
+    //Object(),
     BLAS<OrdinalType,ScalarType>(),
     numRows_ (0),
     numCols_ (0),
@@ -574,7 +574,7 @@ SerialBandDenseMatrix (DataAccess CV,
                        OrdinalType numCols_in,
                        OrdinalType startCol)
   : CompObject (),
-    Object(),
+    //Object(),
     BLAS<OrdinalType,ScalarType>(),
     numRows_ (numRows_in),
     numCols_ (numCols_in),
diff --git a/trilinos/packages/teuchos/numerics/src/Teuchos_SerialDenseMatrix.hpp b/trilinos/packages/teuchos/numerics/src/Teuchos_SerialDenseMatrix.hpp
index d908c77d..226b8037 100644
--- a/trilinos/packages/teuchos/numerics/src/Teuchos_SerialDenseMatrix.hpp
+++ b/trilinos/packages/teuchos/numerics/src/Teuchos_SerialDenseMatrix.hpp
@@ -64,7 +64,7 @@
 namespace Teuchos {
 
 template<typename OrdinalType, typename ScalarType>
-class SerialDenseMatrix : public CompObject, public Object, public BLAS<OrdinalType, ScalarType>
+class SerialDenseMatrix : public CompObject, /*public Object,*/ public BLAS<OrdinalType, ScalarType>
 {
 public:
 
@@ -406,14 +406,14 @@ protected:
 
 template<typename OrdinalType, typename ScalarType>
 SerialDenseMatrix<OrdinalType, ScalarType>::SerialDenseMatrix()
-  : CompObject(), Object(), BLAS<OrdinalType,ScalarType>(), numRows_(0), numCols_(0), stride_(0), valuesCopied_(false), values_(0)
+  : CompObject(), /*Object(),*/ BLAS<OrdinalType,ScalarType>(), numRows_(0), numCols_(0), stride_(0), valuesCopied_(false), values_(0)
 {}
 
 template<typename OrdinalType, typename ScalarType>
 SerialDenseMatrix<OrdinalType, ScalarType>::SerialDenseMatrix(
   OrdinalType numRows_in, OrdinalType numCols_in, bool zeroOut
   )
-  : CompObject(), Object(), BLAS<OrdinalType,ScalarType>(), numRows_(numRows_in), numCols_(numCols_in), stride_(numRows_in)
+  : CompObject(), /*Object(),*/ BLAS<OrdinalType,ScalarType>(), numRows_(numRows_in), numCols_(numCols_in), stride_(numRows_in)
 {
   values_ = new ScalarType[stride_*numCols_];
   valuesCopied_ = true;
@@ -426,7 +426,7 @@ SerialDenseMatrix<OrdinalType, ScalarType>::SerialDenseMatrix(
   DataAccess CV, ScalarType* values_in, OrdinalType stride_in, OrdinalType numRows_in,
   OrdinalType numCols_in
   )
-  : CompObject(), Object(), BLAS<OrdinalType,ScalarType>(), numRows_(numRows_in), numCols_(numCols_in), stride_(stride_in),
+  : CompObject(), /*Object(),*/ BLAS<OrdinalType,ScalarType>(), numRows_(numRows_in), numCols_(numCols_in), stride_(stride_in),
     valuesCopied_(false), values_(values_in)
 {
   if(CV == Copy)
@@ -440,7 +440,7 @@ SerialDenseMatrix<OrdinalType, ScalarType>::SerialDenseMatrix(
 
 template<typename OrdinalType, typename ScalarType>
 SerialDenseMatrix<OrdinalType, ScalarType>::SerialDenseMatrix(const SerialDenseMatrix<OrdinalType, ScalarType> &Source, ETransp trans) 
-  : CompObject(), Object(), BLAS<OrdinalType,ScalarType>(), numRows_(0), numCols_(0), stride_(0), valuesCopied_(true), values_(0)
+  : CompObject(), /*Object(),*/ BLAS<OrdinalType,ScalarType>(), numRows_(0), numCols_(0), stride_(0), valuesCopied_(true), values_(0)
 {
   if ( trans == Teuchos::NO_TRANS )
   {
diff --git a/trilinos/packages/teuchos/numerics/src/Teuchos_SerialSymDenseMatrix.hpp b/trilinos/packages/teuchos/numerics/src/Teuchos_SerialSymDenseMatrix.hpp
index 883647bb..2220f957 100644
--- a/trilinos/packages/teuchos/numerics/src/Teuchos_SerialSymDenseMatrix.hpp
+++ b/trilinos/packages/teuchos/numerics/src/Teuchos_SerialSymDenseMatrix.hpp
@@ -119,7 +119,7 @@ the object.  Specifically:
 namespace Teuchos {
 
 template<typename OrdinalType, typename ScalarType>
-class SerialSymDenseMatrix : public CompObject, public Object, public BLAS<OrdinalType,ScalarType>
+class SerialSymDenseMatrix : public CompObject, /*public Object,*/ public BLAS<OrdinalType,ScalarType>
 {
  public:
 
@@ -432,13 +432,13 @@ class SerialSymDenseMatrix : public CompObject, public Object, public BLAS<Ordin
 
 template<typename OrdinalType, typename ScalarType>
 SerialSymDenseMatrix<OrdinalType, ScalarType>::SerialSymDenseMatrix()
-  : CompObject(), Object(), BLAS<OrdinalType,ScalarType>(), 
+  : CompObject(), /*Object(),*/ BLAS<OrdinalType,ScalarType>(), 
     numRowCols_(0), stride_(0), valuesCopied_(false), values_(0), upper_(false), UPLO_('L')
 {}
 
 template<typename OrdinalType, typename ScalarType>
 SerialSymDenseMatrix<OrdinalType, ScalarType>::SerialSymDenseMatrix(OrdinalType numRowCols_in, bool zeroOut)
-  : CompObject(), Object(), BLAS<OrdinalType,ScalarType>(),
+  : CompObject(), /*Object(),*/ BLAS<OrdinalType,ScalarType>(),
     numRowCols_(numRowCols_in), stride_(numRowCols_in), valuesCopied_(false), upper_(false), UPLO_('L')
 {
   values_ = new ScalarType[stride_*numRowCols_];
@@ -451,7 +451,7 @@ template<typename OrdinalType, typename ScalarType>
 SerialSymDenseMatrix<OrdinalType, ScalarType>::SerialSymDenseMatrix(
   DataAccess CV, bool upper_in, ScalarType* values_in, OrdinalType stride_in, OrdinalType numRowCols_in
   )
-  : CompObject(), Object(), BLAS<OrdinalType,ScalarType>(), 
+  : CompObject(), /*Object(),*/ BLAS<OrdinalType,ScalarType>(), 
     numRowCols_(numRowCols_in), stride_(stride_in), valuesCopied_(false),
     values_(values_in), upper_(upper_in)
 {
@@ -471,7 +471,7 @@ SerialSymDenseMatrix<OrdinalType, ScalarType>::SerialSymDenseMatrix(
 
 template<typename OrdinalType, typename ScalarType>
 SerialSymDenseMatrix<OrdinalType, ScalarType>::SerialSymDenseMatrix(const SerialSymDenseMatrix<OrdinalType, ScalarType> &Source) 
-  : CompObject(), Object(), BLAS<OrdinalType,ScalarType>(), 
+  : CompObject(), /*Object(),*/ BLAS<OrdinalType,ScalarType>(), 
     numRowCols_(Source.numRowCols_), stride_(0), valuesCopied_(true), 
     values_(0), upper_(Source.upper_), UPLO_(Source.UPLO_)
 {
@@ -500,7 +500,7 @@ template<typename OrdinalType, typename ScalarType>
 SerialSymDenseMatrix<OrdinalType, ScalarType>::SerialSymDenseMatrix(
                                                                     DataAccess CV, const SerialSymDenseMatrix<OrdinalType,
                                                                     ScalarType> &Source, OrdinalType numRowCols_in, OrdinalType startRowCol )
-  : CompObject(), Object(), BLAS<OrdinalType,ScalarType>(),
+  : CompObject(), /*Object(),*/ BLAS<OrdinalType,ScalarType>(),
     numRowCols_(numRowCols_in), stride_(Source.stride_), valuesCopied_(false), upper_(Source.upper_), UPLO_(Source.UPLO_)
 {
   if(CV == Copy)
