%!PS-Adobe-3.0
%%BoundingBox: 54 72 558 720
%%Creator: Mozilla (NetScape) HTML->PS
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%Pages: 40
%%PageOrder: Ascend
%%Title: CONMIN USER'S MANUAL
%%EndComments
%%BeginProlog
[ /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
 /two /three /four /five /six /seven /eight /nine /colon /semicolon
 /less /equal /greater /question /at /A /B /C /D /E
 /F /G /H /I /J /K /L /M /N /O
 /P /Q /R /S /T /U /V /W /X /Y
 /Z /bracketleft /backslash /bracketright /asciicircum /underscore /quoteleft /a /b /c
 /d /e /f /g /h /i /j /k /l /m
 /n /o /p /q /r /s /t /u /v /w
 /x /y /z /braceleft /bar /braceright /asciitilde /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
 /space /exclamdown /cent /sterling /currency /yen /brokenbar /section /dieresis /copyright
 /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered /cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf
 /threequarters /questiondown /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis /Eth /Ntilde
 /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls /agrave /aacute /acircumflex /atilde /adieresis /aring
 /ae /ccedilla /egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
 /eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide /oslash /ugrave
 /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis] /isolatin1encoding exch def
/c { matrix currentmatrix currentpoint translate
     3 1 roll scale newpath 0 0 1 0 360 arc setmatrix } bind def
/F0
    /Times-Roman findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/f0 { /F0 findfont exch scalefont setfont } bind def
/F1
    /Times-Bold findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/f1 { /F1 findfont exch scalefont setfont } bind def
/F2
    /Times-Italic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/f2 { /F2 findfont exch scalefont setfont } bind def
/F3
    /Times-BoldItalic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/f3 { /F3 findfont exch scalefont setfont } bind def
/F4
    /Courier findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/f4 { /F4 findfont exch scalefont setfont } bind def
/F5
    /Courier-Bold findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/f5 { /F5 findfont exch scalefont setfont } bind def
/F6
    /Courier-Oblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/f6 { /F6 findfont exch scalefont setfont } bind def
/F7
    /Courier-BoldOblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/f7 { /F7 findfont exch scalefont setfont } bind def
/rhc {
    {
        currentfile read {
	    dup 97 ge
		{ 87 sub true exit }
		{ dup 48 ge { 48 sub true exit } { pop } ifelse }
	    ifelse
	} {
	    false
	    exit
	} ifelse
    } loop
} bind def

/cvgray { % xtra_char npix cvgray - (string npix long)
    dup string
    0
    {
	rhc { cvr 4.784 mul } { exit } ifelse
	rhc { cvr 9.392 mul } { exit } ifelse
	rhc { cvr 1.824 mul } { exit } ifelse
	add add cvi 3 copy put pop
	1 add
	dup 3 index ge { exit } if
    } loop
    pop
    3 -1 roll 0 ne { rhc { pop } if } if
    exch pop
} bind def

/smartimage12rgb { % w h b [matrix] smartimage12rgb -
    /colorimage where {
	pop
	{ currentfile rowdata readhexstring pop }
	false 3
	colorimage
    } {
	exch pop 8 exch
	3 index 12 mul 8 mod 0 ne { 1 } { 0 } ifelse
	4 index
	6 2 roll
	{ 2 copy cvgray }
	image
	pop pop
    } ifelse
} def
/cshow { dup stringwidth pop 2 div neg 0 rmoveto show } bind def
/rshow { dup stringwidth pop neg 0 rmoveto show } bind def
/BeginEPSF {
  /b4_Inc_state save def
  /dict_count countdictstack def
  /op_count count 1 sub def
  userdict begin
  /showpage {} def
  0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
  10 setmiterlimit [] 0 setdash newpath
  /languagelevel where
  { pop languagelevel 1 ne
    { false setstrokeadjust false setoverprint } if
  } if
} bind def
/EndEPSF {
  count op_count sub {pop} repeat
  countdictstack dict_count sub {end} repeat
  b4_Inc_state restore
} bind def
%%EndProlog
%%Page: 1 1
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
98 697.5 moveto
24 f1
(CONMIN USER'S MANUAL) show
73.3 662.2 moveto
18 f1
(NASA Technical Memorandum X-62282, 1978) show
28 632 moveto
14 f1
(Addendum) show
94.9 632 moveto
14 f1
( to Technical Memorandum, 1978 ) show
28 616 moveto
14 f1
(Original) show
78.5 616 moveto
14 f1
( Technical Memorandum, 1973 ) show
0 590.5 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
233.3 573 moveto
12 f0
([Cover]) show
0 538.6 moveto
10 f4
(   NASA TECHNICAL                                 NASA TM X-62,282) show
0 528.1 moveto
10 f4
(        MEMORANDUM) show
0 475.6 moveto
10 f4
(   CONMIN - A FORTRAN PROGRAM FOR CONSTRAINED) show
0 454.6 moveto
10 f4
(   FUNCTION MINIMIZATION) show
0 433.6 moveto
10 f4
(   USER'S MANUAL) show
0 381.1 moveto
10 f4
(   Garret N. Vanderplaats) show
0 328.6 moveto
10 f4
(   Ames Research Center and U.S. Army Air Mobility) show
0 318.1 moveto
10 f4
(   R&D Laboratory, Moffett Field, Calif.  94035) show
0 276.1 moveto
10 f4
(   August 1973) show
0 265.6 moveto
10 f4
(   [Reprinted 1991]) show
0 225.1 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
118.8 192 moveto
14 f1
(CONMIN USER'S MANUAL ADDENDUM) show
167.8 176 moveto
14 f1
(by G. N. VANDERPLAATS) show
220.9 160 moveto
14 f1
(May, 1978) show
0 133 moveto
12 f0
(Since the original release of the CONMIN program, numerous modifications and improvements have) show
0 119.7 moveto
12 f0
(been made. These include changes to the program organization, COMMON block structures, array) show
0 106.4 moveto
12 f0
(dimensions and control parameters. An understanding of these changes is necessary for the operation of) show
0 93.1 moveto
12 f0
(the current version of the program and these are outlined in the following sections.) show
pagelevel restore
showpage
%%Page: 2 2
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
0 709.2 moveto
12 f0
(This version of CONMIN is identified by a comment card near the beginning of subroutine CONMIN:) show
0 682.6 moveto
10 f4
(C * * MAY, 1978 VERSION * * ) show
168 682.6 moveto
12 f0
(.) show
0 653.7 moveto
14 f1
(PROGRAM ORGANIZATION) show
0 626.7 moveto
12 f0
(The original version of CONMIN was written such that a user-supplied subroutine was called by) show
0 613.4 moveto
12 f0
(CONMIN for function and gradient calculations. The current version is organized such that the function) show
0 600.1 moveto
12 f0
(evaluation routine is contained in, or is called by, the main program. CONMIN executes according to) show
0 586.8 moveto
12 f0
(the parameter IGOTO which must be initialized to zero. ) show
271.9 586.8 moveto
12 f0
(Figure A1) show
320.8 586.8 moveto
12 f0
( shows the required program) show
0 573.5 moveto
12 f0
(organization. The purpose of this new logic is so that the program can be used in an overlay system or) show
0 560.2 moveto
12 f0
(can be restarted in mid-execution.) show
0 531.3 moveto
14 f1
(COMMON BLOCKS) show
0 504.3 moveto
10 f4
(CNMN2, CNMN3) show
72 504.3 moveto
12 f0
( and ) show
95.3 504.3 moveto
10 f4
(CNMN4) show
125.3 504.3 moveto
12 f0
( as originally defined are no longer required. However, the arrays contained in) show
0 491 moveto
12 f0
(these common blocks must still be dimensioned in the main program. Common block name CONSAV is) show
0 477.7 moveto
12 f0
(now used for internal storage by CONMIN and this name must not be used elsewhere. The information) show
0 464.4 moveto
12 f0
(in common block ) show
86.9 464.4 moveto
10 f4
(CNMN1) show
116.9 464.4 moveto
12 f0
( has been changed, and is now:) show
0 440.5 moveto
10 f4
(COMMON /CNMN1/ DELFUN, DABFUN, FDCH, FDCHM, CT, CTMIN, CTL, CTLMIN, ALPHAX, ABOBJ1,) show
0 430 moveto
10 f4
(THETA, ) show
42 430 moveto
10 f5
(obj) show
60 430 moveto
10 f4
(, NDV, NCON, NSIDE, IPRINT, NFDG, NSCAL, LINOBJ, ITMAX, ITRM, ICNDIR,) show
0 419.5 moveto
10 f4
(IGOTO, ) show
42 419.5 moveto
10 f5
(nac) show
60 419.5 moveto
10 f4
(, info, infog, iter.) show
0 395.8 moveto
12 f0
(NOTE: The parameters typed in upper case must be initialized before the first call to CONMIN. The) show
0 382.5 moveto
12 f0
(parameters typed in  ) show
100.6 382.5 moveto
10 f5
(bold) show
124.6 382.5 moveto
12 f0
(  characters are calculated by the user during execution, depending on the) show
0 369.2 moveto
12 f0
(value of ) show
41.9 369.2 moveto
10 f4
(info) show
65.9 369.2 moveto
12 f0
(;  ) show
75.2 369.2 moveto
10 f4
(nac) show
93.2 369.2 moveto
12 f0
( will be calculated by the user only if ) show
274.1 369.2 moveto
10 f4
(NFDG = 1) show
322.1 369.2 moveto
12 f0
(.) show
0 340.3 moveto
14 f1
(ARRAY DIMENSIONS) show
0 313.3 moveto
12 f0
(The storage requirements for the arrays used in CONMIN have changed. The current storage) show
0 300 moveto
12 f0
(requirements are:) show
0 276.1 moveto
10 f4
(DIMENSION X\(N1\), VLB\(N1\), VUB\(N1\), g\(N2\), SCAL\(N1\), df\(N1\), a\(N1,N3\), s\(N1\), g1\(N2\),) show
0 265.6 moveto
10 f4
(g2\(N2\), b\(N3,N3\), c\(N4\), ISC\(N2\), ic\(N3\), ms1\(N5\)) show
0 241.9 moveto
12 f0
(where ) show
28 218 moveto
10 f4
(N1 = NDV + 2 ) show
28 207.5 moveto
10 f4
(N2 = NCON + 2*NDV ) show
28 197 moveto
10 f4
(N3 = NACMX1 ) show
28 186.5 moveto
10 f4
(N4 = MAX \(N3,NDV\) ) show
28 176 moveto
10 f4
(N5 = 2*N4) show
0 149.5 moveto
12 f0
(Note that these are ) show
92.6 149.5 moveto
12 f2
(minimum) show
137.2 149.5 moveto
12 f0
( dimensions. The arrays may be dimensioned larger than this at the user's) show
0 136.2 moveto
12 f0
(option.) show
0 109.6 moveto
12 f0
(NOTE: Uppercase denotes arrays which must be initialized before the first call to CONMIN. ) show
448.9 109.6 moveto
10 f4
(VLB, VUB,) show
0 96.3 moveto
10 f4
(ISC) show
18 96.3 moveto
12 f0
( and ) show
41.3 96.3 moveto
10 f4
(SCAL) show
65.3 96.3 moveto
12 f0
( must be initialized only if they will be used: ) show
282.6 96.3 moveto
10 f4
(VLB) show
300.6 96.3 moveto
12 f0
( and ) show
323.9 96.3 moveto
10 f4
(VUB) show
341.9 96.3 moveto
12 f0
( if ) show
355.2 96.3 moveto
10 f4
(NSIDE.GT.0) show
415.2 96.3 moveto
12 f0
(, ) show
421.1 96.3 moveto
10 f4
(ISC) show
439.1 96.3 moveto
12 f0
( if) show
0 83 moveto
10 f4
(NCON.GT.0) show
54 83 moveto
12 f0
( and ) show
77.3 83 moveto
10 f4
(SCAL) show
101.3 83 moveto
12 f0
( if ) show
114.6 83 moveto
10 f4
(NSCAL.LT.0.) show
pagelevel restore
showpage
%%Page: 3 3
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
0 707.2 moveto
12 f0
(During execution, the arrays ) show
139.6 707.2 moveto
10 f4
(g) show
145.6 707.2 moveto
12 f0
(, ) show
151.5 707.2 moveto
10 f4
(a) show
157.5 707.2 moveto
12 f0
(, and ) show
183.8 707.2 moveto
10 f4
(isc) show
201.8 707.2 moveto
12 f0
( must be calculated by the user, depending on the value of) show
0 693.9 moveto
10 f4
(NFDG) show
24 693.9 moveto
12 f0
(. If ) show
40.9 693.9 moveto
10 f4
(NFDG) show
64.9 693.9 moveto
12 f0
( = 0, only array ) show
141.6 693.9 moveto
10 f4
(g) show
147.6 693.9 moveto
12 f0
( is calculated. If ) show
227.2 693.9 moveto
10 f4
(NFDG) show
251.2 693.9 moveto
12 f0
( = 2, only arrays ) show
332.6 693.9 moveto
10 f4
(g) show
338.6 693.9 moveto
12 f0
( and ) show
361.9 693.9 moveto
10 f4
(df) show
373.9 693.9 moveto
12 f0
( are calculated. The) show
0 680.6 moveto
12 f0
(remaining arrays are used internally by CONMIN.) show
0 651.7 moveto
14 f1
(CALLING STATEMENT) show
0 624.7 moveto
12 f0
(CONMIN is now called by the FORTRAN statement:) show
0 600.8 moveto
10 f4
(CALL CONMIN \(X, VLB, VUB, G, SCAL, DF, A, S, G1, G2, B, C, ISC, IC, MS1, N1, N2, N3,) show
0 587.6 moveto
10 f4
(N4, N5\)) show
42 587.6 moveto
12 f0
(.) show
0 561 moveto
12 f0
(CAUTION: Check that the values of ) show
179.3 561 moveto
10 f4
(N1, N2, N3, N4) show
263.3 561 moveto
12 f0
( and ) show
286.6 561 moveto
10 f4
(N5) show
298.6 561 moveto
12 f0
( in the calling statement are consistent) show
0 547.7 moveto
12 f0
(with the array dimensions discussed above.) show
0 518.8 moveto
14 f1
(PARAMETER CHANGES) show
0 491.8 moveto
12 f0
(Variable ) show
44.3 491.8 moveto
10 f4
(NACMX1) show
80.3 491.8 moveto
12 f0
( defined in common block ) show
209.2 491.8 moveto
10 f4
(CNMN1) show
239.2 491.8 moveto
12 f0
( is replaced by ) show
311.8 491.8 moveto
10 f4
(N3) show
323.8 491.8 moveto
12 f0
( in the parameter list.) show
0 465.2 moveto
12 f0
(A new parameter, ) show
88.6 465.2 moveto
10 f4
(INFOG) show
118.6 465.2 moveto
12 f0
(, has been added: ) show
0 441.3 moveto
10 f4
(     INFOG = 0:   same as when INFOG was not used.) show
0 420.3 moveto
10 f4
(     INFOG = 1:   only those constraints identified as active or violated) show
0 409.8 moveto
10 f4
(                  in array IC\(I\), I = 1, NAC need be evaluated.  This is) show
0 399.3 moveto
10 f4
(                  only meaningful if finite difference gradients are) show
0 388.8 moveto
10 f4
(                  calculated, and allows the user to avoid) show
0 378.3 moveto
10 f4
(                  calculating non-essential information.  If it is) show
0 367.8 moveto
10 f4
(                  convenient to evaluate all constraints each time,) show
0 357.3 moveto
10 f4
(                  variable INFOG may be ignored.) show
0 333.6 moveto
12 f0
(The parameters ) show
77.3 333.6 moveto
10 f4
(ALPHAX) show
113.3 333.6 moveto
12 f0
( and ) show
136.6 333.6 moveto
10 f4
(ABOBJ1) show
172.6 333.6 moveto
12 f0
( have been added to ) show
270.9 333.6 moveto
10 f4
(CNMN1) show
300.9 333.6 moveto
12 f0
(.) show
0 307 moveto
10 f4
(ALPHAX) show
36 307 moveto
12 f0
( \(default = 0.1\) is the maximum fractional change in any component of ) show
379.3 307 moveto
10 f4
(X) show
385.3 307 moveto
12 f0
( as an initial estimate for) show
0 293.7 moveto
10 f4
(ALPHA) show
30 293.7 moveto
12 f0
( in the one-dimensional search. That is, the initial ) show
270.3 293.7 moveto
10 f4
(ALPHA) show
300.3 293.7 moveto
12 f0
( will be such that no component of ) show
469.6 293.7 moveto
10 f4
(X) show
475.6 293.7 moveto
12 f0
( is) show
0 280.4 moveto
12 f0
(changed by more than this amount. This only applies to those ) show
297.9 280.4 moveto
10 f4
(X\(i\)) show
321.9 280.4 moveto
12 f0
( of magnitude greater than 0.1. If an) show
0 267.1 moveto
12 f0
(optimization run shows numerous ) show
165.9 267.1 moveto
10 f4
(ALPHA) show
195.9 267.1 moveto
12 f0
( = 0 results for the one-dimensional search, it may help to try) show
0 253.8 moveto
10 f4
(ALPHAX) show
36 253.8 moveto
12 f0
( less than the default. ) show
140.6 253.8 moveto
10 f4
(ALPHAX) show
176.6 253.8 moveto
12 f0
( is changed by CONMIN depending on the progress of the) show
0 240.5 moveto
12 f0
(optimization.) show
0 213.9 moveto
10 f4
(ABOBJ1) show
36 213.9 moveto
12 f0
( \(default = 0.1\) is the fractional change attempted as a first step in the one-dimensional search) show
0 200.6 moveto
12 f0
(and is based on a linear approximation. ) show
191.3 200.6 moveto
10 f4
(ABOBJ1) show
227.3 200.6 moveto
12 f0
( is updated during the optimization, depending on) show
0 187.3 moveto
12 f0
(progress. The initial step in the one-dimensional search is taken as the amount necessary to change ) show
476.9 187.3 moveto
10 f4
(OBJ) show
0 174 moveto
12 f0
(by ) show
14.9 174 moveto
10 f4
(ABOBJ1*ABS\(OBJ\)) show
104.9 174 moveto
12 f0
( or to change some ) show
198.5 174 moveto
10 f4
(X\(i\)) show
222.5 174 moveto
12 f0
( by ) show
240.4 174 moveto
10 f4
(ALPHAX*ABS\( X\(i\) \)) show
348.4 174 moveto
12 f0
(, whichever is less.) show
0 147.4 moveto
12 f0
(The definition of parameter INFO has changed. The current definition is: ) show
0 123.5 moveto
10 f4
(    INFO = 1:  calculate OBJ and G\(I\), I = 1, NCON) show
0 102.5 moveto
10 f4
(    INFO = 2:  calculate NAC, IC\(I\), I = 1,NAC, the gradient of OBJ, and ) show
0 92 moveto
10 f4
(               the gradient of G\(J\), where J = IC\(I\), I = 1,NAC.) show
0 81.5 moveto
10 f4
(               Store the gradients of G in columns of A.) show
pagelevel restore
showpage
%%Page: 4 4
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
0 705.8 moveto
12 f0
(The definition of the finite difference gradient parameter, ) show
278.2 705.8 moveto
10 f4
(NFDG) show
302.2 705.8 moveto
12 f0
( has changed. The current definition is: ) show
0 681.9 moveto
10 f4
(    NFDG = 0:  all gradient information is calculated by finite difference) show
0 671.4 moveto
10 f4
(               within CONMIN.) show
0 650.4 moveto
10 f4
(    NFDG = 1:  all gradient information is supplied by the user.) show
0 629.4 moveto
10 f4
(    NFDG = 2:  the gradient of OBJ is supplied by the user and the) show
0 618.9 moveto
10 f4
(               gradients of constraints are calculated by finite) show
0 608.4 moveto
10 f4
(               difference within CONMIN.) show
0 584.7 moveto
12 f0
(Additional printing is now available using the IPRINT parameter: ) show
0 560.8 moveto
10 f4
(    IPRINT = 1, 2, 3, 4:  same as before.) show
0 539.8 moveto
10 f4
(    IPRINT = 5:  all of above plus each proposed design vector, objective) show
0 529.3 moveto
10 f4
(                 and constraints during the one-dimensional search.) show
0 503.3 moveto
14 f1
(GRADIENT STORAGE) show
0 476.3 moveto
12 f0
(The gradients of active or violated constraints are now stored in the ) show
326.6 476.3 moveto
12 f2
(columns) show
366.5 476.3 moveto
12 f0
( of array [) show
414.1 476.3 moveto
10 f4
(A) show
420.1 476.3 moveto
12 f0
(], instead of the) show
0 463 moveto
12 f2
(rows) show
23.3 463 moveto
12 f0
( of [) show
43.2 463 moveto
10 f4
(A) show
49.2 463 moveto
12 f0
(]. This is for computational efficiency and convenience. Also, it sometimes simplifies) show
0 449.7 moveto
12 f0
(programming associated with user-supplied gradients \() show
263.6 449.7 moveto
10 f4
(NFDG) show
287.6 449.7 moveto
12 f0
( = 1\). This change only effects those users) show
0 436.4 moveto
12 f0
(who use the ) show
60.3 436.4 moveto
10 f4
(NFDG) show
84.3 436.4 moveto
12 f0
( = 1 option. If gradients of constraints are calculated by CONMIN the user only needs) show
0 423.1 moveto
12 f0
(to be sure that array [) show
102.2 423.1 moveto
10 f4
(A) show
108.2 423.1 moveto
12 f0
(] is correctly dimensioned in the calling program. ) show
0 394.2 moveto
14 f1
(OVERLAY/RESTART CAPABILITY) show
0 367.2 moveto
12 f0
(CONMIN can now be in its own overlay. It is only required that the arrays be saved in overlay zero as) show
0 353.9 moveto
12 f0
(well as the contents of common blocks ) show
189.6 353.9 moveto
10 f4
(CNMN1) show
219.6 353.9 moveto
12 f0
( and ) show
242.9 353.9 moveto
10 f4
(CONSAV) show
278.9 353.9 moveto
12 f0
(. ) show
284.8 353.9 moveto
10 f4
(CONSAV) show
320.8 353.9 moveto
12 f0
( contains 50 real parameters followed) show
0 340.6 moveto
12 f0
(by 25 integer parameters:) show
0 316.7 moveto
10 f4
(COMMON /CONSAV/ REAL\(50\), INT\(25\)) show
0 293 moveto
12 f0
(This also allows the user to restart CONMIN at any point during the optimization. Upon return from) show
0 279.7 moveto
12 f0
(CONMIN it is only necessary to write the information in the parameter list \(all arrays plus ) show
436.6 279.7 moveto
10 f4
(N1 - N5) show
478.6 279.7 moveto
12 f0
(\) on) show
0 266.4 moveto
12 f0
(disc, together with the contents of ) show
165.6 266.4 moveto
10 f4
(CNMN1) show
195.6 266.4 moveto
12 f0
( and ) show
218.9 266.4 moveto
10 f4
(CONSAV) show
254.9 266.4 moveto
12 f0
(. The program can be restarted by reading this) show
0 253.1 moveto
12 f0
(information back from disc and continuing the program execution from this point. ) show
0 224.2 moveto
14 f1
(DOUBLE PRECISION OPERATIONS) show
0 197.2 moveto
12 f0
(Occasionally it is desirable to use CONMIN in double precision, usually on an IBM machine. To do) show
0 183.9 moveto
12 f0
(this, add implicit ) show
84 183.9 moveto
10 f4
(READ*8 A-H, O-Z) show
174 183.9 moveto
12 f0
( cards at the beginning of each routine.) show
0 157.3 moveto
12 f0
(NOTE: This has not been tested because on unavailability of an IBM computer, but care has been taken) show
0 144 moveto
12 f0
(to insure that no parity errors will occur. If you use double precision please inform the author of success) show
0 130.7 moveto
12 f0
(or failure so other users can be assured of the operational status of this option.) show
0 108.3 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
199.7 90.8 moveto
12 f0
([Original NASA TM]) show
pagelevel restore
showpage
%%Page: 5 5
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
0 683.4 moveto
10 f4
(NASA TECHNICAL                                       NASA TM X-62,282) show
0 672.9 moveto
10 f4
(     MEMORANDUM) show
0 651.9 moveto
10 f4
(CONMIN - A FORTRAN PROGRAM FOR CONSTRAINED FUNCTION MINIMIZATION) show
0 641.4 moveto
10 f4
(USER'S MANUAL) show
0 609.9 moveto
10 f4
(Garret N. Vanderplaats) show
0 558.9 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
202.5 522 moveto
18 f1
(CONTENTS) show
28 494.1 moveto
12 f0
(        ) show
51.9 494.1 moveto
12 f0
(SUMMARY) show
28 467.5 moveto
12 f0
(I.     ) show
49.9 467.5 moveto
12 f0
(INTRODUCTION) show
28 440.9 moveto
12 f0
(II.    ) show
50.9 440.9 moveto
12 f0
(MAKING CONMIN OPERATIONAL) show
28 414.3 moveto
12 f0
(III.   ) show
51.9 414.3 moveto
12 f0
(PROGRAM ORGANIZATION) show
28 387.7 moveto
12 f0
(IV.   ) show
52.6 387.7 moveto
12 f0
(PARAMETERS DEFINED IN MAIN PROGRAM) show
28 361.1 moveto
12 f0
(V.    ) show
51.6 361.1 moveto
12 f0
(PARAMETERS DEFINED IN EXTERNAL ROUTINE) show
28 334.5 moveto
12 f0
(VI.   ) show
52.6 334.5 moveto
12 f0
(PARAMETERS DEFINED IN CONMIN AND ASSOCIATED ROUTINES) show
28 307.9 moveto
12 f0
(VII.  ) show
53.6 307.9 moveto
12 f0
(REQUIRED DIMENSIONS OF ARRAYS) show
28 281.3 moveto
12 f0
(VIII. ) show
54.6 281.3 moveto
12 f0
(EXAMPLES) show
28 254.7 moveto
12 f0
(Appendices ) show
28 241.4 moveto
12 f0
(A.     ) show
54.6 241.4 moveto
12 f0
(SUMMARY OF PARAMETERS USED BY CONMIN) show
322.9 241.4 moveto
12 f0
( ) show
28 228.1 moveto
12 f0
(B.     ) show
54 228.1 moveto
12 f0
(CONMIN SUBROUTINE DESCRIPTIONS) show
28 201.5 moveto
12 f0
(        ) show
51.9 201.5 moveto
12 f0
(REFERENCES) show
28 174.9 moveto
12 f0
(LIST OF EXAMPLES) show
56 148.3 moveto
12 f0
(LISTING NO. ) show
40.5 135 moveto
12 f0
(1.) show
56 135 moveto
12 f0
(Main Program, Examples 1 and 2.) show
220.3 135 moveto
12 f0
( ) show
40.5 121.7 moveto
12 f0
(2.) show
56 121.7 moveto
12 f0
(Analysis Routine for Example 1.) show
213.6 121.7 moveto
12 f0
( ) show
40.5 108.4 moveto
12 f0
(3.) show
56 108.4 moveto
12 f0
(Optimization Results for Example 1.) show
232.3 108.4 moveto
12 f0
( ) show
40.5 95.1 moveto
12 f0
(4.) show
56 95.1 moveto
12 f0
(Analysis Routine for Example 2.) show
213.6 95.1 moveto
12 f0
( ) show
40.5 81.8 moveto
12 f0
(5.) show
56 81.8 moveto
12 f0
(Optimization Results for Example 2.) show
232.3 81.8 moveto
12 f0
( ) show
pagelevel restore
showpage
%%Page: 6 6
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
40.5 709.2 moveto
12 f0
(6.) show
56 709.2 moveto
12 f0
(Main Program and Analysis For Example 3.) show
268.3 709.2 moveto
12 f0
( ) show
40.5 695.9 moveto
12 f0
(7.) show
56 695.9 moveto
12 f0
(Optimization Results For Example 3.) show
235 695.9 moveto
12 f0
( ) show
28 669.3 moveto
12 f0
(        ) show
51.9 669.3 moveto
12 f0
(ADDENDUM) show
121.8 669.3 moveto
12 f0
( \(1978\)) show
0 625.9 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
214.7 592.8 moveto
14 f1
(SUMMARY) show
0 565.8 moveto
12 f0
(CONMIN is a FORTRAN program, in subroutine form, for the solution of linear or nonlinear) show
0 552.5 moveto
12 f0
(constrained optimization problems. The basic optimization algorithm is the Method of Feasible) show
0 539.2 moveto
12 f0
(Directions. The user must provide a main calling program and an external routine to evaluate the) show
0 525.9 moveto
12 f0
(objective and constraint functions and to provide gradient information. If analytic gradients of the) show
0 512.6 moveto
12 f0
(objective or constraint functions are not available, this information is calculated by finite difference.) show
0 499.3 moveto
12 f0
(While the program is intended primarily for efficient solution of constrained problems, unconstrained) show
0 486 moveto
12 f0
(function minimization problems may also be solved, and the conjugate direction method of Fletcher and) show
0 472.7 moveto
12 f0
(Reeves is used for this purpose. This manual describes the use of CONMIN and defines all necessary) show
0 459.4 moveto
12 f0
(parameters. Sufficient information is provided so that the program can be used without special) show
0 446.1 moveto
12 f0
(knowledge of optimization techniques. Sample problems are included to help the user become familiar) show
0 432.8 moveto
12 f0
(with CONMIN and to make the program operational. ) show
0 410.4 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
216 377.3 moveto
14 f1
(SECTION I) show
196 348 moveto
14 f1
(INTRODUCTION) show
0 321 moveto
12 f0
(In many mathematical problems, it is necessary to determine the minimum or maximum of a function of) show
0 307.7 moveto
12 f0
(several variables, limited by various linear and nonlinear inequality constraints. It is seldom possible, in) show
0 294.4 moveto
12 f0
(practical applications, to solve these problems directly, and iterative methods are used to obtain the) show
0 281.1 moveto
12 f0
(numerical solution. Machine-calculation of this solution is, of course, desirable and the CONMIN) show
0 267.8 moveto
12 f0
(program has been developed to solve a wide variety of such problems.) show
0 241.2 moveto
12 f0
(CONMIN is a FORTRAN program, in subroutine form, for the minimization of a multi-variable) show
0 227.9 moveto
12 f0
(function subject to a set of inequality constraints. The general minimization problem is: Find values for) show
0 214.6 moveto
12 f0
(the set of variables, ) show
96.3 214.6 moveto
10 f4
(X\(I\)) show
120.3 214.6 moveto
12 f0
(, to) show
0 190.7 moveto
10 f4
(     Minimize    OBJ) show
0 169.7 moveto
10 f4
(     Subject to:) show
0 148.7 moveto
10 f4
(          G\(J\).LE.0                          J = 1,NCON) show
0 127.7 moveto
10 f4
(          VLB\(I\).LE.X\(I\).LE.VUB\(I\)           I = 1,NDV      NSIDE.GT.0) show
0 104 moveto
12 f0
(where ) show
32.3 104 moveto
10 f4
(OBJ) show
50.3 104 moveto
12 f0
( is a general function \(objective function\) of the variables, ) show
331.9 104 moveto
10 f4
(X\(I\)) show
355.9 104 moveto
12 f0
( referred to hereafter as) show
0 90.7 moveto
12 f0
(decision variables. ) show
92.3 90.7 moveto
10 f4
(OBJ) show
110.3 90.7 moveto
12 f0
( need not be a simple analytic function, and may be any function which can be) show
0 77.4 moveto
12 f0
(numerically evaluated.) show
pagelevel restore
showpage
%%Page: 7 7
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
0 698.8 moveto
10 f4
(G\(J\)) show
24 698.8 moveto
12 f0
( is the value of the ) show
115.3 698.8 moveto
10 f4
(J) show
121.3 698.8 moveto
12 f0
(th inequality constraint, which is also a function of the ) show
385.6 698.8 moveto
10 f4
(X\(I\)) show
409.6 698.8 moveto
12 f0
(. ) show
415.5 698.8 moveto
10 f4
(NCON) show
439.5 698.8 moveto
12 f0
( is the) show
0 685.5 moveto
12 f0
(number of constraints, ) show
110.6 685.5 moveto
10 f4
(G\(J\)) show
134.6 685.5 moveto
12 f0
(. ) show
140.5 685.5 moveto
10 f4
(NCON) show
164.5 685.5 moveto
12 f0
( may be zero. ) show
232.1 685.5 moveto
10 f4
(VLB\(I\)) show
268.1 685.5 moveto
12 f0
( and ) show
291.4 685.5 moveto
10 f4
(VUB\(I\)) show
327.4 685.5 moveto
12 f0
( are lower and upper bounds) show
0 672.2 moveto
12 f0
(respectively on variable ) show
117.6 672.2 moveto
10 f4
(X\(I\)) show
141.6 672.2 moveto
12 f0
(, and are referred to as side constraints. ) show
332.2 672.2 moveto
10 f4
(NSIDE) show
362.2 672.2 moveto
12 f0
( = 0 indicates that no lower) show
0 658.9 moveto
12 f0
(or upper bounds are prescribed. If ) show
165.6 658.9 moveto
10 f4
(NCON) show
189.6 658.9 moveto
12 f0
( = 0 and ) show
231.6 658.9 moveto
10 f4
(NSIDE) show
261.6 658.9 moveto
12 f0
( = 0, the objective function is said to be) show
0 645.6 moveto
12 f0
(unconstrained. ) show
73.3 645.6 moveto
10 f4
(NDV) show
91.3 645.6 moveto
12 f0
( is the total number of decision variables, ) show
292.2 645.6 moveto
10 f4
(X\(I\)) show
316.2 645.6 moveto
12 f0
(.) show
0 619 moveto
12 f0
(Constraint ) show
53 619 moveto
10 f4
(G\(J\)) show
77 619 moveto
12 f0
( is defined as active if ) show
184.9 619 moveto
10 f4
(CT.LE.G\(J\).LE.ABS\(CT\)) show
310.9 619 moveto
12 f0
( and violated if ) show
386.2 619 moveto
10 f4
(G\(J\).GT.ABS\(CT\)) show
476.2 619 moveto
12 f0
(,) show
0 605.7 moveto
12 f0
(where constraint thickness, ) show
133.3 605.7 moveto
10 f4
(CT) show
145.3 605.7 moveto
12 f0
(, is a small specified negative number. The numerical significance of ) show
478.8 605.7 moveto
10 f4
(CT) show
0 592.4 moveto
12 f0
(may be understood by referring to ) show
166.6 592.4 moveto
12 f0
(Fig. 1) show
194.6 592.4 moveto
12 f0
(, which shows a single constraint in a two variable design space.) show
0 579.1 moveto
12 f0
(Constraint ) show
53 579.1 moveto
10 f4
(G\(J\)) show
77 579.1 moveto
12 f0
( is mathematically equal to zero along a single curve in design space. However, on a) show
0 565.8 moveto
12 f0
(digital computer, the exact value of ) show
172.9 565.8 moveto
10 f4
(G\(J\)) show
196.9 565.8 moveto
12 f0
( = 0 can seldom be obtained. Therefore, the "curve" becomes a) show
0 552.5 moveto
12 f0
(thick band with constraint thickness of ) show
188.6 552.5 moveto
10 f4
(2*ABS\(CT\)) show
242.6 552.5 moveto
12 f0
( over which ) show
302.2 552.5 moveto
10 f4
(G\(J\)) show
326.2 552.5 moveto
12 f0
( is assumed to be zero. Because all) show
0 539.2 moveto
10 f4
(G\(J\)) show
24 539.2 moveto
12 f0
( must be negative, ) show
114.3 539.2 moveto
10 f4
(CT) show
126.3 539.2 moveto
12 f0
( is taken as a negative number for consistency so that any ) show
404.9 539.2 moveto
10 f4
(G\(J\).GT.CT) show
464.9 539.2 moveto
12 f0
( is) show
0 525.9 moveto
12 f0
(defined as active \(or violated\) if ) show
156.6 525.9 moveto
10 f4
(G\(J\).GT.ABS\(CT\)) show
246.6 525.9 moveto
12 f0
(. While it may seem logical to choose a very small) show
0 512.6 moveto
12 f0
(value \(in magnitude\) for ) show
119.9 512.6 moveto
10 f4
(CT) show
131.9 512.6 moveto
12 f0
( \(say -1.0E-6\), the nature of the optimization algorithm used by CONMIN is) show
0 499.3 moveto
12 f0
(such that more numerical stability can be achieved by taking ) show
293.9 499.3 moveto
10 f4
(CT) show
305.9 499.3 moveto
12 f0
( = -0.1 or even -0.2. ) show
404.3 499.3 moveto
10 f4
(CT) show
416.3 499.3 moveto
12 f0
( is used for) show
0 486 moveto
12 f0
(numerical stability only, and when the optimization is complete, one or more constraints, ) show
430.6 486 moveto
10 f4
(G\(J\)) show
454.6 486 moveto
12 f0
(, will) show
0 472.7 moveto
12 f0
(usually be very near zero, as seen in the examples in ) show
254.6 472.7 moveto
12 f0
(SECTION VIII) show
328.9 472.7 moveto
12 f0
(.) show
0 446.1 moveto
12 f0
(It is desirable that ) show
88.6 446.1 moveto
10 f4
(G\(J\)) show
112.6 446.1 moveto
12 f0
( be normalized so that) show
0 422.2 moveto
10 f4
(     -1 .LE. G\(J\) .LE. 1             J = 1, NCON) show
0 398.5 moveto
12 f0
(In this way the constraint thickness, ) show
174.9 398.5 moveto
10 f4
(CT) show
186.9 398.5 moveto
12 f0
(, has the same numerical significance for all ) show
401.1 398.5 moveto
10 f4
(G\(J\)) show
425.1 398.5 moveto
12 f0
(. It is not) show
0 385.2 moveto
12 f0
(necessary that all ) show
85.6 385.2 moveto
10 f4
(G\(J\)) show
109.6 385.2 moveto
12 f0
( be precisely in this form, and such normalization may not be possible. However,) show
0 371.9 moveto
12 f0
(it is important that all ) show
106.3 371.9 moveto
10 f4
(G\(J\)) show
130.3 371.9 moveto
12 f0
( at least be of the same order of magnitude. For example, assume that some) show
0 358.6 moveto
10 f4
(G\(J\) = X\(1\)**2-X\(2\)) show
114 358.6 moveto
12 f0
(. If ) show
130.9 358.6 moveto
10 f4
(X\(1\)) show
154.9 358.6 moveto
12 f0
( and ) show
178.2 358.6 moveto
10 f4
(X\(2\)) show
202.2 358.6 moveto
12 f0
( are expected to be of order 100 for the particular problem) show
0 345.3 moveto
12 f0
(under consideration, ) show
100.9 345.3 moveto
10 f4
(G\(J\)) show
124.9 345.3 moveto
12 f0
( may be scaled by dividing by 10,000 to provide a value for ) show
414.1 345.3 moveto
10 f4
(G\(J\)) show
438.1 345.3 moveto
12 f0
( of order one.) show
0 318.7 moveto
12 f0
(The basic analytic technique used by CONMIN is to minimize ) show
303.2 318.7 moveto
10 f4
(OBJ) show
321.2 318.7 moveto
12 f0
( until one or more constraints, ) show
468.1 318.7 moveto
10 f4
(G\(J\)) show
492.1 318.7 moveto
12 f0
(,) show
0 305.4 moveto
12 f0
(become active. The minimization process then continues by following the constraint boundaries in a) show
0 292.1 moveto
12 f0
(direction such that the value of ) show
151.3 292.1 moveto
10 f4
(OBJ) show
169.3 292.1 moveto
12 f0
( continues to decrease. When a point is reached such that no further) show
0 278.8 moveto
12 f0
(decrease in ) show
56.6 278.8 moveto
10 f4
(OBJ) show
74.6 278.8 moveto
12 f0
( can be obtained, the process is terminated. The value of the constraint thickness) show
0 265.5 moveto
12 f0
(parameter, ) show
53.9 265.5 moveto
10 f4
(CT) show
65.9 265.5 moveto
12 f0
(, and the normalization of the constraints, ) show
268.2 265.5 moveto
10 f4
(G\(J\)) show
292.2 265.5 moveto
12 f0
(, have considerable effect on the numerical) show
0 252.2 moveto
12 f0
(stability and rate of convergence of the optimization process.) show
0 225.6 moveto
12 f0
(An example of a constrained nonlinear problem is the minimization of the four variable Rosen-Suzuki) show
0 212.3 moveto
12 f0
(function \() show
46.9 212.3 moveto
12 f0
(ref. 1) show
72.2 212.3 moveto
12 f0
(\):) show
0 188.4 moveto
10 f4
(     MINIMIZE OBJ = X\(1\)**2 - 5*X\(1\) + X\(2\)**2 - 5*X\(2\) +) show
0 177.9 moveto
10 f4
(                    2*X\(3\)**2 - 21*X\(3\) + X\(4\)**2 + 7*X\(4\) + 50) show
0 156.9 moveto
10 f4
(     Subject to:) show
0 135.9 moveto
10 f4
(         G\(1\) = X\(1\)**2 + X\(1\) + X\(2\)**2 - X\(2\) +) show
0 125.4 moveto
10 f4
(                X\(3\)**2 + X\(3\) + X\(4\)**2 - X\(4\) - 8  .LE. 0) show
0 104.4 moveto
10 f4
(         G\(2\) = X\(1\)**2 - X\(1\) + 2*X\(2\)**2 + X\(3\)**2 +) show
0 93.9 moveto
10 f4
(                2*X\(4\)**2 - X\(4\) - 10                .LE. 0) show
pagelevel restore
showpage
%%Page: 8 8
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
0 711.9 moveto
10 f4
(         G\(3\) = 2*X\(1\)**2 + 2*X\(1\) + X\(2\)**2 - X\(2\) +) show
0 701.4 moveto
10 f4
(                X\(3\)**2 - X\(4\) - 5                   .LE. 0) show
0 677.7 moveto
12 f0
(This problem has four decision variables and three constraints, \() show
307.9 677.7 moveto
10 f4
(NDV = 4, NCON = 3) show
409.9 677.7 moveto
12 f0
(\). No lower or) show
0 664.4 moveto
12 f0
(upper bounds ) show
67.9 664.4 moveto
10 f4
(VLB\(I\)) show
103.9 664.4 moveto
12 f0
( or ) show
119.8 664.4 moveto
10 f4
(VUB\(I\)) show
155.8 664.4 moveto
12 f0
( are prescribed so control parameter ) show
331 664.4 moveto
10 f4
(NSIDE) show
361 664.4 moveto
12 f0
( is specified as ) show
434.3 664.4 moveto
10 f4
(NSIDE = 0) show
488.3 664.4 moveto
12 f0
( to) show
0 651.1 moveto
12 f0
(indicate this. It is necessary to provide a set of initial values for ) show
306.6 651.1 moveto
10 f4
(X\(I\)) show
330.6 651.1 moveto
12 f0
(, and from this the constrained) show
0 637.8 moveto
12 f0
(optimum is obtained by CONMIN and its associated routines. This problem will be solved using) show
0 624.5 moveto
12 f0
(CONMIN in ) show
63.9 624.5 moveto
12 f0
(SECTION VIII) show
138.2 624.5 moveto
12 f0
(.) show
0 597.9 moveto
12 f0
(The minimization algorithm is based on Zoutendijk's method of feasible directions \() show
405.6 597.9 moveto
12 f0
(ref. 2) show
430.9 597.9 moveto
12 f0
(\). The) show
0 584.6 moveto
12 f0
(algorithm has been modified to improve efficiency and numerical stability and to solve optimization) show
0 571.3 moveto
12 f0
(problems in which one or more constraints, ) show
211.3 571.3 moveto
10 f4
(G\(J\)) show
235.3 571.3 moveto
12 f0
(, are initially violated \() show
344.9 571.3 moveto
12 f0
(ref. 3) show
370.2 571.3 moveto
12 f0
(\). While the program is) show
0 558 moveto
12 f0
(intended primarily for the efficient solution of constrained functions, unconstrained functions may also) show
0 544.7 moveto
12 f0
(be minimized \() show
72.6 544.7 moveto
10 f4
(NCON = 0) show
120.6 544.7 moveto
12 f0
( and ) show
143.9 544.7 moveto
10 f4
(NSIDE = 0) show
197.9 544.7 moveto
12 f0
(\), and the conjugate direction method of Fletcher and Reeves) show
0 531.4 moveto
12 f0
(\() show
3.9 531.4 moveto
12 f0
(ref. 4) show
29.2 531.4 moveto
12 f0
(\) is used for this purpose. If a function is to be maximized, this may be achieved by minimizing) show
0 518.1 moveto
12 f0
(the negative of the function.) show
0 491.5 moveto
12 f0
(For constrained minimization problems, the initial design need not be feasible \(one or more ) show
442.2 491.5 moveto
10 f4
(G\(J\)) show
466.2 491.5 moveto
12 f0
( may) show
0 478.2 moveto
12 f0
(be greater than ) show
74.3 478.2 moveto
10 f4
(ABS\(CT\)) show
116.3 478.2 moveto
12 f0
(\), and a feasible solution \(if one exists\) is obtained with a minimal increase in) show
0 464.9 moveto
12 f0
(the value of the objective function.) show
0 438.3 moveto
12 f0
(The user must supply a main program to call subroutine CONMIN along with an external subroutine to) show
0 425 moveto
12 f0
(evaluate the objective function, constraint functions and the analytic gradient of the objective and) show
0 411.7 moveto
12 f0
(currently active or violated constraint functions. At any given time in the minimization process, gradient) show
0 398.4 moveto
12 f0
(information is required only for constraints which are active or violated \() show
350.2 398.4 moveto
10 f4
(G\(J\).GE.CT) show
410.2 398.4 moveto
12 f0
(\). Gradients are) show
0 385.1 moveto
12 f0
(calculated by finite difference if this information is not directly obtainable, and a subroutine is included) show
0 371.8 moveto
12 f0
(with CONMIN for this purpose.) show
0 345.2 moveto
12 f0
(The basic program organization is described here, and sufficient information is provided so that the) show
0 331.9 moveto
12 f0
(program may be used without special knowledge of optimization techniques. The various control) show
0 318.6 moveto
12 f0
(parameters are described and the required dimensions of all arrays are given so that the user can limit) show
0 305.3 moveto
12 f0
(storage requirements to that necessary to solve his particular problems. Sample problems are included to) show
0 292 moveto
12 f0
(aid the user in making the program operational and to gain familiarity with its use.) show
0 265.4 moveto
12 f0
(A summary of all parameters used by CONMIN and its associated routines is given in ) show
416.2 265.4 moveto
12 f0
(APPENDIX A) show
0 252.1 moveto
12 f0
(for convenient reference.) show
0 225.5 moveto
12 f0
(APPENDIX B) show
70.3 225.5 moveto
12 f0
( contains a brief description of the subroutines associated with CONMIN. ) show
0 203.1 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
213.3 170 moveto
14 f1
(SECTION II) show
136.1 140.7 moveto
14 f1
(MAKING CONMIN OPERATIONAL) show
0 113.7 moveto
12 f0
(CONMIN utilizes iterative techniques to numerically obtain the minimum of a general function, subject) show
0 100.4 moveto
12 f0
(to a prescribed set of linear and/or nonlinear constraints. Because of the nature of these techniques, the) show
0 87.1 moveto
12 f0
(efficiency of the optimization process \(the number of times the functions must be evaluated\) can often) show
pagelevel restore
showpage
%%Page: 9 9
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
0 709.2 moveto
12 f0
(be improved by the proper choice of control parameters to deal effectively with a given problem. For) show
0 695.9 moveto
12 f0
(this reason, it is particularly desirable that the new user solve several simple two to five variable) show
0 682.6 moveto
12 f0
(problems, experimenting with different control parameters. The following steps are suggested to help) show
0 669.3 moveto
12 f0
(the user make CONMIN operational and to gain the familiarity necessary for its efficient application to a) show
0 656 moveto
12 f0
(particular problem.) show
12.5 629.4 moveto
12 f0
(1.) show
28 629.4 moveto
12 f0
(Obtain the source code, including example problems.) show
12.5 602.8 moveto
12 f0
(2.) show
28 602.8 moveto
12 f0
(Read SECTION VIII \() show
136.9 602.8 moveto
12 f0
(EXAMPLES) show
200.2 602.8 moveto
12 f0
(\) of this manual.) show
12.5 576.2 moveto
12 f0
(3.) show
28 576.2 moveto
12 f0
(Solve the example problems using CONMIN, and verify the results by comparison with the output) show
28 562.9 moveto
12 f0
(listed in this manual. Note that the precise numerical values may differ slightly on different) show
28 549.6 moveto
12 f0
(computers.) show
12.5 523 moveto
12 f0
(4.) show
28 523 moveto
12 f0
(Read this entire manual carefully.) show
12.5 496.4 moveto
12 f0
(5.) show
28 496.4 moveto
12 f0
(Devise several two to five variable unconstrained and constrained minimization problems and) show
28 483.1 moveto
12 f0
(solve them using CONMIN. If the precise optimum can be determined analytically, compare this) show
28 469.8 moveto
12 f0
(with the optimums obtained using CONMIN.) show
12.5 443.2 moveto
12 f0
(6.) show
28 443.2 moveto
12 f0
(Experiment by starting from several different initial points \(different initial ) show
391.2 443.2 moveto
10 f4
(X) show
397.2 443.2 moveto
12 f0
( vectors\). This is) show
28 429.9 moveto
12 f0
(good practice in all optimization problems, since it improves the chances that the absolute) show
28 416.6 moveto
12 f0
(minimum is obtained \(instead of a relative minimum\).) show
12.5 390 moveto
12 f0
(7.) show
28 390 moveto
12 f0
(Experiment with various analytic gradient options by solving the same problems with and without) show
28 376.7 moveto
12 f0
(calculating precise analytic gradients \(see examples 1 and 2 of ) show
330.5 376.7 moveto
12 f0
(SECTION VIII) show
404.8 376.7 moveto
12 f0
(\).) show
12.5 350.1 moveto
12 f0
(8.) show
28 350.1 moveto
12 f0
(Experiment with various convergence criteria, ) show
253.2 350.1 moveto
10 f4
(DELFUN, DABFUN and ITRM) show
391.2 350.1 moveto
12 f0
(.) show
12.5 323.5 moveto
12 f0
(9.) show
28 323.5 moveto
12 f0
(Experiment with various constraint thickness parameters, ) show
306.2 323.5 moveto
10 f4
(CT, CTMIN, CTL) show
390.2 323.5 moveto
12 f0
( and ) show
413.5 323.5 moveto
10 f4
(CTLMIN) show
449.5 323.5 moveto
12 f0
( to) show
28 310.2 moveto
12 f0
(understand the effect of these parameters on constrained minimization problems.) show
6.5 283.6 moveto
12 f0
(10.) show
28 283.6 moveto
12 f0
(Experiment with various values of the push-off factor, ) show
291.6 283.6 moveto
10 f4
(THETA) show
321.6 283.6 moveto
12 f0
(, on several constrained minimization) show
28 270.3 moveto
12 f0
(problems. Small values of ) show
156.3 270.3 moveto
10 f4
(THETA) show
186.3 270.3 moveto
12 f0
( may be used if constraints, ) show
320.6 270.3 moveto
10 f4
(G\(J\)) show
344.6 270.3 moveto
12 f0
(, are nearly linear functions of) show
28 257 moveto
12 f0
(the decision variables, ) show
137.9 257 moveto
10 f4
(X\(I\)) show
161.9 257 moveto
12 f0
(, and larger values should be used if one or more ) show
398.5 257 moveto
10 f4
(G\(J\)) show
422.5 257 moveto
12 f0
( are highly) show
28 243.7 moveto
12 f0
(nonlinear.) show
6.5 217.1 moveto
12 f0
(11.) show
28 217.1 moveto
12 f0
(Experiment with scaling options by using no scaling, automatic scaling, or user provided scaling) show
28 203.8 moveto
12 f0
(options.) show
6.5 177.2 moveto
12 f0
(12.) show
28 177.2 moveto
12 f0
(Experiment with various conjugate direction restart parameters, ) show
336.6 177.2 moveto
10 f4
(ICNDIR) show
372.6 177.2 moveto
12 f0
(, using examples of) show
28 163.9 moveto
12 f0
(unconstrained minimization. Note that if ) show
225.9 163.9 moveto
10 f4
(ICNDIR = 1) show
285.9 163.9 moveto
12 f0
(, the steepest descent method will be used) show
28 150.6 moveto
12 f0
(throughout the optimization process.) show
6.5 124 moveto
12 f0
(13.) show
28 124 moveto
12 f0
(Re-read this entire manual. ) show
0 97.4 moveto
12 f0
(The default options on the various control parameters have been chosen as reasonable values for most) show
0 84.1 moveto
12 f0
(optimization problems. The steps listed above are intended to provide the user with the experience) show
pagelevel restore
showpage
%%Page: 10 10
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
0 709.2 moveto
12 f0
(necessary to change these parameters as required to efficiently solve new optimization problems of) show
0 695.9 moveto
12 f0
(special interest. ) show
0 673.5 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
210.6 640.4 moveto
14 f1
(SECTION III) show
156.9 611.1 moveto
14 f1
(PROGRAM ORGANIZATION) show
66.7 595.1 moveto
14 f1
([ENTIRE SECTION SUPERCEDED BY THE ) show
349.4 595.1 moveto
14 f1
(ADDENDUM) show
432.6 595.1 moveto
14 f1
(]) show
0 568.1 moveto
12 f0
(The overall program organization is shown in ) show
222.2 568.1 moveto
12 f0
(Fig. 2) show
250.2 568.1 moveto
12 f0
( [SUPERCEDED]. The variables are initialized in) show
0 554.8 moveto
12 f0
(the main program. The vector ) show
145.9 554.8 moveto
10 f4
(X) show
151.9 554.8 moveto
12 f0
( is changed in subroutine CONMIN and its associated routines, and) show
0 541.5 moveto
12 f0
(external routine ) show
78.6 541.5 moveto
10 f4
(SUB1) show
102.6 541.5 moveto
12 f0
( calculates the required function values and gradient information.) show
0 514.9 moveto
12 f0
(Subroutine CONMIN is called by the main program by the call statement:) show
0 491 moveto
10 f4
(     CALL CONMIN \(SUB1,OBJ\)) show
0 456.8 moveto
12 f0
(where ) show
32.3 456.8 moveto
10 f4
(SUB1) show
56.3 456.8 moveto
12 f0
( is the name of the user supplied external subroutine and ) show
329.9 456.8 moveto
10 f4
(OBJ) show
347.9 456.8 moveto
12 f0
( is the optimum value of the) show
0 443.5 moveto
12 f0
(objective function upon return from CONMIN. The variables, ) show
300.6 443.5 moveto
10 f4
(X\(I\)) show
324.6 443.5 moveto
12 f0
(, contained in vector ) show
425.5 443.5 moveto
10 f4
(X) show
431.5 443.5 moveto
12 f0
( and constraint) show
0 430.2 moveto
12 f0
(values, ) show
36.6 430.2 moveto
10 f4
(G\(J\)) show
60.6 430.2 moveto
12 f0
(, contained in vector ) show
161.5 430.2 moveto
10 f4
(G) show
167.5 430.2 moveto
12 f0
( will correspond to this optimum upon return. If additional) show
0 416.9 moveto
12 f0
(information calculated in external routine ) show
202.2 416.9 moveto
10 f4
(SUB1) show
226.2 416.9 moveto
12 f0
( is required, the routine should be called again upon) show
0 403.6 moveto
12 f0
(return from CONMIN to insure that this information corresponds to the final values of ) show
417.9 403.6 moveto
10 f4
(X\(I\)) show
441.9 403.6 moveto
12 f0
(.) show
0 377 moveto
12 f0
(Subroutine ) show
55.6 377 moveto
10 f4
(SUB1) show
79.6 377 moveto
12 f0
( is called by CONMIN and its associated routines by the call statement:) show
0 353.1 moveto
10 f4
(     CALL SUB1\(INFO,OBJ\)) show
0 318.9 moveto
12 f0
(where ) show
32.3 318.9 moveto
10 f4
(INFO) show
56.3 318.9 moveto
12 f0
( is a control parameter defining which information must be supplied, and ) show
409.2 318.9 moveto
10 f4
(OBJ) show
427.2 318.9 moveto
12 f0
( is the value of) show
0 305.6 moveto
12 f0
(the objective function to be calculated corresponding to the current decision variables contained in ) show
475.9 305.6 moveto
10 f4
(X) show
481.9 305.6 moveto
12 f0
(.) show
0 292.3 moveto
10 f4
(INFO) show
24 292.3 moveto
12 f0
( will have a value of from 1 to 4 to identify what information must be supplied by ) show
419.3 292.3 moveto
10 f4
(SUB1) show
443.3 292.3 moveto
12 f0
(. ) show
0 268.4 moveto
10 f4
(     INFO = 1   Calculate objective function value, OBJ, for current) show
0 257.9 moveto
10 f4
(                variables X.) show
0 236.9 moveto
10 f4
(     INFO = 2   Calculate objective function value, OBJ, and constraint) show
0 226.4 moveto
10 f4
(                values, G\(J\), J = 1, NCON for current variables, X.) show
0 205.4 moveto
10 f4
(     INFO = 3   Calculate analytic gradient of objective function) show
0 194.9 moveto
10 f4
(                corresponding to current variables, X.  The objective) show
0 184.4 moveto
10 f4
(                function and constraint values already correspond to the) show
0 173.9 moveto
10 f4
(                current values of X and need not be recalculated.) show
0 163.4 moveto
10 f4
(                However, other information obtained in SUB1 when) show
0 152.9 moveto
10 f4
(                calculating OBJ and G\(J\) may not correspond to X and must) show
0 142.4 moveto
10 f4
(                be calculated again here if it is used in gradient) show
0 131.9 moveto
10 f4
(                computations.  If finite difference control parameter,) show
0 121.4 moveto
10 f4
(                NFDG, is set to NFDG = 1 in the main program this value) show
0 110.9 moveto
10 f4
(                of INFO will never be considered.) show
0 89.9 moveto
10 f4
(     INFO = 4   For current variables, X, determine which constraints) show
0 79.4 moveto
10 f4
(                are active and which are violated \(G\(J\).GE.CT\) and how) show
pagelevel restore
showpage
%%Page: 11 11
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
0 711.9 moveto
10 f4
(                many such constraints there are \(NAC = Number of active) show
0 701.4 moveto
10 f4
(                and violated constraints\).  Calculate the analytic) show
0 690.9 moveto
10 f4
(                gradients of the objective function and all active or) show
0 680.4 moveto
10 f4
(                violated constraints.  Values of the objective function,) show
0 669.9 moveto
10 f4
(                OBJ, and constraints, G\(J\), already correspond to the) show
0 659.4 moveto
10 f4
(                current variables, X, and need not be recalculated.) show
0 648.9 moveto
10 f4
(                As in the case of INFO = 3, all other information used) show
0 638.4 moveto
10 f4
(                in gradient computations must be calculated for the) show
0 627.9 moveto
10 f4
(                current variables, X.  If finite difference control) show
0 617.4 moveto
10 f4
(                parameter NFDG, defined in the main program, is not zero,) show
0 606.9 moveto
10 f4
(                this value of INFO will never be considered.) show
0 583.2 moveto
12 f0
(Note that ) show
47.3 583.2 moveto
10 f4
(INFO = 3) show
95.3 583.2 moveto
12 f0
( and ) show
118.6 583.2 moveto
10 f4
(INFO = 4) show
166.6 583.2 moveto
12 f0
( are considered only if gradient information is calculated in the user) show
0 569.9 moveto
12 f0
(supplied subroutine, ) show
100.3 569.9 moveto
10 f4
(SUB1) show
124.3 569.9 moveto
12 f0
(.) show
0 543.3 moveto
12 f0
(With the exception of the external subroutine name, ) show
252.2 543.3 moveto
10 f4
(SUB1) show
276.2 543.3 moveto
12 f0
(, the objective function value, ) show
421.8 543.3 moveto
10 f4
(OBJ) show
439.8 543.3 moveto
12 f0
(, and the) show
0 530 moveto
12 f0
(control parameter, ) show
90.9 530 moveto
10 f4
(INFO) show
114.9 530 moveto
12 f0
(, all information used in the optimization process is transferred by means of the) show
0 516.7 moveto
12 f0
(following labeled common blocks.) show
0 492.8 moveto
10 f4
(     COMMON/CNMN1/IPRINT, NDV, ITMAX, NCON, NSIDE, ICNDIR, NSCAL, NFDG,) show
0 482.3 moveto
10 f4
(     1 FDCH, FDCHM, CT, CTMIN, CTL, CTLMIN, THETA, PHI, NAC, NACMX1, DELFUN,) show
0 471.8 moveto
10 f4
(     2 DABFUN, LINOBJ, ITRM, ITER, NCAL\(4\)) show
0 440.3 moveto
10 f4
(     COMMON/CNMN2/X\(N1\), DF\(N1\), G\(N2\), ISC\(N8\), IC\(N4\), A\(N4,N3\)) show
0 408.8 moveto
10 f4
(     COMMON/CNMN3/S\(N3\), G1\(N7\), G2\(N2\), C\(N9\), MS1\(N6\), B\(N4,N4\)) show
0 377.3 moveto
10 f4
(     COMMON/CNMN4/VLB\(N1\), VUB\(N1\), SCAL\(N5\)) show
0 343.1 moveto
12 f0
(The parameters and arrays used in the minimization process will now be defined, followed by the) show
0 329.8 moveto
12 f0
(required array dimensions, ) show
131.3 329.8 moveto
10 f4
(N1) show
143.3 329.8 moveto
12 f0
( through ) show
186.6 329.8 moveto
10 f4
(N9) show
198.6 329.8 moveto
12 f0
(. If a default value is listed, this value will be used if a zero) show
0 316.5 moveto
12 f0
(value is transferred from the main program.) show
0 294.1 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
211 261 moveto
14 f1
(SECTION IV) show
100.3 231.7 moveto
14 f1
(PARAMETERS DEFINED IN MAIN PROGRAM) show
0 207.4 moveto
10 f4
(IPRINT   Print control.  All printing is done on unit number 6.) show
0 186.4 moveto
10 f4
(         0:  Print nothing.) show
0 165.4 moveto
10 f4
(         1:  Print initial and final function information.) show
0 144.4 moveto
10 f4
(         2:  1st debug level.  Print all of above plus control) show
0 133.9 moveto
10 f4
(             parameters.  Print function value and X-vector at each) show
0 123.4 moveto
10 f4
(             iteration.) show
0 102.4 moveto
10 f4
(         3:  2nd. debug level.  Print all of above plus all constraint) show
0 91.9 moveto
10 f4
(             values, numbers of active or violated constraints, direction) show
0 81.4 moveto
10 f4
(             vectors, move parameters and miscellaneous information.  The) show
pagelevel restore
showpage
%%Page: 12 12
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
0 711.9 moveto
10 f4
(             constraint parameter, BETA, printed under this option) show
0 701.4 moveto
10 f4
(             approaches zero as the optimum objective is achieved.) show
0 680.4 moveto
10 f4
(         4:  Complete debug.  Print all of above plus gradients of) show
0 669.9 moveto
10 f4
(             objective function, active or violated constraint functions) show
0 659.4 moveto
10 f4
(             and miscellaneous information.) show
0 638.4 moveto
10 f4
(NDV      Number of decision variables, X\(I\), contained in vector X.) show
0 617.4 moveto
10 f4
(ITMAX    Default value = 10.  Maximum number of iterations in the) show
0 606.9 moveto
10 f4
(         minimization process.  If NFDG.EQ.0 each iteration requires one) show
0 596.4 moveto
10 f4
(         set of gradient computations \(INFO = 3 or 4\) and approximately) show
0 585.9 moveto
10 f4
(         three function evaluations \(INFO = 1 or 2\).  If NFDG.GT.0) show
0 575.4 moveto
10 f4
(         each iteration requires approximately NDV + 3 function) show
0 564.9 moveto
10 f4
(         evaluations \(INFO = 1 or 2\).) show
0 543.9 moveto
10 f4
(NCON     Number of constraint functions, G\(J\).  NCON may be zero.) show
0 522.9 moveto
10 f4
(NSIDE    Side constraint parameter.  NSIDE = 0 signifies that the) show
0 512.4 moveto
10 f4
(         variables X\(I\) do not have lower or upper bounds.  NSIDE.GT.0) show
0 501.9 moveto
10 f4
(         signifies that all variables X\(I\) have lower and upper bounds) show
0 491.4 moveto
10 f4
(         defined by VLB\(I\) and VUB\(I\) respectively.  If one or more) show
0 480.9 moveto
10 f4
(         variables are not bounded while others are, the values of the) show
0 470.4 moveto
10 f4
(         lower and upper bounds on the unbounded variables must be taken) show
0 459.9 moveto
10 f4
(         as very large negative and positive values respectively) show
0 449.4 moveto
10 f4
(         \(i.e., VLB\(I\) = -1.0E+10, VUB\(I\) = 1.0E+10\).) show
0 428.4 moveto
10 f4
(ICNDIR   Default value = NDV + 1.  Conjugate direction restart parameter.) show
0 417.9 moveto
10 f4
(         If the function is currently unconstrained, \(all G\(J\).LT.CT or) show
0 407.4 moveto
10 f4
(         NCON = NSIDE = 0\), Fletcher-Reeves conjugate direction method will) show
0 396.9 moveto
10 f4
(         be restarted with a steepest descent direction every ICNDIR) show
0 386.4 moveto
10 f4
(         iterations.  If ICNDIR = 1 only steepest descent will be used.) show
0 365.4 moveto
10 f4
(NSCAL    Scaling control parameter.  The decision variables will be) show
0 354.9 moveto
10 f4
(         scaled linearly.) show
0 333.9 moveto
10 f4
(         NSCAL.LT.0:  Scale variables X\(I\) by dividing by SCAL\(I\), where) show
0 323.4 moveto
10 f4
(                      vector SCAL is defined by the user.) show
0 302.4 moveto
10 f4
(         NSCAL.EQ.0:  Do not scale the variables.) show
0 281.4 moveto
10 f4
(         NSCAL.GT.0:  Scale the variables every NSCAL iterations.) show
0 270.9 moveto
10 f4
(                      Variables are normalized so that scaled) show
0 260.4 moveto
10 f4
(                      X\(I\) = X\(I\)/ABS\(X\(I\)\).  When using this option, it) show
0 249.9 moveto
10 f4
(                      is desirable that NSCAL = ICNDIR if ICNDIR is input) show
0 239.4 moveto
10 f4
(                      as nonzero, and NSCAL = NDV + 1 in ICNDIR is input) show
0 228.9 moveto
10 f4
(                      as zero.) show
0 207.9 moveto
10 f4
(NFDG     Gradient calculation control parameter. [SEE ) show
324 207.9 moveto
10 f4
(ADDENDUM) show
372 207.9 moveto
10 f4
(]) show
0 186.9 moveto
10 f4
(         NFDG = 0:  All gradient information is provided by external) show
0 176.4 moveto
10 f4
(                    routine SUB1.  This information may be calculated) show
0 165.9 moveto
10 f4
(                    analytically, or by finite difference, at the user's) show
0 155.4 moveto
10 f4
(                    discretion.) show
0 134.4 moveto
10 f4
(         NFDG = 1:  All gradient information will be calculated by finite) show
0 123.9 moveto
10 f4
(                    difference in CONMIN.  SUB1 provides only function) show
0 113.4 moveto
10 f4
(                    values, OBJ and G\(J\), J = 1, NCON.) show
0 92.4 moveto
10 f4
(         NFDG = 2:  Gradient of objective function is provided by external) show
0 81.9 moveto
10 f4
(                    routine SUB1, and gradients of active and violated) show
pagelevel restore
showpage
%%Page: 13 13
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
0 711.9 moveto
10 f4
(                    constraints are calculated by finite difference in) show
0 701.4 moveto
10 f4
(                    CONMIN.  This option is desirable if the gradient of) show
0 690.9 moveto
10 f4
(                    the objective function is easily obtained in closed) show
0 680.4 moveto
10 f4
(                    form, but gradients of constraint functions, G\(J\), are) show
0 669.9 moveto
10 f4
(                    unobtainable.  This option may improve efficiency if) show
0 659.4 moveto
10 f4
(                    several variables are limited by lower or upper bounds.) show
0 638.4 moveto
10 f4
(FDCH     Default value = 0.01.  Not used if NFDG = 0.  Relative change in) show
0 627.9 moveto
10 f4
(         decision variable X\(I\) in calculating finite difference) show
0 617.4 moveto
10 f4
(         gradients.  For example, FDCH = 0.01 corresponds to a finite) show
0 606.9 moveto
10 f4
(         difference step of one percent of the value of the decision) show
0 596.4 moveto
10 f4
(         variable.) show
0 575.4 moveto
10 f4
(FDCHM    Default value = 0.01.  Not used if NFDG = 0.  Minimum absolute) show
0 564.9 moveto
10 f4
(         step in finite difference gradient calculations.  FDCHM applies) show
0 554.4 moveto
10 f4
(         to the unscaled variable values.) show
0 533.4 moveto
10 f4
(CT       Default value = -0.1.  Not used if NCON = NSIDE = 0.) show
0 522.9 moveto
10 f4
(         Constraint thickness parameter.  If CT.LE.G\(J\).LE.ABS\(CT\),) show
0 512.4 moveto
10 f4
(         G\(J\) is defined as active.  If G\(J\).GT.ABS\(CT\), G\(J\) is said to) show
0 501.9 moveto
10 f4
(         be violated.  If G\(J\).LT.CT, G\(J\) is not active.  CT is) show
0 491.4 moveto
10 f4
(         sequentially reduced in magnitude during the optimization) show
0 480.9 moveto
10 f4
(         process.  If ABS\(CT\) is very small, one or more constraints) show
0 470.4 moveto
10 f4
(         may be active on one iteration and inactive on the next,) show
0 459.9 moveto
10 f4
(         only to become active again on a subsequent iteration.) show
0 449.4 moveto
10 f4
(         This is often referred to as "zigzagging" between constraints.) show
0 438.9 moveto
10 f4
(         A wide initial value of the constraint thickness is desirable) show
0 428.4 moveto
10 f4
(         for highly nonlinear problems so that when a constraint) show
0 417.9 moveto
10 f4
(         becomes active it tends to remain active, thus reducing the) show
0 407.4 moveto
10 f4
(         zigzagging problem.  The default value is usually adequate.) show
0 386.4 moveto
10 f4
(CTMIN    Default value = 0.004.  Not used if NCON = NSIDE = 0.  Minimum) show
0 375.9 moveto
10 f4
(         absolute value of CT considered in the optimization process.) show
0 365.4 moveto
10 f4
(         CTMIN may be considered as "numerical zero" since it may not be) show
0 354.9 moveto
10 f4
(         meaningful to compare numbers smaller than CTMIN.  The value of) show
0 344.4 moveto
10 f4
(         CTMIN is chosen to indicate that satisfaction of a constraint) show
0 333.9 moveto
10 f4
(         within this tolerance is acceptable.  The default value is usually) show
0 323.4 moveto
10 f4
(         adequate.) show
0 302.4 moveto
10 f4
(CTL      Default value = -0.01.  Not used if NCON = NSIDE = 0.) show
0 291.9 moveto
10 f4
(         Constraint thickness parameter for linear and side constraints.) show
0 281.4 moveto
10 f4
(         CTL is smaller in magnitude than CT because the zigzagging) show
0 270.9 moveto
10 f4
(         problem is avoided with linear and side constraints.  The default) show
0 260.4 moveto
10 f4
(         value is usually adequate.) show
0 239.4 moveto
10 f4
(CTLMIN   Default value = 0.001.  Not used if NCON = NSIDE = 0.  Minimum) show
0 228.9 moveto
10 f4
(         absolute value of CTL considered in the optimization process.) show
0 218.4 moveto
10 f4
(         The default value is usually adequate.) show
0 197.4 moveto
10 f4
(THETA    Default value = 1.0.  Not used if NCON = NSIDE = 0.  Mean value) show
0 186.9 moveto
10 f4
(         of the push-off factor in the method of feasible directions.) show
0 176.4 moveto
10 f4
(         A larger value of THETA is desirable if the constraints, G\(J\),) show
0 165.9 moveto
10 f4
(         are known to be highly nonlinear, and a smaller value may be) show
0 155.4 moveto
10 f4
(         used if all G\(J\) are known to be nearly linear.  The actual) show
0 144.9 moveto
10 f4
(         value of the push-off factor used in the program is a quadratic) show
0 134.4 moveto
10 f4
(         function of each G\(J\), varying from 0.0 for G\(J\) = CT to 4.0*THETA) show
0 123.9 moveto
10 f4
(         for G\(J\) = ABS\(CT\).  A value of THETA = 0.0 is used in the) show
0 113.4 moveto
10 f4
(         program for constraints which are identified by the user to be) show
0 102.9 moveto
10 f4
(         strictly linear.  THETA is called a "push-off" factor because) show
0 92.4 moveto
10 f4
(         it pushes the design away from the active constraints into the) show
0 81.9 moveto
10 f4
(         feasible region.  The default value is usually adequate.) show
pagelevel restore
showpage
%%Page: 14 14
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
0 708.9 moveto
10 f4
(PHI      Default value = 5.0.  Not used if NCON = NSIDE = 0.) show
0 698.4 moveto
10 f4
(         Participation coefficient, used if a design is infeasible) show
0 687.9 moveto
10 f4
(         \(one or more G\(J\).GT.ABS\(CT\)\).  PHI is a measure of how hard) show
0 677.4 moveto
10 f4
(         the design will be "pushed" towards the feasible region and) show
0 666.9 moveto
10 f4
(         is, in effect, a penalty parameter.  If in a given problem, a) show
0 656.4 moveto
10 f4
(         feasible solution cannot be obtained with the default value,) show
0 645.9 moveto
10 f4
(         PHI should be increased, and the problem run again.  If a) show
0 635.4 moveto
10 f4
(         feasible solution cannot be obtained with PHI = 100, it is) show
0 624.9 moveto
10 f4
(         probable that no feasible solution exists.  The default value) show
0 614.4 moveto
10 f4
(         is usually adequate.) show
0 593.4 moveto
10 f4
(NACMX1   Not used if NSIDE = NCON = 0.  1 plus user's best estimate of) show
0 582.9 moveto
10 f4
(         the maximum number of constraints \(including side constraints,) show
0 572.4 moveto
10 f4
(         VLB\(I\) and VUB\(I\)\) which will be active at any given time in) show
0 561.9 moveto
10 f4
(         the minimization process.  NACMX1 = number of rows in array A.) show
0 551.4 moveto
10 f4
(         If NAC + 1 ever exceeds this value, the minimization process will) show
0 540.9 moveto
10 f4
(         be terminated, an error message will be printed, and control) show
0 530.4 moveto
10 f4
(         will return to the main program.  NACMX1 will never exceed) show
0 519.9 moveto
10 f4
(         NDV + 1 if all constraints G\(J\) and bounds VLB\(I\) and VUB\(I\)) show
0 509.4 moveto
10 f4
(         are independent.  A reasonable value for NACMX1 \(and the) show
0 498.9 moveto
10 f4
(         corresponding dimension of array A\) is MIN\(40, NDV + 1\),) show
0 488.4 moveto
10 f4
(         where the minimum of 40 will only apply for large problems) show
0 477.9 moveto
10 f4
(         and is arbitrary, based on the observation that even for very) show
0 467.4 moveto
10 f4
(         large problems \(over a hundred X\(I\) and several thousand G\(J\)\),) show
0 456.9 moveto
10 f4
(         it is uncommon for many constraints to be active at any time) show
0 446.4 moveto
10 f4
(         in the minimization process \(the optimum solution is seldom) show
0 435.9 moveto
10 f4
(         "fully constrained" for very large nonlinear problems\).) show
0 414.9 moveto
10 f4
(DELFUN   Default value = 0.001.  Minimum relative change in the objective) show
0 404.4 moveto
10 f4
(         function to indicate convergence.  If in ITRM consecutive) show
0 393.9 moveto
10 f4
(         iterations, ABS\(1.0-OBJ\(J-1\)/OBJ\(J\)\).LT.DELFUN and the current) show
0 383.4 moveto
10 f4
(         design is feasible \(all G\(J\).LE.ABS\(CT\)\), the minimization) show
0 372.9 moveto
10 f4
(         process is terminated.  If the current design is infeasible) show
0 362.4 moveto
10 f4
(         \(some G\(J\).GT.ABS\(CT\)\), five iterations are required to) show
0 351.9 moveto
10 f4
(         terminate and this situation indicates that a feasible design) show
0 341.4 moveto
10 f4
(         may not exist.) show
0 320.4 moveto
10 f4
(DABFUN   Default value = 0.001 times the initial function value.  Same) show
0 309.9 moveto
10 f4
(         as DELFUN except comparison is on absolute change in the) show
0 299.4 moveto
10 f4
(         objective function, ABS\(OBJ\(J\)-OBJ\(J-1\)\), instead of relative) show
0 288.9 moveto
10 f4
(         change.) show
0 267.9 moveto
10 f4
(LINOBJ   Not used if NCON = NSIDE = 0.  Linear objective function) show
0 257.4 moveto
10 f4
(         identifier.  If the objective, OBJ, is specifically known to) show
0 246.9 moveto
10 f4
(         be a strictly linear function of the decision variables, X\(I\),) show
0 236.4 moveto
10 f4
(         set LINOBJ = 1.  If OBJ is a general nonlinear function, set) show
0 225.9 moveto
10 f4
(         LINOBJ = 0.) show
0 204.9 moveto
10 f4
(ITRM     Default value = 3.  Number of consecutive iterations to indicate) show
0 194.4 moveto
10 f4
(         convergence by relative or absolute changes, DELFUN or DABFUN.) show
0 173.4 moveto
10 f4
(X\(N1\)    Vector of decision variables, X\(I\), I = 1, NDV.  The initial) show
0 162.9 moveto
10 f4
(         X-vector contains the user's best estimate of the set of optimum) show
0 152.4 moveto
10 f4
(         design variables.) show
0 131.4 moveto
10 f4
(VLB\(N1\)  Used only if NSIDE.NE.0.  VLB\(I\) is the lower allowable value) show
0 120.9 moveto
10 f4
(         \(lower bound\) of variable X\(I\).  If one or more variables, X\(I\),) show
0 110.4 moveto
10 f4
(         do not have lower bounds, the corresponding VLB\(I\) must be) show
0 99.9 moveto
10 f4
(          initialized to a very large negative number \(say -1.0E+10\).) show
0 78.9 moveto
10 f4
(VUB\(N1\)  Used only if NSIDE.NE.0.  VUB\(I\) is the maximum allowable value) show
pagelevel restore
showpage
%%Page: 15 15
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
0 711.9 moveto
10 f4
(         \(upper bound\) of X\(I\).  If one or more variables, X\(I\), do not) show
0 701.4 moveto
10 f4
(         have upper bounds, the corresponding VUB\(I\) must be initialized) show
0 690.9 moveto
10 f4
(         to a very large positive number \(say 1.0E+10\).) show
0 669.9 moveto
10 f4
(SCAL\(N5\) Not used if NSCAL = 0.  Vector of scaling parameters.  If) show
0 659.4 moveto
10 f4
(         NSCAL.GT.0 vector SCAL need not be initialized since SCAL will) show
0 648.9 moveto
10 f4
(         be defined in CONMIN and its associated routines.  If NSCAL.LT.0,) show
0 638.4 moveto
10 f4
(         vector SCAL is initialized in the main program, and the scaled) show
0 627.9 moveto
10 f4
(         variables X\(I\) = X\(I\)/SCAL\(I\).  Efficiency of the optimization) show
0 617.4 moveto
10 f4
(         process can sometimes be improved if the variables are either) show
0 606.9 moveto
10 f4
(         normalized or are scaled in such a way that the partial deri-) show
0 596.4 moveto
10 f4
(         vative of the objective function, OBJ, with respect to variable) show
0 585.9 moveto
10 f4
(         X\(I\) is of the same order of magnitude for all X\(I\).  SCAL\(I\)) show
0 575.4 moveto
10 f4
(         must be greater than zero because a negative value of SCAL\(I\)) show
0 564.9 moveto
10 f4
(         will result in a change of sign of X\(I\) and possibly yield) show
0 554.4 moveto
10 f4
(         erroneous optimization results.  The decision of if, and how, the) show
0 543.9 moveto
10 f4
(         variables should be scaled is highly problem dependent, and some) show
0 533.4 moveto
10 f4
(         experimentation is desirable for any given class of problems.) show
0 512.4 moveto
10 f4
(ISC\(N8\)  Not used if NCON = 0.  Linear constraint identification vector.) show
0 501.9 moveto
10 f4
(         If constraint G\(J\) is known to be a linear function of the) show
0 491.4 moveto
10 f4
(         decision variables, X\(I\), ISC\(I\) should be initialized to) show
0 480.9 moveto
10 f4
(         ISC\(I\) = 1.  If constraint G\(J\) is nonlinear ISC\(I\) is initialized) show
0 470.4 moveto
10 f4
(         to ISC\(I\) = 0.  Identification of linear constraints may improve) show
0 459.9 moveto
10 f4
(         efficiency of the optimization process and is therefore desirable,) show
0 449.4 moveto
10 f4
(         but is not essential.  If G\(J\) is not specifically known to be) show
0 438.9 moveto
10 f4
(         linear, set ISC\(I\) = 0.) show
0 408.9 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
213.7 375.8 moveto
14 f1
(SECTION V) show
64.5 346.5 moveto
14 f1
(PARAMETERS DEFINED IN EXTERNAL ROUTINE SUB1.) show
0 322.2 moveto
10 f4
(OBJ       Value of objective function for the current decision variables,) show
0 311.7 moveto
10 f4
(          X\(I\), I = 1, NDV contained in vector X.  Calculate OBJ if) show
0 301.2 moveto
10 f4
(          INFO = 1 or INFO = 2.) show
0 280.2 moveto
10 f4
(G\(N2\)     Not used if NCON = NSIDE = 0.  Vector containing all constraint) show
0 269.7 moveto
10 f4
(          functions, G\(J\), J = 1, NCON for current decision variables, X.) show
0 259.2 moveto
10 f4
(          Calculate G\(J\), J = 1, NCON if INFO = 2.) show
0 238.2 moveto
10 f4
(DF\(N1\)    Analytic gradient of the objective function for the current) show
0 227.7 moveto
10 f4
(          decision variables, X\(I\).  DF\(I\) contains the partial derivative) show
0 217.2 moveto
10 f4
(          of OBJ with respect to X\(I\).  Calculate DF\(I\), I = 1,) show
0 206.7 moveto
10 f4
(          NDV if INFO = 3 or INFO = 4 and if NFDG = 0 or NFDG = 2.) show
0 185.7 moveto
10 f4
(NAC       Number of active and violated constraints \(G\(J\).GE.CT\).) show
0 175.2 moveto
10 f4
(          Calculate NAC if INFO = 4 and NFDG = 0.) show
0 154.2 moveto
10 f4
(A\(N4,N3\)  Not used if NCON = NSIDE = 0.  Gradients of active or violated) show
0 143.7 moveto
10 f4
(          constraints, for current decision variables, X\(I\).) show
0 133.2 moveto
10 f4
(          A\(J,I\) contains the gradient of the Jth active or violated) show
0 122.7 moveto
10 f4
(          constraint, G\(J\), with respect to the Ith decision variable,) show
0 112.2 moveto
10 f4
(          X\(I\) for J = 1, NAC and I = 1, NDV.  Calculate if INFO = 4) show
0 101.7 moveto
10 f4
(          and NFDG = 0.  [SEE ) show
180 101.7 moveto
10 f4
(ADDENDUM) show
228 101.7 moveto
10 f4
(]) show
0 80.7 moveto
10 f4
(IC\(N4\)    Identifies which constraints are active or violated.  IC\(J\)) show
pagelevel restore
showpage
%%Page: 16 16
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
0 711.9 moveto
10 f4
(          contains the number of the Jth active or violated constraint) show
0 701.4 moveto
10 f4
(          for J = 1, NAC.  For example, if G\(10\) is the first active) show
0 690.9 moveto
10 f4
(          or violated constraint \(G\(J\).LT.CT, J = 1,9\), set IC\(1\) = 10.) show
0 680.4 moveto
10 f4
(          Calculate if INFO = 4 and NFDG = 0.) show
0 656.7 moveto
12 f0
(If it is convenient to calculate more information than is required by the information control parameter,) show
0 643.4 moveto
10 f4
(INFO) show
24 643.4 moveto
12 f0
(, this may be done. ) show
117.6 643.4 moveto
10 f4
(INFO) show
141.6 643.4 moveto
12 f0
( identifies the minimum amount of information which is necessary at a) show
0 630.1 moveto
12 f0
(given time in the optimization process. It is never necessary to determine which bounds \(side) show
0 616.8 moveto
12 f0
(constraints\) ) show
58.9 616.8 moveto
10 f4
(VLB\(I\)) show
94.9 616.8 moveto
12 f0
( and ) show
118.2 616.8 moveto
10 f4
(VUB\(I\)) show
154.2 616.8 moveto
12 f0
( are active because this information is determined by CONMIN. ) show
0 590.2 moveto
12 f0
(The required organization of SUB1 is shown in ) show
230.6 590.2 moveto
12 f0
(Fig. 3) show
258.6 590.2 moveto
12 f0
(. Note that if ) show
322.2 590.2 moveto
10 f4
(NCON = 0) show
370.2 590.2 moveto
12 f0
(, ) show
376.1 590.2 moveto
10 f4
(NFDG = 1) show
424.1 590.2 moveto
12 f0
(, or ) show
443 590.2 moveto
10 f4
(NFDG = 2) show
491 590.2 moveto
12 f0
(,) show
0 576.9 moveto
12 f0
(much of Fig. 3 is inapplicable and can be omitted. ) show
0 554.5 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
211 521.4 moveto
14 f1
(SECTION VI) show
26.1 492.1 moveto
14 f1
(PARAMETERS DEFINED IN CONMIN AND ASSOCIATED ROUTINES) show
0 467.8 moveto
10 f4
(ITER     Iteration number.  The optimization process is iterative so) show
0 457.3 moveto
10 f4
(         that the vector of decision variables at the Kth iteration) show
0 446.8 moveto
10 f4
(         is defined by X\(K\) = X\(K - 1\) + ALPHA*S\(K\), where in this case) show
0 436.3 moveto
10 f4
(         K refers to the iteration number and the components X\(I\) are) show
0 425.8 moveto
10 f4
(         all changed simultaneously.  ALPHA is defined as the move) show
0 415.3 moveto
10 f4
(         parameter and is printed if the print control IPRINT.GE.3.) show
0 404.8 moveto
10 f4
(         S is the move direction.) show
0 383.8 moveto
10 f4
(NCAL\(4\)  Bookkeeping information.  NCAL\(1\) gives the number of times) show
0 373.3 moveto
10 f4
(         external routine SUB1 was called with INFO = 1.  NCAL\(2\) gives) show
0 362.8 moveto
10 f4
(         the number of times INFO = 2.  NCAL\(3\) gives the number of times) show
0 352.3 moveto
10 f4
(         INFO = 3 and NCAL\(4\) gives the number of times INFO = 4.) show
0 331.3 moveto
10 f4
(S\(N3\)    Move direction in the NDV-dimensional optimization space.  S\(I\)) show
0 320.8 moveto
10 f4
(         gives the rate at which variable X\(I\) changes with respect to) show
0 310.3 moveto
10 f4
(         ALPHA.) show
0 289.3 moveto
10 f4
(G1\(N7\)   Not used if NCON = NSIDE = NSCAL = 0.  Used for temporary) show
0 278.8 moveto
10 f4
(         storage of constraint values G\(J\), J = 1, NCON and decision) show
0 268.3 moveto
10 f4
(         variables X\(I\), I = 1, NDV.) show
0 247.3 moveto
10 f4
(G2\(N2\)   Not used if NCON = NSIDE = 0.  Used for temporary storage of) show
0 236.8 moveto
10 f4
(         constraint values G\(J\), J = 1, NCON.) show
0 215.8 moveto
10 f4
(B\(N4,N4\) Not used if NCON = NSIDE = 0.  Used in determining direction) show
0 205.3 moveto
10 f4
(         vector S for constrained minimization problems.  Array B may) show
0 194.8 moveto
10 f4
(         be used for temporary storage in external routine SUB1.) show
0 173.8 moveto
10 f4
(C\(N9\)    Not used in NCON = NSIDE = 0.  Used with array B in determining) show
0 163.3 moveto
10 f4
(         direction vector S for constrained minimization problems.  Used) show
0 152.8 moveto
10 f4
(         for temporary storage of vector X if NSCAL.NE.0. routine SUB1.) show
0 131.8 moveto
10 f4
(MS1\(N6\)  Not used if NCON = NSIDE = 0.  Used with array B in determining) show
0 121.3 moveto
10 f4
(         direction vector S for constrained minimization problems.  Array) show
0 110.8 moveto
10 f4
(         MS1 may be used for temporary storage in external routine SUB1.) show
0 80.8 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
pagelevel restore
showpage
%%Page: 17 17
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
208.2 695.7 moveto
14 f1
(SECTION VII) show
125 666.4 moveto
14 f1
(REQUIRED DIMENSIONS OF ARRAYS) show
66.7 650.4 moveto
14 f1
([ENTIRE SECTION SUPERCEDED BY THE ) show
349.4 650.4 moveto
14 f1
(ADDENDUM) show
432.6 650.4 moveto
14 f1
(]) show
0 626.1 moveto
10 f4
(COMMON/CNMN2/X\(N1\), DF\(N1\), G\(N2\), ISC\(N8\), IC\(N4\), A\(N4,N3\)) show
0 615.6 moveto
10 f4
(COMMON/CNMN3/S\(N3\), G1\(N7\), G2\(N2\), C\(N9\), MS1\(N6\), B\(N4,N4\)) show
0 605.1 moveto
10 f4
(COMMON/CNMN4/VLB\(N1\), VUB\(N1\), SCAL\(N5\)) show
0 581.4 moveto
12 f0
(Dimensions ) show
60.3 581.4 moveto
10 f4
(N1) show
72.3 581.4 moveto
12 f0
( through ) show
115.6 581.4 moveto
10 f4
(N7) show
127.6 581.4 moveto
12 f0
( are minimum dimensions on the arrays and are defined by: ) show
0 557.5 moveto
10 f4
(     N1 = NDV) show
0 536.5 moveto
10 f4
(     N2 = 1 if NCON = NSIDE = 0) show
0 526 moveto
10 f4
(        = NCON if NCON.GT.0 and NSIDE = 0) show
0 515.5 moveto
10 f4
(        = 2*NDV if NCON = 0 and NSIDE.GT.0) show
0 505 moveto
10 f4
(        = NCON + 2*NDV is NCON.GT.0 and NSIDE.GT.0) show
0 484 moveto
10 f4
(     N3 = NDV + 2) show
0 463 moveto
10 f4
(     N4 = 1 if NCON = NSIDE = 0) show
0 452.5 moveto
10 f4
(          NACMX1 if NCON.GT.0 or NSIDE.GT.0) show
0 431.5 moveto
10 f4
(     N5 = 1 if NSCAL = 0) show
0 421 moveto
10 f4
(        = N1 if NSCAL.NE.0) show
0 400 moveto
10 f4
(     N6 = 1 if NCON = NSIDE = 0) show
0 389.5 moveto
10 f4
(        = 2*N4 if NCON.GT.0 or NSIDE.GT.0) show
0 368.5 moveto
10 f4
(     N7 = N2 if NSCAL = 0) show
0 358 moveto
10 f4
(        = MAX\(N2, NDV\) if NSCAL.NE.0) show
0 337 moveto
10 f4
(     N8 = 1 if NCON = 0) show
0 326.5 moveto
10 f4
(        = NCON if NCON.GT.0) show
0 305.5 moveto
10 f4
(     N9 = N4 if NFDG.EQ.0) show
0 295 moveto
10 f4
(        = MAX\(N4, NDV\) if NFDG.GT.0) show
0 265 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
205.5 231.9 moveto
14 f1
(SECTION VIII) show
213.1 202.6 moveto
14 f1
(EXAMPLES) show
18.7 186.6 moveto
14 f1
([These examples have been revised to use the MAY 1978 version of CONMIN]) show
0 159.6 moveto
12 f0
(In this section several examples are presented, together with results, to provide a better understanding of) show
0 146.3 moveto
12 f0
(the program organization. In each case the default values are used for control parameters unless) show
0 133 moveto
12 f0
(otherwise noted. ) show
0 106.4 moveto
12 f0
(The examples were solved using a CDC 7600 computer. The numerical results obtained using other) show
0 93.1 moveto
12 f0
(computers may differ slightly from those obtained here.) show
pagelevel restore
showpage
%%Page: 18 18
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
0 709.2 moveto
12 f0
(EXAMPLE 1 - CONSTRAINED ROSEN-SUZUKI FUNCTION. NO GRADIENT INFORMATION.) show
0 682.6 moveto
12 f0
(Consider the minimization problem discussed in ) show
235.3 682.6 moveto
12 f0
(SECTION I) show
292.9 682.6 moveto
12 f0
(:) show
0 658.7 moveto
10 f4
(     MINIMIZE OBJ = X\(1\)**2 - 5*X\(1\) + X\(2\)**2 - 5*X\(2\) +) show
0 648.2 moveto
10 f4
(                    2*X\(3\)**2 - 21*X\(3\) + X\(4\)**2 + 7*X\(4\) + 50) show
0 627.2 moveto
10 f4
(     Subject to:) show
0 606.2 moveto
10 f4
(          G\(1\) = X\(1\)**2 + X\(1\) + X\(2\)**2 - X\(2\) +) show
0 595.7 moveto
10 f4
(                 X\(3\)**2 + X\(3\) + X\(4\)**2 - X\(4\) - 8   .LE.0) show
0 574.7 moveto
10 f4
(          G\(2\) = X\(1\)**2 - X\(1\) + 2*X\(2\)**2 + X\(3\)**2 +) show
0 564.2 moveto
10 f4
(                 2*X\(4\)**2 - X\(4\) - 10                  .LE.0) show
0 543.2 moveto
10 f4
(          G\(3\) = 2*X\(1\)**2 + 2*X\(1\) + X\(2\)**2 - X\(2\) +) show
0 532.7 moveto
10 f4
(                 X\(3\)**2 - X\(4\) - 5                     .LE.0) show
0 509 moveto
12 f0
(This problem is solved beginning with an initial ) show
233.3 509 moveto
10 f4
(X) show
239.3 509 moveto
12 f0
(-vector of ) show
0 485.1 moveto
10 f4
(     X = \(1.0, 1.0, 1.0, 1.0\)) show
0 461.4 moveto
12 f0
(The optimum design is known to be ) show
0 437.5 moveto
10 f4
(     OBJ = 6.000) show
0 413.8 moveto
12 f0
(and the corresponding ) show
109.6 413.8 moveto
10 f4
(X) show
115.6 413.8 moveto
12 f0
(-vector is ) show
0 389.9 moveto
10 f4
(     X = \(0.0, 1.0, 2.0, -1.0\)) show
0 366.2 moveto
12 f0
(The print control parameter of ) show
148.2 366.2 moveto
10 f4
(IPRINT = 2) show
208.2 366.2 moveto
12 f0
( is used and all gradients are calculated by finite difference.) show
0 352.9 moveto
12 f0
(The maximum number of iterations is taken as ) show
226.6 352.9 moveto
10 f4
(ITMAX = 40) show
286.6 352.9 moveto
12 f0
( to insure normal termination. The variables) show
0 339.6 moveto
12 f0
(are not scaled, so ) show
85.6 339.6 moveto
10 f4
(NSCAL = 0) show
139.6 339.6 moveto
12 f0
(. The objective function is nonlinear, so ) show
333.2 339.6 moveto
10 f4
(LINOBJ = 0) show
393.2 339.6 moveto
12 f0
(. The control) show
0 326.3 moveto
12 f0
(parameters are defined as:) show
0 302.4 moveto
10 f4
(     IPRINT = 2, NDV = 4, ITMAX = 40, NCON = 3) show
0 291.9 moveto
10 f4
(     NSIDE=ICNDIR=NSCAL=LINOBJ=ITRM = 0.) show
0 281.4 moveto
10 f4
(     FDCH=FDCHM=CT=CTMIN=CTL=CTLMIN=THETA=PHI=DELFUN=DABFUN = 0.) show
0 257.7 moveto
12 f0
(All constraints are nonlinear so the linear constraint identification vector contains all zeros:) show
0 231.1 moveto
12 f0
(ISC\(J\) = 0 J = 1, NCON ) show
0 204.5 moveto
12 f0
(The main program and analysis subroutine ) show
207.9 204.5 moveto
10 f4
(ANALYS) show
243.9 204.5 moveto
12 f0
( are listed in ) show
305.8 204.5 moveto
12 f0
(Listing 1) show
348.8 204.5 moveto
12 f0
( and ) show
372.1 204.5 moveto
12 f0
(Listing 2) show
415.1 204.5 moveto
12 f0
( respectively, with) show
0 191.2 moveto
12 f0
(the optimization results in ) show
128 191.2 moveto
12 f0
(Listing 3) show
171 191.2 moveto
12 f0
(. An optimum design of ) show
288.3 191.2 moveto
10 f4
(OBJ = 6.01) show
348.3 191.2 moveto
12 f0
( is obtained with the) show
0 177.9 moveto
12 f0
(corresponding decision variables: ) show
0 154 moveto
10 f4
(     X = \(0.0194, 0.995, 1.99, -1.01\)) show
0 130.3 moveto
12 f0
(Note that the unconstrained minimum of this function may be found by setting ) show
380.3 130.3 moveto
10 f4
(NCON = 0) show
428.3 130.3 moveto
12 f0
( in the main) show
0 117 moveto
12 f0
(program. The unconstrained minimum of ) show
201.3 117 moveto
10 f4
(OBJ = -30.0) show
267.3 117 moveto
12 f0
( may be found in this way, and this is left as an) show
0 103.7 moveto
12 f0
(exercise.) show
0 77.1 moveto
12 f0
(An additional problem of interest is to set ) show
202.6 77.1 moveto
10 f4
(NCON = 2) show
250.6 77.1 moveto
12 f0
( and, having found the optimum subject to these first) show
pagelevel restore
showpage
%%Page: 19 19
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
0 709.2 moveto
12 f0
(two constraints only, increase ) show
145.6 709.2 moveto
10 f4
(NCON) show
169.6 709.2 moveto
12 f0
( to 3 and call CONMIN again, to obtain the final optimum design.) show
0 695.9 moveto
12 f0
(This is easily done by initially setting ) show
183 695.9 moveto
10 f4
(NCON = 2) show
231 695.9 moveto
12 f0
( in the main program, then immediately after returning) show
0 682.6 moveto
12 f0
(from CONMIN, set ) show
97.3 682.6 moveto
10 f4
(NCON = 3) show
145.3 682.6 moveto
12 f0
( and call CONMIN again. It is not necessary to reinitialize the control) show
0 669.3 moveto
12 f0
(parameters. This exercise demonstrates the capability of CONMIN to deal with initially infeasible) show
0 656 moveto
12 f0
(designs, and such an option may be desirable when minimizing functions for which one or more) show
0 642.7 moveto
12 f0
(constraints are difficult or time-consuming to evaluate. In this way, the optimization problem may be) show
0 629.4 moveto
12 f0
(first solved by ignoring constraints which are particularly complex. These constraints are then checked) show
0 616.1 moveto
12 f0
(to determine if they are violated. If not, the optimization is complete. If one or more such constraints are) show
0 602.8 moveto
12 f0
(violated, they are added to the set of constraints, ) show
234.9 602.8 moveto
10 f4
(G\(J\)) show
258.9 602.8 moveto
12 f0
(, and CONMIN is called again to obtain the final) show
0 589.5 moveto
12 f0
(optimum design. This approach cannot always be expected to be most efficient, but does merit) show
0 576.2 moveto
12 f0
(consideration, especially when only moderate constraint violations are expected.) show
0 549.6 moveto
12 f0
(EXAMPLE 2 - CONSTRAINED ROSEN-SUZUKI FUNCTION WITH ANALYTIC GRADIENTS) show
0 523 moveto
12 f0
(The function minimized in EXAMPLE 1 is now solved by computing all analytic gradients in closed) show
0 509.7 moveto
12 f0
(form. All control parameters are the same as before except for NFDG and IPRINT. The gradient of the) show
0 496.4 moveto
12 f0
(objective function with respect to the decision variables is: ) show
0 472.5 moveto
10 f4
(                 | 2*X\(1\) -  5 |) show
0 462 moveto
10 f4
(    grad\(OBJ\) =  | 2*X\(2\) -  5 |) show
0 451.5 moveto
10 f4
(                 | 4*X\(3\) - 21 |) show
0 441 moveto
10 f4
(                 | 2*X\(4\) +  7 |) show
0 417.3 moveto
12 f0
(The gradients of the constraint functions are: ) show
0 393.4 moveto
10 f4
(                  | 2*X\(1\) + 1 |                     | 2*X\(1\) - 1 |) show
0 382.9 moveto
10 f4
(    grad\(G\(1\)\) =  | 2*X\(2\) - 1 |        grad\(G\(2\)\) = | 4*X\(2\)     |) show
0 372.4 moveto
10 f4
(                  | 2*X\(3\) + 1 |                     | 2*X\(3\)     |) show
0 361.9 moveto
10 f4
(                  | 2*X\(4\) - 1 |                     | 4*X\(4\) - 1 |) show
0 340.9 moveto
10 f4
(                  | 4*X\(1\) + 2 |) show
0 330.4 moveto
10 f4
(    grad\(G\(3\)\) =  | 2*X\(2\) - 1 |) show
0 319.9 moveto
10 f4
(                  | 2*X\(3\)     |) show
0 309.4 moveto
10 f4
(                  |   - 1      |) show
0 285.7 moveto
12 f0
(The main program is the same as before \() show
199.2 285.7 moveto
12 f0
(Listing 1) show
242.2 285.7 moveto
12 f0
(\). The subroutine is in ) show
350.8 285.7 moveto
12 f0
(Listing 4) show
393.8 285.7 moveto
12 f0
( and the optimization) show
0 272.4 moveto
12 f0
(results in ) show
46.6 272.4 moveto
12 f0
(Listing 5) show
89.6 272.4 moveto
12 f0
(, where an optimum design of ) show
235.9 272.4 moveto
10 f4
(OBJ = 6.01) show
295.9 272.4 moveto
12 f0
( is obtained with ) show
0 248.5 moveto
10 f4
(     X = \(0.027, 0.995, 1.98, -1.01\)) show
0 224.8 moveto
12 f0
(The additional exercises described in example 1 may also be solved here, just as before.) show
0 198.2 moveto
12 f0
(EXAMPLE 3 - 3-BAR TRUSS.) show
0 171.6 moveto
12 f0
(As a final example, consider the 3-bar truss shown in ) show
258.2 171.6 moveto
12 f0
(Fig. 9) show
286.2 171.6 moveto
12 f0
(. The structure is subjected to two) show
0 158.3 moveto
12 f0
(symmetric, but independent load conditions, P1 and P2, as shown. The truss is to be designed for) show
0 145 moveto
12 f0
(minimum weight, subject to stress limitations only, so that:) show
0 121.1 moveto
10 f4
(     -15 KSI .LE. SIGIJ .LE. 20 KSI     I = 1,3     J = 1,2) show
0 97.4 moveto
12 f0
(where ) show
32.3 97.4 moveto
10 f4
(SIGIJ) show
62.3 97.4 moveto
12 f0
( is the stress in member ) show
178.2 97.4 moveto
10 f4
(I) show
184.2 97.4 moveto
12 f0
( under load condition ) show
289.5 97.4 moveto
10 f4
(J) show
295.5 97.4 moveto
12 f0
(. While this is a very simple structure, it is) show
0 84.1 moveto
12 f0
(of particular historical significance in the field of automated structural design, having been first used by) show
pagelevel restore
showpage
%%Page: 20 20
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
0 709.2 moveto
12 f0
(Schmit \() show
41 709.2 moveto
12 f0
(ref. 5) show
66.3 709.2 moveto
12 f0
(\) to demonstrate that an optimally designed structure may not be fully stressed. That is,) show
0 695.9 moveto
12 f0
(one or more members may not be stressed to their maximum design stress under any of the applied load) show
0 682.6 moveto
12 f0
(conditions.) show
0 656 moveto
12 f0
(The design variables are chosen as the member cross-sectional areas, ) show
334.2 656 moveto
10 f4
(A1) show
346.2 656 moveto
12 f0
( and ) show
369.5 656 moveto
10 f4
(A2) show
381.5 656 moveto
12 f0
(, where ) show
419.8 656 moveto
10 f4
(A3 = A1) show
461.8 656 moveto
12 f0
( due to) show
0 642.7 moveto
12 f0
(symmetry. Then the objective function is:) show
0 618.8 moveto
10 f4
(     OBJ = 10*RHO*\(2*SQRT\(2\)*A1 + A2\)) show
0 595.1 moveto
12 f0
(where ) show
32.3 595.1 moveto
10 f4
(RHO) show
50.3 595.1 moveto
12 f0
( is the material density \() show
165.9 595.1 moveto
10 f4
(RHO = 0.1) show
219.9 595.1 moveto
12 f0
(\). The stress state is defined by: ) show
0 571.2 moveto
10 f4
(     SIG11 = SIG32 = 20.*\(SQRT\(2.\)*A1 + A2\)/\(2.*A1*A2 + SQRT\(2.\)*A1*A1\)) show
0 550.2 moveto
10 f4
(     SIG21 = SIG22 = 20.*SQRT\(2.\)*A1/\(2.*A1*A2+SQRT\(2.\)*A1*A1\)) show
0 529.2 moveto
10 f4
(     SIG31 = SIG13 = -20.*A2/\(2.*A1*A2+SQRT\(2.\)*A1*A1\)) show
0 505.5 moveto
12 f0
(Remembering that ) show
91.9 505.5 moveto
10 f4
(-15 KSI .LE. SIGIJ .LE. 20 KSI,) show
277.9 505.5 moveto
12 f0
( there are six independent nonlinear) show
0 492.2 moveto
12 f0
(constraints. The compressive stress constraint on member 1 under load condition 1 is given as:) show
0 468.3 moveto
10 f4
(     -SIG11 - 15.0 .LE. 0) show
0 444.6 moveto
12 f0
(or in normalized form: ) show
0 420.7 moveto
10 f4
(     -SIG11/15.0 -1 .LE. 0) show
0 397 moveto
12 f0
(Similarly: ) show
0 373.1 moveto
10 f4
(      SIG11/20.0 -1 .LE. 0) show
0 352.1 moveto
10 f4
(     -SIG21/15.0 -1 .LE. 0) show
0 331.1 moveto
10 f4
(      SIG21/20.0 -1 .LE. 0) show
0 310.1 moveto
10 f4
(     -SIG31/15.0 -1 .LE. 0) show
0 289.1 moveto
10 f4
(      SIG31/20.0 -1 .LE. 0) show
0 265.4 moveto
12 f0
(Because negative member areas are not physically meaningful, lower bounds of zero must be imposed) show
0 252.1 moveto
12 f0
(on the design variables. However, noting that the stress, ) show
271.2 252.1 moveto
10 f4
(SIGIJ) show
301.2 252.1 moveto
12 f0
(, is undefined if ) show
379.5 252.1 moveto
10 f4
(A1) show
391.5 252.1 moveto
12 f0
( equals zero, lower) show
0 238.8 moveto
12 f0
(bounds of 0.001 will be prescribed. The upper bounds are taken as 1.0E + 10 to insure that these bounds) show
0 225.5 moveto
12 f0
(will never be active.) show
0 198.9 moveto
12 f0
(The objective function is linear in ) show
165.3 198.9 moveto
10 f4
(A1) show
177.3 198.9 moveto
12 f0
( and ) show
200.6 198.9 moveto
10 f4
(A2) show
212.6 198.9 moveto
12 f0
( so the linear objective function identifier is taken as) show
0 185.6 moveto
10 f4
(LINOBJ = 1) show
60 185.6 moveto
12 f0
(.) show
0 159 moveto
12 f0
(The gradient of ) show
76.9 159 moveto
10 f4
(OBJ) show
94.9 159 moveto
12 f0
( is easily calculated so this will be done analytically, while the gradients of the) show
0 145.7 moveto
12 f0
(constraint functions are calculated by finite difference. Then the gradient of ) show
365.9 145.7 moveto
10 f4
(OBJ) show
383.9 145.7 moveto
12 f0
( is defined by:) show
0 121.8 moveto
10 f4
(                   | 20.0*SQRT\(2.0\)*RHO |) show
0 111.3 moveto
10 f4
(     grad\(OBJ\)  =  |                    |) show
0 100.8 moveto
10 f4
(                   | 10.0*RHO           |) show
0 77.1 moveto
12 f0
(The print control will be taken as ) show
162.3 77.1 moveto
10 f4
(IPRINT = 1) show
222.3 77.1 moveto
12 f0
( and the default values are used for all other control) show
pagelevel restore
showpage
%%Page: 21 21
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
0 709.2 moveto
12 f0
(parameters. Then the control parameters are defined as:) show
0 685.3 moveto
10 f4
(     IPRINT = 1, NDV = 2, NCON = 6, NSIDE = 1, NFDG = 2, LINOBJ = 1,) show
0 674.8 moveto
10 f4
(     ITMAX = ICNDIR = NSCAL = ITRM = DABFUN = 0,) show
0 664.3 moveto
10 f4
(     FDCH = FDCHM = CT = CTMIN = CTL = CTLMIN = THETA = PHI = DELFUN = 0.) show
0 640.6 moveto
12 f0
(All constraints are nonlinear so the linear constraint identification vector contains all zeros:) show
0 616.7 moveto
10 f4
(     ISC\(J\) = 0     J = 1, NCON) show
0 593 moveto
12 f0
(The lower and upper bounds are defined as: ) show
0 569.1 moveto
10 f4
(     VLB\(I\) = 0.001     VUB\(I\) = 1.0E+10     I = 1, NDV) show
0 545.4 moveto
12 f0
(The optimum design is known to be ) show
0 521.5 moveto
10 f4
(     OBJ = 2.639) show
0 497.8 moveto
12 f0
(where ) show
0 473.9 moveto
10 f4
(     X = \(0.789, 0.408\)) show
0 450.2 moveto
12 f0
(The main program and analysis subroutine for this example is in ) show
312.2 450.2 moveto
12 f0
(Listing 6) show
355.2 450.2 moveto
12 f0
( The optimization results are) show
0 436.9 moveto
12 f0
(given in ) show
41.9 436.9 moveto
12 f0
(Listing 7) show
84.9 436.9 moveto
12 f0
(, where: ) show
0 413 moveto
10 f4
(     OBJ = 2.63) show
0 389.3 moveto
12 f0
(and ) show
0 365.4 moveto
10 f4
(     X = \(0.78, 0.43\)) show
0 341.7 moveto
12 f0
(Note that only constraint number 2 \(the tensile stress constraint in member 1 under load condition 1\) is) show
0 328.4 moveto
12 f0
(active. These results were produced on a MicroVAX workstation using single precision arithmetic.) show
0 306 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
209 272.9 moveto
14 f1
(APPENDIX A) show
88.9 243.6 moveto
14 f1
(SUMMARY OF PARAMETERS USED BY CONMIN) show
0 216.6 moveto
12 f0
(COMMON BLOCKS: ) show
0 192.7 moveto
10 f4
(     COMMON /CNMN1/ IPRINT, NDV, ITMAX, NCON, NSIDE, ICNDIR, NSCAL, NFDG,) show
0 182.2 moveto
10 f4
(    1 FDCH, FDCHM, CT, CTMIN, CTL, CTLMIN, THETA, PHI, NAC, NACMX1, DELFUN,) show
0 171.7 moveto
10 f4
(    2 DABFUN, LINOBJ, ITRM, ITER, NCAL\(4\)) show
0 150.7 moveto
10 f4
(     COMMON /CNMN2/ X\(N1\), DF\(N1\), G\(N2\), ISC\(N8\), IC\(N4\), A\(N4,N3\)) show
0 129.7 moveto
10 f4
(     COMMON /CNMN3/ S\(N3\), G1\(N7\), G2\(N2\), C\(N9\), MS1\(N6\), B\(N4,N4\)) show
0 108.7 moveto
10 f4
(     COMMON /CNMN4/ VLB\(N1\), VUB\(N1\), SCAL\(N5\)) show
0 85 moveto
12 f0
(CALL STATEMENTS: ) show
pagelevel restore
showpage
%%Page: 22 22
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
0 709.1 moveto
10 f4
(     CALL CONMIN \(SUB1, OBJ\)) show
0 688.1 moveto
10 f4
(     CALL SUB1\(INFO, OBJ\)) show
0 664.4 moveto
12 f0
(PARAMETERS DEFINED IN THE MAIN PROGRAM: ) show
0 640.5 moveto
10 f4
(PARAMETERS  DEFAULT          DEFINITION) show
0 619.5 moveto
10 f4
(  IPRINT                Print control.) show
0 598.5 moveto
10 f4
(  NDV                   Number of decision variables, X\(I\).) show
0 577.5 moveto
10 f4
(  ITMAX     10          Maximum number of iterations in the) show
0 567 moveto
10 f4
(                        minimization process.) show
0 546 moveto
10 f4
(  NCON                  Number of constraint functions, G\(J\).) show
0 525 moveto
10 f4
(  NSIDE                 Side constraint parameter.) show
0 514.5 moveto
10 f4
(                        NSIDE.GT.0 indicates that lower and upper) show
0 504 moveto
10 f4
(                        bounds are imposed on the decision variables.) show
0 483 moveto
10 f4
(  ICNDIR   NDV + 1      Conjugate direction restart parameter.) show
0 472.5 moveto
10 f4
(                        Restart with steepest descent move every) show
0 462 moveto
10 f4
(                        ICNDIR iterations.) show
0 441 moveto
10 f4
(  NSCAL                 Scaling control parameter.) show
0 430.5 moveto
10 f4
(                        NSCAL.LT.0, user supplies scaling vector.) show
0 420 moveto
10 f4
(                        NSCAL.EQ.0, no scaling, NSCAL.GT.0, automatic) show
0 409.5 moveto
10 f4
(                        linear scaling every NSCAL iterations.) show
0 388.5 moveto
10 f4
(  NFDG                  Gradient calculation control parameter.) show
0 367.5 moveto
10 f4
(  FDCH       0.01       Relative change in decision variable, X\(I\),) show
0 357 moveto
10 f4
(                        in calculating finite difference gradients.) show
0 336 moveto
10 f4
(  FDCHM      0.01       Minimum absolute step in finite difference) show
0 325.5 moveto
10 f4
(                        gradient calculations.) show
0 304.5 moveto
10 f4
(  CT        -0.1        Constraint thickness parameter.) show
0 283.5 moveto
10 f4
(  CTMIN      0.004      Minimum absolute value of CT considered) show
0 273 moveto
10 f4
(                        in optimization process.) show
0 252 moveto
10 f4
(  CTL       -0.01       Constraint thickness parameter for linear) show
0 241.5 moveto
10 f4
(                        and side constraints.) show
0 220.5 moveto
10 f4
(  CTLMIN     0.001      Minimum absolute value of CTL considered) show
0 210 moveto
10 f4
(                        in optimization process.) show
0 189 moveto
10 f4
(  THETA      1.0        Mean value of push-off factor in method) show
0 178.5 moveto
10 f4
(                        of feasible directions.) show
0 157.5 moveto
10 f4
(  PHI        5.0        Participation coefficient, used if one or more) show
0 147 moveto
10 f4
(                        constraints are violated.) show
0 126 moveto
10 f4
(  NACMX1                1 plus user's best estimate of the maximum) show
0 115.5 moveto
10 f4
(                        number of constraints \(including side constraints\)) show
0 105 moveto
10 f4
(                        which will be active or violated at any time) show
0 94.5 moveto
10 f4
(                        in the minimization process.) show
pagelevel restore
showpage
%%Page: 23 23
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
0 711.9 moveto
10 f4
(  DELFUN     0.001      Minimum relative change in objective function,) show
0 701.4 moveto
10 f4
(                        OBJ, to indicate convergence.) show
0 680.4 moveto
10 f4
(  DABFUN     0.001*initial OBJ   Minimum absolute change in objective) show
0 669.9 moveto
10 f4
(                                 function, OBJ, to indicate convergence.) show
0 648.9 moveto
10 f4
(  LINOBJ                Linear objective function identifier.) show
0 638.4 moveto
10 f4
(                        LINOBJ = 1 if OBJ is specifically known to be) show
0 627.9 moveto
10 f4
(                        linear in X\(I\).  LINOBJ = 0 if OBJ is nonlinear.) show
0 606.9 moveto
10 f4
(  ITRM       3          Number of consecutive iterations to indicate) show
0 596.4 moveto
10 f4
(                        convergence by relative or absolute changes,) show
0 585.9 moveto
10 f4
(                        DELFUN or DABFUN.) show
0 564.9 moveto
10 f4
(  X                     Vector of decision variables.) show
0 543.9 moveto
10 f4
(  VLB                   Vector of lower bounds on decision variables.) show
0 522.9 moveto
10 f4
(  VUB                   Vector of upper bounds on decision variables.) show
0 501.9 moveto
10 f4
(  SCAL                  Vector of scaling parameters.) show
0 480.9 moveto
10 f4
(  ISC                   Linear constraint identification vector.) show
0 457.2 moveto
12 f0
(PARAMETERS DEFINED IN EXTERNAL ROUTINE SUB1: ) show
0 433.3 moveto
10 f4
(PARAMETER            DEFINITION) show
0 412.3 moveto
10 f4
(  OBJ          Value of objective function.) show
0 391.3 moveto
10 f4
(  G            Vector of constraint values.) show
0 370.3 moveto
10 f4
(  DF           Analytic gradient of objective function.) show
0 349.3 moveto
10 f4
(  NAC          Number of active and violated constraints \(G\(J\).GE.CT\).) show
0 328.3 moveto
10 f4
(  A            Matrix containing analytic gradients of active) show
0 317.8 moveto
10 f4
(               or violated constraints.) show
0 296.8 moveto
10 f4
(  IC           Identifies which constraints are active or violated.) show
0 273.1 moveto
12 f0
(PARAMETERS DEFINED IN CONMIN AND ASSOCIATED ROUTINES ) show
0 249.2 moveto
10 f4
(PARAMETER            DEFINITION) show
0 228.2 moveto
10 f4
(  ITER         Iteration number.) show
0 207.2 moveto
10 f4
(  NCAL\(4\)      Bookkeeping information.  NCAL\(I\) gives number of) show
0 196.7 moveto
10 f4
(               times that INFO = I during optimization process.) show
0 175.7 moveto
10 f4
(  S            Direction vector.) show
0 154.7 moveto
10 f4
(  G1           Temporary storage of vectors G and X.) show
0 133.7 moveto
10 f4
(  G2           Temporary storage of vector G.) show
0 112.7 moveto
10 f4
(  B            Used in finding usable-feasible direction.) show
0 91.7 moveto
10 f4
(  C            Used in finding usable-feasible direction and for) show
0 81.2 moveto
10 f4
(               temporary storage of vector X.) show
pagelevel restore
showpage
%%Page: 24 24
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
0 709.7 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
209.4 676.6 moveto
14 f1
(APPENDIX B) show
119.8 647.3 moveto
14 f1
(CONMIN SUBROUTINE DESCRIPTIONS) show
0 620.3 moveto
12 f0
(Following is a list of the subroutines associated with CONMIN. If the array dimensions are changed) show
0 607 moveto
12 f0
(from those currently used, the common blocks in each routine must be changed accordingly. ) show
0 583.1 moveto
10 f4
(CONMIN    Main optimization routine.) show
0 562.1 moveto
10 f4
(CNMN01    Routine to calculate gradient information by finite) show
0 551.6 moveto
10 f4
(          difference.) show
0 530.6 moveto
10 f4
(CNMN02    Calculate direction of steepest descent, or conjugate) show
0 520.1 moveto
10 f4
(          direction in unconstrained function minimization.) show
0 499.1 moveto
10 f4
(CNMN03    Solve one-dimensional search in unconstrained function) show
0 488.6 moveto
10 f4
(          minimization.) show
0 467.6 moveto
10 f4
(CNMN04    Find minimum of one-dimensional function by polynomial) show
0 457.1 moveto
10 f4
(          interpolation.) show
0 436.1 moveto
10 f4
(CNMN05    Determine usable-feasible, or modified usable-feasible,) show
0 425.6 moveto
10 f4
(          direction in constrained function minimization.) show
0 404.6 moveto
10 f4
(CNMN06    Solve one-dimensional search for constrained function) show
0 394.1 moveto
10 f4
(          minimization.) show
0 373.1 moveto
10 f4
(CNMN07    Find zero of one-dimensional function by polynomial) show
0 362.6 moveto
10 f4
(          interpolation.) show
0 341.6 moveto
10 f4
(CNMN08    Solve special linear programming problem in determination) show
0 331.1 moveto
10 f4
(          of usable-feasible, or modified usable-feasible direction) show
0 320.6 moveto
10 f4
(          in constrained function minimization.) show
0 299.6 moveto
10 f4
(CNMN09    Unscale and rescale decision variables before and after) show
0 289.1 moveto
10 f4
(          function evaluation.) show
0 259.1 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
217.6 228.8 moveto
14 f1
(LISTING 1) show
118.6 199.5 moveto
14 f1
(MAIN PROGRAM FOR EXAMPLES 1 & 2) show
0 164.7 moveto
10 f4
(CCCCC) show
0 154.2 moveto
10 f4
(      PROGRAM EXAMPL1) show
0 143.7 moveto
10 f4
(      DIMENSION S\(6\),G1\(11\),G2\(11\),B\(11,11\),C\(11\),MS1\(22\) ) show
0 133.2 moveto
10 f4
(      DIMENSION VLB\(6\),VUB\(6\),SCAL\(6\),DF\(6\),A\(6,11\),) show
0 122.7 moveto
10 f4
(     .              ISC\(11\),IC\(11\)) show
0 112.2 moveto
10 f4
(      COMMON /CNMN1/ DELFUN,DABFUN,FDCH,FDCHM,CT,CTMIN,CTL,CTLMIN,) show
0 101.7 moveto
10 f4
(     .               ALPHAX,ABOBJ1,THETA,OBJ,NDV,NCON,NSIDE,IPRINT, ) show
0 91.2 moveto
10 f4
(     .               NFDG,NSCAL,LINOBJ,ITMAX,ITRM,ICNDIR,IGOTO,NAC, ) show
0 80.7 moveto
10 f4
(     .               INFO,INFOG,ITER) show
pagelevel restore
showpage
%%Page: 25 25
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
0 711.9 moveto
10 f4
(      COMMON /VARABLE/ AOBJ,X\(6\),G\(11\)) show
0 701.4 moveto
10 f4
(      COMMON /ANDATA/ LOOPCNT ) show
0 690.9 moveto
10 f4
(      NAMELIST /CONPAR/ INFOG,INFO,NFDG,IPRINT,NDV,ITMAX,NCON,NSIDE,) show
0 680.4 moveto
10 f4
(     .                  ICNDIR,NSCAL,FDCH,FDCHM,CT,CTMIN,CTLMIN,THETA,) show
0 669.9 moveto
10 f4
(     .                  PHI,DELFUN,DABFUN,LINOBJ,ITRM,X,VLB,VUB,) show
0 659.4 moveto
10 f4
(     .                  N1,N2,N3,N4,N5,ALPHAX,ABOBJ1,CTL,ISC,SCAL ) show
0 648.9 moveto
10 f4
(C ) show
0 638.4 moveto
10 f4
(C     THIS PROGRAM EXECUTES THE EXAMPLE PROBLEM ONE OF THE CONMIN ) show
0 627.9 moveto
10 f4
(C     MANUAL. ) show
0 617.4 moveto
10 f4
(C ) show
0 606.9 moveto
10 f4
(C ) show
0 596.4 moveto
10 f4
(C  INITIALIZE ) show
0 585.9 moveto
10 f4
(C ) show
0 575.4 moveto
10 f4
(      INFOG=0 ) show
0 564.9 moveto
10 f4
(      INFO=0) show
0 554.4 moveto
10 f4
(      NFDG=0) show
0 543.9 moveto
10 f4
(      IPRINT=2) show
0 533.4 moveto
10 f4
(      NDV=4 ) show
0 522.9 moveto
10 f4
(      ITMAX=40) show
0 512.4 moveto
10 f4
(      NCON=3) show
0 501.9 moveto
10 f4
(      NSIDE=0 ) show
0 491.4 moveto
10 f4
(      ICNDIR=0) show
0 480.9 moveto
10 f4
(      NSCAL=0 ) show
0 470.4 moveto
10 f4
(      FDCH=0.0) show
0 459.9 moveto
10 f4
(      FDCHM=0.0 ) show
0 449.4 moveto
10 f4
(      CT=0.0) show
0 438.9 moveto
10 f4
(      CTMIN=0.0 ) show
0 428.4 moveto
10 f4
(      CTL=0.0 ) show
0 417.9 moveto
10 f4
(      CTLMIN=0.0) show
0 407.4 moveto
10 f4
(      THETA=0.0 ) show
0 396.9 moveto
10 f4
(      PHI=0.0 ) show
0 386.4 moveto
10 f4
(      DELFUN=0.0) show
0 375.9 moveto
10 f4
(      DABFUN=0.0) show
0 365.4 moveto
10 f4
(      LINOBJ=0.0) show
0 354.9 moveto
10 f4
(      ITRM=0) show
0 344.4 moveto
10 f4
(      N1=6) show
0 333.9 moveto
10 f4
(      N2=11 ) show
0 323.4 moveto
10 f4
(      N3=11 ) show
0 312.9 moveto
10 f4
(      N4=11 ) show
0 302.4 moveto
10 f4
(      N5=22 ) show
0 291.9 moveto
10 f4
(      ALPHAX=0.0) show
0 281.4 moveto
10 f4
(      ABOBJ1=0.0) show
0 270.9 moveto
10 f4
(      CTL=0.0 ) show
0 260.4 moveto
10 f4
(      DO 5 I=1,NDV) show
0 249.9 moveto
10 f4
(        X\(I\)=1.0) show
0 239.4 moveto
10 f4
(        VLB\(I\)=-99999.) show
0 228.9 moveto
10 f4
(        VUB\(I\)= 99999.) show
0 218.4 moveto
10 f4
(    5 CONTINUE) show
0 207.9 moveto
10 f4
(C ) show
0 197.4 moveto
10 f4
(      DO 6 J=1,NCON ) show
0 186.9 moveto
10 f4
(        ISC\(J\)=0) show
0 176.4 moveto
10 f4
(    6 CONTINUE) show
0 165.9 moveto
10 f4
(C ) show
0 155.4 moveto
10 f4
(C     READ THE PARAMETERS FOR CONMIN) show
0 144.9 moveto
10 f4
(C ) show
0 134.4 moveto
10 f4
(CCC   READ\(5,CONPAR\)                  USE DEFAULT VALUES) show
0 123.9 moveto
10 f4
(      WRITE\(6,CONPAR\) ) show
0 113.4 moveto
10 f4
(      NLIM=ITMAX*\(NDV+5\)) show
0 102.9 moveto
10 f4
(C ) show
0 92.4 moveto
10 f4
(C     NON-ITERATIVE PART OF ANALYSIS) show
0 81.9 moveto
10 f4
(C ) show
pagelevel restore
showpage
%%Page: 26 26
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
0 711.9 moveto
10 f4
(      IGOTO = 0 ) show
0 701.4 moveto
10 f4
(C ) show
0 690.9 moveto
10 f4
(C     ITERATIVE PART OF ANALYSIS) show
0 680.4 moveto
10 f4
(C ) show
0 669.9 moveto
10 f4
(      DO 1000 I = 1,NLIM) show
0 659.4 moveto
10 f4
(        LOOPCNT=I ) show
0 648.9 moveto
10 f4
(C ) show
0 638.4 moveto
10 f4
(C       CALL THE OPTIMIZATION ROUTINE CONMIN) show
0 627.9 moveto
10 f4
(C ) show
0 617.4 moveto
10 f4
(        CALL CONMIN\(X,VLB,VUB,G,SCAL,DF,A,S,G1,G2,B,C,ISC,IC,MS1,N1,N2, ) show
0 606.9 moveto
10 f4
(     .              N3,N4,N5\) ) show
0 596.4 moveto
10 f4
(C ) show
0 585.9 moveto
10 f4
(        IF\(IGOTO.EQ.0\) LOOPCNT=-999 ) show
0 575.4 moveto
10 f4
(C ) show
0 564.9 moveto
10 f4
(C       ANALYSIS MODULE ) show
0 554.4 moveto
10 f4
(C ) show
0 543.9 moveto
10 f4
(        CALL ANALYS ) show
0 533.4 moveto
10 f4
(        OBJ=AOBJ) show
0 522.9 moveto
10 f4
(        IF \(IGOTO.EQ.0\) GO TO 1100) show
0 512.4 moveto
10 f4
( 1000 CONTINUE) show
0 501.9 moveto
10 f4
(C ) show
0 491.4 moveto
10 f4
(C ) show
0 480.9 moveto
10 f4
( 1100 CONTINUE) show
0 470.4 moveto
10 f4
(      STOP) show
0 459.9 moveto
10 f4
(      END ) show
0 449.4 moveto
10 f4
(CCCCC) show
0 429.9 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
217.6 399.6 moveto
14 f1
(LISTING 2) show
110 370.3 moveto
14 f1
(ANALYSIS SUBROUTINE FOR EXAMPLE 1) show
0 346 moveto
10 f4
(CCCCC) show
0 335.5 moveto
10 f4
(      SUBROUTINE ANALYS ) show
0 325 moveto
10 f4
(      COMMON /VARABLE/ AOBJ,X\(6\),G\(11\)) show
0 314.5 moveto
10 f4
(C ) show
0 304 moveto
10 f4
(C   ROUTINE TO CALCULATE OBJECTIVE FUNCTION AND ) show
0 293.5 moveto
10 f4
(C   CONSTRAINTS ) show
0 283 moveto
10 f4
(C ) show
0 272.5 moveto
10 f4
(C ) show
0 262 moveto
10 f4
(C  OBJECTIVE FUNCTION ) show
0 251.5 moveto
10 f4
(C ) show
0 241 moveto
10 f4
(      AOBJ = X\(1\)**2 - 5.*X\(1\) + X\(2\)**2 - 5.*X\(2\) + 2.*X\(3\)**2 ) show
0 230.5 moveto
10 f4
(     .       - 21.*X\(3\) + X\(4\)**2 + 7.0*X\(4\) + 50.) show
0 220 moveto
10 f4
(C ) show
0 209.5 moveto
10 f4
(C ) show
0 199 moveto
10 f4
(C   CONSTRAINT VALUES ) show
0 188.5 moveto
10 f4
(C ) show
0 178 moveto
10 f4
(      G\(1\) = X\(1\)**2 + X\(1\) + X\(2\)**2 - X\(2\) + X\(3\)**2 + X\(3\) ) show
0 167.5 moveto
10 f4
(     .       + X\(4\)**2 - X\(4\) - 8.0) show
0 157 moveto
10 f4
(C ) show
0 146.5 moveto
10 f4
(      G\(2\) = X\(1\)**2 - X\(1\) + 2. * X\(2\)**2 + X\(3\)**2 + 2.*X\(4\)**2 ) show
0 136 moveto
10 f4
(     .       - X\(4\) - 10.0 ) show
0 125.5 moveto
10 f4
(C ) show
0 115 moveto
10 f4
(      G\(3\) = 2.*X\(1\)**2 + 2.*X\(1\) + X\(2\)**2 - X\(2\) + X\(3\)**2 - X\(4\) -5.0 ) show
0 104.5 moveto
10 f4
(C ) show
0 94 moveto
10 f4
(      RETURN) show
0 83.5 moveto
10 f4
(      END ) show
pagelevel restore
showpage
%%Page: 27 27
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
0 711.9 moveto
10 f4
(CCCCC) show
0 681.9 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
217.6 651.6 moveto
14 f1
(LISTING 3) show
105.8 622.3 moveto
14 f1
(OPTIMIZATION RESULTS FOR EXAMPLE 1) show
0 598 moveto
10 f4
(1$CONPAR) show
0 587.5 moveto
10 f4
(INFOG   = 0,) show
0 577 moveto
10 f4
(INFO    = 0,) show
0 566.5 moveto
10 f4
(NFDG    = 0,) show
0 556 moveto
10 f4
(IPRINT  = 2,) show
0 545.5 moveto
10 f4
(NDV     = 4,) show
0 535 moveto
10 f4
(ITMAX   = 40,) show
0 524.5 moveto
10 f4
(NCON    = 3,) show
0 514 moveto
10 f4
(NSIDE   = 0,) show
0 503.5 moveto
10 f4
(ICNDIR  = 0,) show
0 493 moveto
10 f4
(NSCAL   = 0,) show
0 482.5 moveto
10 f4
(FDCH    = 0.0,) show
0 472 moveto
10 f4
(FDCHM   = 0.0,) show
0 461.5 moveto
10 f4
(CT      = 0.0,) show
0 451 moveto
10 f4
(CTMIN   = 0.0,) show
0 440.5 moveto
10 f4
(CTLMIN  = 0.0,) show
0 430 moveto
10 f4
(THETA   = 0.0,) show
0 419.5 moveto
10 f4
(PHI     = 0.0,) show
0 409 moveto
10 f4
(DELFUN  = 0.0,) show
0 398.5 moveto
10 f4
(DABFUN  = 0.0,) show
0 388 moveto
10 f4
(LINOBJ  = 0,) show
0 377.5 moveto
10 f4
(ITRM    = 0,) show
0 367 moveto
10 f4
(X       = .1E+01, .1E+01, .1E+01, .1E+01, 0.0, 0.0,) show
0 356.5 moveto
10 f4
(VLB     = -.99999E+05, -.99999E+05, -.99999E+05, -.99999E+05, 0.0, 0.0,) show
0 346 moveto
10 f4
(VUB     = .99999E+05, .99999E+05, .99999E+05, .99999E+05, 0.0, 0.0,) show
0 335.5 moveto
10 f4
(N1      = 6,) show
0 325 moveto
10 f4
(N2      = 11,) show
0 314.5 moveto
10 f4
(N3      = 11,) show
0 304 moveto
10 f4
(N4      = 11,) show
0 293.5 moveto
10 f4
(N5      = 22,) show
0 283 moveto
10 f4
(ALPHAX  = 0.0,) show
0 272.5 moveto
10 f4
(ABOBJ1  = 0.0,) show
0 262 moveto
10 f4
(CTL     = 0.0,) show
0 251.5 moveto
10 f4
(ISC     = 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,) show
0 241 moveto
10 f4
(SCAL    = 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,) show
0 230.5 moveto
10 f4
($END) show
0 220 moveto
10 f4
( ) show
0 209.5 moveto
10 f4
(            * * * * * * * * * * * * * * * * * * * * * * * * * * *) show
0 199 moveto
10 f4
(            *                                                   *) show
0 188.5 moveto
10 f4
(            *                    C O N M I N                    *) show
0 178 moveto
10 f4
(            *                                                   *) show
0 167.5 moveto
10 f4
(            *                FORTRAN PROGRAM FOR                *) show
0 157 moveto
10 f4
(            *                                                   *) show
0 146.5 moveto
10 f4
(            *         CONSTRAINED FUNCTION MINIMIZATION         *) show
0 136 moveto
10 f4
(            *                                                   *) show
0 125.5 moveto
10 f4
(            * * * * * * * * * * * * * * * * * * * * * * * * * * *) show
0 115 moveto
10 f4
( ) show
0 104.5 moveto
10 f4
( ) show
0 94 moveto
10 f4
( ) show
0 83.5 moveto
10 f4
( ) show
pagelevel restore
showpage
%%Page: 28 28
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
0 711.9 moveto
10 f4
(     CONSTRAINED FUNCTION MINIMIZATION) show
0 701.4 moveto
10 f4
( ) show
0 690.9 moveto
10 f4
(     CONTROL PARAMETERS) show
0 680.4 moveto
10 f4
( ) show
0 669.9 moveto
10 f4
(     IPRINT  NDV    ITMAX    NCON    NSIDE  ICNDIR   NSCAL   NFDG) show
0 659.4 moveto
10 f4
(       2       4      40       3       0       5       0       0) show
0 648.9 moveto
10 f4
( ) show
0 638.4 moveto
10 f4
(     LINOBJ  ITRM     N1      N2      N3      N4      N5) show
0 627.9 moveto
10 f4
(       0       3       6      11      11      11      22) show
0 617.4 moveto
10 f4
( ) show
0 606.9 moveto
10 f4
(         CT              CTMIN           CTL             CTLMIN) show
0 596.4 moveto
10 f4
(      -.10000E+00      .40000E-02     -.10000E-01      .10000E-02) show
0 585.9 moveto
10 f4
( ) show
0 575.4 moveto
10 f4
(         THETA           PHI             DELFUN          DABFUN) show
0 564.9 moveto
10 f4
(       .10000E+01      .50000E+01      .10000E-03      .31000E-01) show
0 554.4 moveto
10 f4
( ) show
0 543.9 moveto
10 f4
(         FDCH            FDCHM           ALPHAX          ABOBJ1) show
0 533.4 moveto
10 f4
(       .10000E-01      .10000E-01      .10000E+00      .10000E+00) show
0 522.9 moveto
10 f4
( ) show
0 512.4 moveto
10 f4
(     ALL CONSTRAINTS ARE NON-LINEAR) show
0 501.9 moveto
10 f4
( ) show
0 491.4 moveto
10 f4
( ) show
0 480.9 moveto
10 f4
(     INITIAL FUNCTION INFORMATION) show
0 470.4 moveto
10 f4
( ) show
0 459.9 moveto
10 f4
(     OBJ =    .310000E+02) show
0 449.4 moveto
10 f4
( ) show
0 438.9 moveto
10 f4
(     DECISION VARIABLES \(X-VECTOR\)) show
0 428.4 moveto
10 f4
(       1\)     .10000E+01   .10000E+01   .10000E+01   .10000E+01) show
0 417.9 moveto
10 f4
( ) show
0 407.4 moveto
10 f4
(     CONSTRAINT VALUES \(G-VECTOR\)) show
0 396.9 moveto
10 f4
(       1\)    -.40000E+01  -.60000E+01  -.10000E+01) show
0 386.4 moveto
10 f4
( ) show
0 375.9 moveto
10 f4
( ) show
0 365.4 moveto
10 f4
( ) show
0 354.9 moveto
10 f4
( ) show
0 344.4 moveto
10 f4
( ) show
0 333.9 moveto
10 f4
(     ITER =    1     OBJ =    .25484E+02) show
0 323.4 moveto
10 f4
( ) show
0 312.9 moveto
10 f4
(     DECISION VARIABLES \(X-VECTOR\)) show
0 302.4 moveto
10 f4
(       1\)     .10436E+01   .10436E+01   .12479E+01   .86847E+00) show
0 291.9 moveto
10 f4
( ) show
0 281.4 moveto
10 f4
(     CONSTRAINT VALUES \(G-VECTOR\)) show
0 270.9 moveto
10 f4
(       1\)    -.31307E+01  -.55788E+01  -.56843E-13) show
0 260.4 moveto
10 f4
( ) show
0 249.9 moveto
10 f4
( ) show
0 239.4 moveto
10 f4
( ) show
0 228.9 moveto
10 f4
( ) show
0 218.4 moveto
10 f4
(     ITER =    2     OBJ =    .12204E+02) show
0 207.9 moveto
10 f4
( ) show
0 197.4 moveto
10 f4
(     DECISION VARIABLES \(X-VECTOR\)) show
0 186.9 moveto
10 f4
(       1\)    -.65498E+00   .10325E+01   .23572E+01   .13804E+00) show
0 176.4 moveto
10 f4
( ) show
0 165.9 moveto
10 f4
(     CONSTRAINT VALUES \(G-VECTOR\)) show
0 155.4 moveto
10 f4
(       1\)    -.39775E+00  -.13275E+01  -.76739E-12) show
0 144.9 moveto
10 f4
( ) show
0 134.4 moveto
10 f4
( ) show
0 123.9 moveto
10 f4
( ) show
0 113.4 moveto
10 f4
( ) show
0 102.9 moveto
10 f4
(     ITER =    3     OBJ =    .83763E+01) show
0 92.4 moveto
10 f4
( ) show
0 81.9 moveto
10 f4
(     DECISION VARIABLES \(X-VECTOR\)) show
pagelevel restore
showpage
%%Page: 29 29
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
0 711.9 moveto
10 f4
(       1\)     .22440E+00   .99268E+00   .20345E+01  -.31841E+00) show
0 701.4 moveto
10 f4
( ) show
0 690.9 moveto
10 f4
(     CONSTRAINT VALUES \(G-VECTOR\)) show
0 680.4 moveto
10 f4
(       1\)    -.11388E+01  -.35427E+01  -.85265E-13) show
0 669.9 moveto
10 f4
( ) show
0 659.4 moveto
10 f4
( ) show
0 648.9 moveto
10 f4
( ) show
0 638.4 moveto
10 f4
( ) show
0 627.9 moveto
10 f4
(     ITER =    4     OBJ =    .69420E+01) show
0 617.4 moveto
10 f4
( ) show
0 606.9 moveto
10 f4
(     DECISION VARIABLES \(X-VECTOR\)) show
0 596.4 moveto
10 f4
(       1\)    -.34392E+00   .10043E+01   .21498E+01  -.80388E+00) show
0 585.9 moveto
10 f4
( ) show
0 575.4 moveto
10 f4
(     CONSTRAINT VALUES \(G-VECTOR\)) show
0 564.9 moveto
10 f4
(       1\)    -.11369E-12  -.80266E+00  -.21613E-01) show
0 554.4 moveto
10 f4
( ) show
0 543.9 moveto
10 f4
( ) show
0 533.4 moveto
10 f4
( ) show
0 522.9 moveto
10 f4
( ) show
0 512.4 moveto
10 f4
(     ITER =    5     OBJ =    .63271E+01) show
0 501.9 moveto
10 f4
( ) show
0 491.4 moveto
10 f4
(     DECISION VARIABLES \(X-VECTOR\)) show
0 480.9 moveto
10 f4
(       1\)    -.67566E-01   .10136E+01   .20734E+01  -.81323E+00) show
0 470.4 moveto
10 f4
( ) show
0 459.9 moveto
10 f4
(     CONSTRAINT VALUES \(G-VECTOR\)) show
0 449.4 moveto
10 f4
(       1\)    -.20225E+00  -.14382E+01   .28422E-13) show
0 438.9 moveto
10 f4
( ) show
0 428.4 moveto
10 f4
( ) show
0 417.9 moveto
10 f4
( ) show
0 407.4 moveto
10 f4
( ) show
0 396.9 moveto
10 f4
(     ITER =    6     OBJ =    .61723E+01) show
0 386.4 moveto
10 f4
( ) show
0 375.9 moveto
10 f4
(     DECISION VARIABLES \(X-VECTOR\)) show
0 365.4 moveto
10 f4
(       1\)    -.94581E-01   .99247E+00   .20400E+01  -.96346E+00) show
0 354.9 moveto
10 f4
( ) show
0 344.4 moveto
10 f4
(     CONSTRAINT VALUES \(G-VECTOR\)) show
0 333.9 moveto
10 f4
(       1\)    -.56843E-13  -.94507E+00  -.53852E-01) show
0 323.4 moveto
10 f4
( ) show
0 312.9 moveto
10 f4
( ) show
0 302.4 moveto
10 f4
( ) show
0 291.9 moveto
10 f4
( ) show
0 281.4 moveto
10 f4
(     ITER =    7     OBJ =    .60706E+01) show
0 270.9 moveto
10 f4
( ) show
0 260.4 moveto
10 f4
(     DECISION VARIABLES \(X-VECTOR\)) show
0 249.9 moveto
10 f4
(       1\)     .74640E-01   .98928E+00   .19478E+01  -.10562E+01) show
0 239.4 moveto
10 f4
( ) show
0 228.9 moveto
10 f4
(     CONSTRAINT VALUES \(G-VECTOR\)) show
0 218.4 moveto
10 f4
(       1\)    -.16766E-01  -.10302E+01  -.28422E-13) show
0 207.9 moveto
10 f4
( ) show
0 197.4 moveto
10 f4
( ) show
0 186.9 moveto
10 f4
( ) show
0 176.4 moveto
10 f4
( ) show
0 165.9 moveto
10 f4
(     ITER =    8     OBJ =    .60218E+01) show
0 155.4 moveto
10 f4
( ) show
0 144.9 moveto
10 f4
(     DECISION VARIABLES \(X-VECTOR\)) show
0 134.4 moveto
10 f4
(       1\)    -.17653E-01   .10038E+01   .20139E+01  -.97523E+00) show
0 123.9 moveto
10 f4
( ) show
0 113.4 moveto
10 f4
(     CONSTRAINT VALUES \(G-VECTOR\)) show
0 102.9 moveto
10 f4
(       1\)    -.17726E-01  -.10338E+01  0.) show
0 92.4 moveto
10 f4
( ) show
0 81.9 moveto
10 f4
( ) show
pagelevel restore
showpage
%%Page: 30 30
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
0 711.9 moveto
10 f4
( ) show
0 701.4 moveto
10 f4
( ) show
0 690.9 moveto
10 f4
(     ITER =    9     OBJ =    .60182E+01) show
0 680.4 moveto
10 f4
( ) show
0 669.9 moveto
10 f4
(     DECISION VARIABLES \(X-VECTOR\)) show
0 659.4 moveto
10 f4
(       1\)     .23921E-01   .99428E+00   .19869E+01  -.10102E+01) show
0 648.9 moveto
10 f4
( ) show
0 638.4 moveto
10 f4
(     CONSTRAINT VALUES \(G-VECTOR\)) show
0 627.9 moveto
10 f4
(       1\)    -.15891E-01  -.10472E+01   .11747E-02) show
0 617.4 moveto
10 f4
( ) show
0 606.9 moveto
10 f4
( ) show
0 596.4 moveto
10 f4
( ) show
0 585.9 moveto
10 f4
( ) show
0 575.4 moveto
10 f4
(     ITER =   10     OBJ =    .60133E+01) show
0 564.9 moveto
10 f4
( ) show
0 554.4 moveto
10 f4
(     DECISION VARIABLES \(X-VECTOR\)) show
0 543.9 moveto
10 f4
(       1\)    -.17147E-01   .10055E+01   .20139E+01  -.97533E+00) show
0 533.4 moveto
10 f4
( ) show
0 522.9 moveto
10 f4
(     CONSTRAINT VALUES \(G-VECTOR\)) show
0 512.4 moveto
10 f4
(       1\)    -.15050E-01  -.10270E+01   .29211E-02) show
0 501.9 moveto
10 f4
( ) show
0 491.4 moveto
10 f4
( ) show
0 480.9 moveto
10 f4
( ) show
0 470.4 moveto
10 f4
( ) show
0 459.9 moveto
10 f4
(     ITER =   11     OBJ =    .60098E+01) show
0 449.4 moveto
10 f4
( ) show
0 438.9 moveto
10 f4
(     DECISION VARIABLES \(X-VECTOR\)) show
0 428.4 moveto
10 f4
(       1\)     .19441E-01   .99482E+00   .19908E+01  -.10058E+01) show
0 417.9 moveto
10 f4
( ) show
0 407.4 moveto
10 f4
(     CONSTRAINT VALUES \(G-VECTOR\)) show
0 396.9 moveto
10 f4
(       1\)    -.13894E-01  -.10474E+01   .34703E-02) show
0 386.4 moveto
10 f4
( ) show
0 375.9 moveto
10 f4
( ) show
0 365.4 moveto
10 f4
(    FINAL OPTIMIZATION INFORMATION) show
0 354.9 moveto
10 f4
( ) show
0 344.4 moveto
10 f4
(     OBJ =    .600982E+01) show
0 333.9 moveto
10 f4
( ) show
0 323.4 moveto
10 f4
(     DECISION VARIABLES \(X-VECTOR\)) show
0 312.9 moveto
10 f4
(       1\)     .19441E-01   .99482E+00   .19908E+01  -.10058E+01) show
0 302.4 moveto
10 f4
( ) show
0 291.9 moveto
10 f4
(     CONSTRAINT VALUES \(G-VECTOR\)) show
0 281.4 moveto
10 f4
(       1\)    -.13894E-01  -.10474E+01   .34703E-02) show
0 270.9 moveto
10 f4
( ) show
0 260.4 moveto
10 f4
(     THERE ARE    2 ACTIVE CONSTRAINTS) show
0 249.9 moveto
10 f4
(     CONSTRAINT NUMBERS ARE) show
0 239.4 moveto
10 f4
(         1    3) show
0 228.9 moveto
10 f4
( ) show
0 218.4 moveto
10 f4
(     THERE ARE    0 VIOLATED CONSTRAINTS) show
0 207.9 moveto
10 f4
( ) show
0 197.4 moveto
10 f4
(     TERMINATION CRITERION) show
0 186.9 moveto
10 f4
(          ABS\(OBJ\(I\)-OBJ\(I-1\)\)   LESS THAN DABFUN FOR  3 ITERATIONS) show
0 176.4 moveto
10 f4
( ) show
0 165.9 moveto
10 f4
(     NUMBER OF ITERATIONS =   11) show
0 155.4 moveto
10 f4
( ) show
0 144.9 moveto
10 f4
(     OBJECTIVE FUNCTION WAS EVALUATED           78  TIMES) show
0 134.4 moveto
10 f4
( ) show
0 123.9 moveto
10 f4
(     CONSTRAINT FUNCTIONS WERE EVALUATED        78  TIMES) show
0 83.4 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
pagelevel restore
showpage
%%Page: 31 31
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
217.6 701.1 moveto
14 f1
(LISTING 4) show
110 671.8 moveto
14 f1
(ANALYSIS SUBROUTINE FOR EXAMPLE 2) show
0 647.5 moveto
10 f4
(CCCCC) show
0 637 moveto
10 f4
(      PROGRAM EXAMPL2) show
0 626.5 moveto
10 f4
(      DIMENSION S\(6\),G1\(11\),G2\(11\),B\(11,11\),C\(11\),MS1\(22\) ) show
0 616 moveto
10 f4
(      DIMENSION VLB\(6\),VUB\(6\),SCAL\(6\) ) show
0 605.5 moveto
10 f4
(      COMMON/GRAD/ ISC\(11\),IC\(11\),DF\(6\),A\(6,11\) ) show
0 595 moveto
10 f4
(      COMMON /CNMN1/ DELFUN,DABFUN,FDCH,FDCHM,CT,CTMIN,CTL,CTLMIN,) show
0 584.5 moveto
10 f4
(     .               ALPHAX,ABOBJ1,THETA,OBJ,NDV,NCON,NSIDE,IPRINT, ) show
0 574 moveto
10 f4
(     .               NFDG,NSCAL,LINOBJ,ITMAX,ITRM,ICNDIR,IGOTO,NAC, ) show
0 563.5 moveto
10 f4
(     .               INFO,INFOG,ITER) show
0 553 moveto
10 f4
(      COMMON /VARABLE/ AOBJ,X\(6\),G\(11\)) show
0 542.5 moveto
10 f4
(      COMMON /ANDATA/ LOOPCNT ) show
0 532 moveto
10 f4
(      NAMELIST /CONPAR/ INFOG,INFO,NFDG,IPRINT,NDV,ITMAX,NCON,NSIDE,) show
0 521.5 moveto
10 f4
(     .                  ICNDIR,NSCAL,FDCH,FDCHM,CT,CTMIN,CTLMIN,THETA,) show
0 511 moveto
10 f4
(     .                  PHI,DELFUN,DABFUN,LINOBJ,ITRM,X,VLB,VUB,) show
0 500.5 moveto
10 f4
(     .                  N1,N2,N3,N4,N5,ALPHAX,ABOBJ1,CTL,ISC,SCAL ) show
0 490 moveto
10 f4
(C ) show
0 479.5 moveto
10 f4
(C     THIS PROGRAM EXECUTES THE EXAMPLE PROBLEM TWO OF THE CONMIN MANUAL. ) show
0 458.5 moveto
10 f4
(      OPEN\( UNIT=6,FILE='EXOUT2.TXT',STATUS='NEW'\)) show
0 448 moveto
10 f4
(C ) show
0 437.5 moveto
10 f4
(C ) show
0 427 moveto
10 f4
(C  INITIALIZE ) show
0 416.5 moveto
10 f4
(C ) show
0 406 moveto
10 f4
(      INFOG=0 ) show
0 395.5 moveto
10 f4
(      INFO=0) show
0 385 moveto
10 f4
(      NFDG=1) show
0 374.5 moveto
10 f4
(      IPRINT=1) show
0 364 moveto
10 f4
(      NDV=4 ) show
0 353.5 moveto
10 f4
(      ITMAX=40) show
0 343 moveto
10 f4
(      NCON=3) show
0 332.5 moveto
10 f4
(      NSIDE=0 ) show
0 322 moveto
10 f4
(      ICNDIR=0) show
0 311.5 moveto
10 f4
(      NSCAL=0 ) show
0 301 moveto
10 f4
(      FDCH=0.0) show
0 290.5 moveto
10 f4
(      FDCHM=0.0 ) show
0 280 moveto
10 f4
(      CT=0.0) show
0 269.5 moveto
10 f4
(      CTMIN=0.0 ) show
0 259 moveto
10 f4
(      CTL=0.0 ) show
0 248.5 moveto
10 f4
(      CTLMIN=0.0) show
0 238 moveto
10 f4
(      THETA=0.0 ) show
0 227.5 moveto
10 f4
(      PHI=0.0 ) show
0 217 moveto
10 f4
(      DELFUN=0.0) show
0 206.5 moveto
10 f4
(      DABFUN=0.0) show
0 196 moveto
10 f4
(      LINOBJ=0.0) show
0 185.5 moveto
10 f4
(      ITRM=0) show
0 175 moveto
10 f4
(      N1=6) show
0 164.5 moveto
10 f4
(      N2=11 ) show
0 154 moveto
10 f4
(      N3=11 ) show
0 143.5 moveto
10 f4
(      N4=11 ) show
0 133 moveto
10 f4
(      N5=22 ) show
0 122.5 moveto
10 f4
(      ALPHAX=0.0) show
0 112 moveto
10 f4
(      ABOBJ1=0.0) show
0 101.5 moveto
10 f4
(      CTL=0.0 ) show
0 91 moveto
10 f4
(      DO 5 I=1,NDV) show
0 80.5 moveto
10 f4
(        X\(I\)=1.0) show
pagelevel restore
showpage
%%Page: 32 32
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
0 711.9 moveto
10 f4
(        VLB\(I\)=-99999.) show
0 701.4 moveto
10 f4
(        VUB\(I\)= 99999.) show
0 690.9 moveto
10 f4
(    5 CONTINUE) show
0 680.4 moveto
10 f4
(C ) show
0 669.9 moveto
10 f4
(      DO 6 J=1,NCON ) show
0 659.4 moveto
10 f4
(        ISC\(J\)=0) show
0 648.9 moveto
10 f4
(    6 CONTINUE) show
0 638.4 moveto
10 f4
(C ) show
0 627.9 moveto
10 f4
(C     READ THE PARAMETERS FOR CONMIN) show
0 617.4 moveto
10 f4
(C ) show
0 606.9 moveto
10 f4
(CCC   READ\(5,CONPAR\)      USE DEFAULT VALUES) show
0 596.4 moveto
10 f4
(      WRITE\(6,CONPAR\) ) show
0 585.9 moveto
10 f4
(      NLIM=ITMAX*\(NDV+5\)) show
0 575.4 moveto
10 f4
(C ) show
0 564.9 moveto
10 f4
(C     NON-ITERATIVE PART OF ANALYSIS) show
0 554.4 moveto
10 f4
(C ) show
0 543.9 moveto
10 f4
(      IGOTO = 0 ) show
0 533.4 moveto
10 f4
(C ) show
0 522.9 moveto
10 f4
(C     ITERATIVE PART OF ANALYSIS) show
0 512.4 moveto
10 f4
(C ) show
0 501.9 moveto
10 f4
(      DO 1000 I = 1,NLIM) show
0 491.4 moveto
10 f4
(        LOOPCNT=I ) show
0 480.9 moveto
10 f4
(C ) show
0 470.4 moveto
10 f4
(C       CALL THE OPTIMIZATION ROUTINE CONMIN) show
0 459.9 moveto
10 f4
(C ) show
0 449.4 moveto
10 f4
(        CALL CONMIN\(X,VLB,VUB,G,SCAL,DF,A,S,G1,G2,B,C,ISC,IC,MS1,N1,N2, ) show
0 438.9 moveto
10 f4
(     .              N3,N4,N5\) ) show
0 428.4 moveto
10 f4
(C ) show
0 417.9 moveto
10 f4
(        IF\(IGOTO.EQ.0\) LOOPCNT=-999 ) show
0 407.4 moveto
10 f4
(C ) show
0 396.9 moveto
10 f4
(C       ANALYSIS MODULE ) show
0 386.4 moveto
10 f4
(C ) show
0 375.9 moveto
10 f4
(        CALL ANALYS ) show
0 365.4 moveto
10 f4
(        OBJ=AOBJ) show
0 354.9 moveto
10 f4
(        IF \(IGOTO.EQ.0\) GO TO 1100) show
0 344.4 moveto
10 f4
( 1000 CONTINUE) show
0 333.9 moveto
10 f4
(C ) show
0 323.4 moveto
10 f4
(C ) show
0 312.9 moveto
10 f4
( 1100 CONTINUE) show
0 302.4 moveto
10 f4
(      STOP) show
0 291.9 moveto
10 f4
(      END ) show
0 260.4 moveto
10 f4
(      SUBROUTINE ANALYS ) show
0 249.9 moveto
10 f4
(      COMMON /VARABLE/ AOBJ,X\(6\),G\(11\)) show
0 239.4 moveto
10 f4
(      COMMON/GRAD/ ISC\(11\),IC\(11\),DF\(6\),A\(6,11\) ) show
0 228.9 moveto
10 f4
(      COMMON /CNMN1/ DELFUN,DABFUN,FDCH,FDCHM,CT,CTMIN,CTL,CTLMIN,) show
0 218.4 moveto
10 f4
(     .               ALPHAX,ABOBJ1,THETA,OBJ,NDV,NCON,NSIDE,IPRINT, ) show
0 207.9 moveto
10 f4
(     .               NFDG,NSCAL,LINOBJ,ITMAX,ITRM,ICNDIR,IGOTO,NAC, ) show
0 197.4 moveto
10 f4
(     .               INFO,INFOG,ITER) show
0 186.9 moveto
10 f4
(C ) show
0 176.4 moveto
10 f4
(C   ROUTINE TO CALCULATE OBJECTIVE FUNCTION AND ) show
0 165.9 moveto
10 f4
(C   CONSTRAINT  VALUES FOR OPTIMIZATION OF CONSTRAINED ROSEN-SUZUKI ) show
0 155.4 moveto
10 f4
(C   FUNCTION. ) show
0 144.9 moveto
10 f4
(C ) show
0 134.4 moveto
10 f4
(C ) show
0 123.9 moveto
10 f4
(      IF\(INFO.GE.2\) GO TO 10) show
0 113.4 moveto
10 f4
(C ) show
0 102.9 moveto
10 f4
(C  OBJECTIVE FUNCTION ) show
0 92.4 moveto
10 f4
(C ) show
0 81.9 moveto
10 f4
(      AOBJ = X\(1\)**2 - 5.*X\(1\) + X\(2\)**2 - 5.*X\(2\) + 2.*X\(3\)**2 ) show
pagelevel restore
showpage
%%Page: 33 33
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
0 711.9 moveto
10 f4
(     .       - 21.*X\(3\) + X\(4\)**2 + 7.0*X\(4\) + 50.) show
0 701.4 moveto
10 f4
(C ) show
0 690.9 moveto
10 f4
(C ) show
0 680.4 moveto
10 f4
(C   CONSTRAINT VALUES ) show
0 669.9 moveto
10 f4
(C ) show
0 659.4 moveto
10 f4
(      G\(1\) = X\(1\)**2 + X\(1\) + X\(2\)**2 - X\(2\) + X\(3\)**2 + X\(3\) ) show
0 648.9 moveto
10 f4
(     .       + X\(4\)**2 - X\(4\) - 8.0) show
0 638.4 moveto
10 f4
(C ) show
0 627.9 moveto
10 f4
(      G\(2\) = X\(1\)**2 - X\(1\) + 2. * X\(2\)**2 + X\(3\)**2 + 2.*X\(4\)**2 ) show
0 617.4 moveto
10 f4
(     .       - X\(4\) - 10.0 ) show
0 606.9 moveto
10 f4
(C ) show
0 596.4 moveto
10 f4
(      G\(3\) = 2.*X\(1\)**2 + 2.*X\(1\) + X\(2\)**2 - X\(2\) + X\(3\)**2 - X\(4\) -5.0 ) show
0 585.9 moveto
10 f4
(C ) show
0 575.4 moveto
10 f4
(      GO TO 999 ) show
0 564.9 moveto
10 f4
(   10 CONTINUE) show
0 554.4 moveto
10 f4
(C ) show
0 543.9 moveto
10 f4
(C ) show
0 533.4 moveto
10 f4
(C    GRADIENT INFORMATION ) show
0 522.9 moveto
10 f4
(C ) show
0 512.4 moveto
10 f4
(      DF\(1\)=2.0*X\(1\) - 5.0) show
0 501.9 moveto
10 f4
(      DF\(2\)=2.0*X\(2\) - 5.0) show
0 491.4 moveto
10 f4
(      DF\(3\)=4.0*X\(3\) - 21.) show
0 480.9 moveto
10 f4
(      DF\(4\)=2.0*X\(4\) + 7. ) show
0 470.4 moveto
10 f4
(C ) show
0 459.9 moveto
10 f4
(C  GRADIENTS OF ACTIVE AND VIOLATED CONSTRAINTS ) show
0 449.4 moveto
10 f4
(C ) show
0 438.9 moveto
10 f4
(      NAC=0 ) show
0 428.4 moveto
10 f4
(      IF\(G\(1\).LT.CT\) GO TO 20 ) show
0 417.9 moveto
10 f4
(      NAC=1 ) show
0 407.4 moveto
10 f4
(      IC\(1\)=1 ) show
0 396.9 moveto
10 f4
(      A\(1,1\)=2.*X\(1\)+1. ) show
0 386.4 moveto
10 f4
(      A\(2,1\)=2.*X\(2\)-1. ) show
0 375.9 moveto
10 f4
(      A\(3,1\)=2.*X\(3\)+1. ) show
0 365.4 moveto
10 f4
(      A\(4,1\)=2.*X\(4\)-1. ) show
0 354.9 moveto
10 f4
(C ) show
0 344.4 moveto
10 f4
(   20 IF\(G\(2\).LT.CT\) GO TO 30 ) show
0 333.9 moveto
10 f4
(      NAC=NAC+1 ) show
0 323.4 moveto
10 f4
(      IC\(NAC\)=2 ) show
0 312.9 moveto
10 f4
(      A\(1,NAC\)=2.*X\(1\)-1.0) show
0 302.4 moveto
10 f4
(      A\(2,NAC\)=4.*X\(2\)) show
0 291.9 moveto
10 f4
(      A\(3,NAC\)=2.*X\(3\)) show
0 281.4 moveto
10 f4
(      A\(4,NAC\)=4.*X\(4\)-1.0) show
0 270.9 moveto
10 f4
(C ) show
0 260.4 moveto
10 f4
(   30 IF\(G\(3\).LT.CT\) GO TO 999) show
0 249.9 moveto
10 f4
(      NAC=NAC+1 ) show
0 239.4 moveto
10 f4
(      IC\(NAC\)=3 ) show
0 228.9 moveto
10 f4
(      A\(1,NAC\)=4.*X\(1\)+2. ) show
0 218.4 moveto
10 f4
(      A\(2,NAC\)=2.*X\(2\)-1. ) show
0 207.9 moveto
10 f4
(      A\(3,NAC\)=2.*X\(3\)) show
0 197.4 moveto
10 f4
(      A\(4,NAC\)=-1.) show
0 186.9 moveto
10 f4
(  999 RETURN) show
0 176.4 moveto
10 f4
(      END ) show
0 155.4 moveto
10 f4
(CCCCC) show
0 135.9 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
217.6 105.6 moveto
14 f1
(LISTING 5) show
105.8 76.3 moveto
14 f1
(OPTIMIZATION RESULTS FOR EXAMPLE 2) show
pagelevel restore
showpage
%%Page: 34 34
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
0 700 moveto
10 f4
( $CONPAR) show
0 689.5 moveto
10 f4
( INFOG   =           0,) show
0 679 moveto
10 f4
( INFO    =           0,) show
0 668.5 moveto
10 f4
( NFDG    =           1,) show
0 658 moveto
10 f4
( IPRINT  =           1,) show
0 647.5 moveto
10 f4
( NDV     =           4,) show
0 637 moveto
10 f4
( ITMAX   =          40,) show
0 626.5 moveto
10 f4
( NCON    =           3,) show
0 616 moveto
10 f4
( NSIDE   =           0,) show
0 605.5 moveto
10 f4
( ICNDIR  =           0,) show
0 595 moveto
10 f4
( NSCAL   =           0,) show
0 584.5 moveto
10 f4
( FDCH    =  0.0000000E+00,) show
0 574 moveto
10 f4
( FDCHM   =  0.0000000E+00,) show
0 563.5 moveto
10 f4
( CT      =  0.0000000E+00,) show
0 553 moveto
10 f4
( CTMIN   =  0.0000000E+00,) show
0 542.5 moveto
10 f4
( CTLMIN  =  0.0000000E+00,) show
0 532 moveto
10 f4
( THETA   =  0.0000000E+00,) show
0 521.5 moveto
10 f4
( PHI     =  0.0000000E+00,) show
0 511 moveto
10 f4
( DELFUN  =  0.0000000E+00,) show
0 500.5 moveto
10 f4
( DABFUN  =  0.0000000E+00,) show
0 490 moveto
10 f4
( LINOBJ  =           0,) show
0 479.5 moveto
10 f4
( ITRM    =           0,) show
0 469 moveto
10 f4
( X       = 4*1.000000    , 2*0.0000000E+00,) show
0 458.5 moveto
10 f4
( VLB     = 4*-99999.00    , 2*0.0000000E+00,) show
0 448 moveto
10 f4
( VUB     = 4*99999.00    , 2*0.0000000E+00,) show
0 437.5 moveto
10 f4
( N1      =           6,) show
0 427 moveto
10 f4
( N2      =          11,) show
0 416.5 moveto
10 f4
( N3      =          11,) show
0 406 moveto
10 f4
( N4      =          11,) show
0 395.5 moveto
10 f4
( N5      =          22,) show
0 385 moveto
10 f4
( ALPHAX  =  0.0000000E+00,) show
0 374.5 moveto
10 f4
( ABOBJ1  =  0.0000000E+00,) show
0 364 moveto
10 f4
( CTL     =  0.0000000E+00,) show
0 353.5 moveto
10 f4
( ISC     = 11*0,) show
0 343 moveto
10 f4
( SCAL    = 6*0.0000000E+00) show
0 332.5 moveto
10 f4
( $END) show
0 311.5 moveto
10 f4
(            * * * * * * * * * * * * * * * * * * * * * * * * * * * ) show
0 301 moveto
10 f4
(            *                                                   *) show
0 290.5 moveto
10 f4
(            *                    C O N M I N                    *) show
0 280 moveto
10 f4
(            *                                                   *) show
0 269.5 moveto
10 f4
(            *                FORTRAN PROGRAM FOR                *) show
0 259 moveto
10 f4
(            *                                                   *) show
0 248.5 moveto
10 f4
(            *         CONSTRAINED FUNCTION MINIMIZATION         *) show
0 238 moveto
10 f4
(            *                                                   *) show
0 227.5 moveto
10 f4
(            * * * * * * * * * * * * * * * * * * * * * * * * * * * ) show
0 196 moveto
10 f4
(     INITIAL FUNCTION INFORMATION) show
0 175 moveto
10 f4
(     OBJ =   0.310000E+02) show
0 154 moveto
10 f4
(     DECISION VARIABLES \(X-VECTOR\)) show
0 143.5 moveto
10 f4
(       1\)    0.10000E+01  0.10000E+01  0.10000E+01  0.10000E+01) show
0 122.5 moveto
10 f4
(     CONSTRAINT VALUES \(G-VECTOR\)) show
0 112 moveto
10 f4
(       1\)   -0.40000E+01 -0.60000E+01 -0.10000E+01) show
0 80.5 moveto
10 f4
(    FINAL OPTIMIZATION INFORMATION) show
pagelevel restore
showpage
%%Page: 35 35
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
0 707.5 moveto
10 f4
(     OBJ =   0.601078E+01) show
0 686.5 moveto
10 f4
(     DECISION VARIABLES \(X-VECTOR\)) show
0 676 moveto
10 f4
(       1\)    0.26916E-01  0.99458E+00  0.19848E+01 -0.10128E+01) show
0 655 moveto
10 f4
(     CONSTRAINT VALUES \(G-VECTOR\)) show
0 644.5 moveto
10 f4
(       1\)   -0.14837E-01 -0.10438E+01  0.21458E-02) show
0 623.5 moveto
10 f4
(     THERE ARE    2 ACTIVE CONSTRAINTS) show
0 613 moveto
10 f4
(     CONSTRAINT NUMBERS ARE) show
0 602.5 moveto
10 f4
(         1    3) show
0 581.5 moveto
10 f4
(     THERE ARE    0 VIOLATED CONSTRAINTS) show
0 560.5 moveto
10 f4
(     TERMINATION CRITERION) show
0 550 moveto
10 f4
(          ABS\(OBJ\(I\)-OBJ\(I-1\)\)   LESS THAN DABFUN FOR  3 ITERATIONS) show
0 529 moveto
10 f4
(     NUMBER OF ITERATIONS =   11) show
0 508 moveto
10 f4
(     OBJECTIVE FUNCTION WAS EVALUATED           34  TIMES) show
0 487 moveto
10 f4
(     CONSTRAINT FUNCTIONS WERE EVALUATED        34  TIMES) show
0 466 moveto
10 f4
(     GRADIENT OF OBJECTIVE WAS CALCULATED       11  TIMES) show
0 445 moveto
10 f4
(     GRADIENTS OF CONSTRAINTS WERE CALCULATED   11  TIMES) show
0 404.5 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
217.6 374.2 moveto
14 f1
(LISTING 6) show
33.3 344.9 moveto
14 f1
(MAIN PROGRAM AND ANALYSIS SUBROUTINE FOR EXAMPLE 3) show
0 320.6 moveto
10 f4
(ccccc) show
0 310.1 moveto
10 f4
(      PROGRAM EXAMPL3) show
0 299.6 moveto
10 f4
(      DIMENSION S\(4\),G1\(10\),G2\(10\),B\(10,10\),C\(10\),MS1\(20\) ) show
0 289.1 moveto
10 f4
(      DIMENSION VLB\(4\),VUB\(4\),SCAL\(4\) ) show
0 278.6 moveto
10 f4
(      COMMON /VARABLE/ AOBJ,X\(4\),G\(10\)) show
0 268.1 moveto
10 f4
(      COMMON/GRAD/ ISC\(10\),IC\(10\),DF\(4\),A\(4,10\)) show
0 257.6 moveto
10 f4
(      COMMON/CONSAV/ RNUM\(50\),INUM\(25\) ) show
0 247.1 moveto
10 f4
(      COMMON /CNMN1/ DELFUN,DABFUN,FDCH,FDCHM,CT,CTMIN,CTL,CTLMIN,) show
0 236.6 moveto
10 f4
(     .               ALPHAX,ABOBJ1,THETA,OBJ,NDV,NCON,NSIDE,IPRINT, ) show
0 226.1 moveto
10 f4
(     .               NFDG,NSCAL,LINOBJ,ITMAX,ITRM,ICNDIR,IGOTO,NAC, ) show
0 215.6 moveto
10 f4
(     .               INFO,INFOG,ITER) show
0 205.1 moveto
10 f4
(      COMMON /ANDATA/ LOOPCNT ) show
0 194.6 moveto
10 f4
(      NAMELIST /CONPAR/ INFOG,INFO,NFDG,IPRINT,NDV,ITMAX,NCON,NSIDE,) show
0 184.1 moveto
10 f4
(     .                  ICNDIR,NSCAL,FDCH,FDCHM,CT,CTMIN,CTLMIN,THETA,) show
0 173.6 moveto
10 f4
(     .                  PHI,DELFUN,DABFUN,LINOBJ,ITRM,X,VLB,VUB,) show
0 163.1 moveto
10 f4
(     .                  N1,N2,N3,N4,N5,ALPHAX,ABOBJ1,CTL,ISC,SCAL ) show
0 152.6 moveto
10 f4
(C) show
0 142.1 moveto
10 f4
(      OPEN\(UNIT=6,FILE='EXOUT3.TXT',STATUS='NEW'\)) show
0 131.6 moveto
10 f4
(C ) show
0 121.1 moveto
10 f4
(C     THIS PROGRAM EXECUTES THE EXAMPLE PROBLEM THREE OF THE CONMIN MANUAL. ) show
0 110.6 moveto
10 f4
(C ) show
0 100.1 moveto
10 f4
(C ) show
0 89.6 moveto
10 f4
(C  INITIALIZE ) show
0 79.1 moveto
10 f4
(C ) show
pagelevel restore
showpage
%%Page: 36 36
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
0 711.9 moveto
10 f4
(      INFOG=0 ) show
0 701.4 moveto
10 f4
(      INFO=0) show
0 690.9 moveto
10 f4
(      NFDG=2) show
0 680.4 moveto
10 f4
(      IPRINT=1) show
0 669.9 moveto
10 f4
(      NDV=2 ) show
0 659.4 moveto
10 f4
(      ITMAX=40) show
0 648.9 moveto
10 f4
(      NCON=6) show
0 638.4 moveto
10 f4
(      NSIDE=1 ) show
0 627.9 moveto
10 f4
(      ICNDIR=0) show
0 617.4 moveto
10 f4
(      NSCAL=0 ) show
0 606.9 moveto
10 f4
(      FDCH=0.0) show
0 596.4 moveto
10 f4
(      FDCHM=0.0 ) show
0 585.9 moveto
10 f4
(      CT=0.0) show
0 575.4 moveto
10 f4
(      CTMIN=0.0 ) show
0 564.9 moveto
10 f4
(      CTL=0.0 ) show
0 554.4 moveto
10 f4
(      CTLMIN=0.0) show
0 543.9 moveto
10 f4
(      THETA=0.0 ) show
0 533.4 moveto
10 f4
(      PHI=0.0 ) show
0 522.9 moveto
10 f4
(      DELFUN=0.0) show
0 512.4 moveto
10 f4
(      DABFUN=0.0) show
0 501.9 moveto
10 f4
(      LINOBJ=1) show
0 491.4 moveto
10 f4
(      ITRM=0) show
0 480.9 moveto
10 f4
(      N1=4) show
0 470.4 moveto
10 f4
(      N2=10 ) show
0 459.9 moveto
10 f4
(      N3=10 ) show
0 449.4 moveto
10 f4
(      N4=10 ) show
0 438.9 moveto
10 f4
(      N5=20 ) show
0 428.4 moveto
10 f4
(      ALPHAX=0.0) show
0 417.9 moveto
10 f4
(      ABOBJ1=0.0) show
0 407.4 moveto
10 f4
(      CTL=0.0 ) show
0 396.9 moveto
10 f4
(      DO 5 I=1,NDV) show
0 386.4 moveto
10 f4
(        X\(I\)=1.0) show
0 375.9 moveto
10 f4
(        VLB\(I\)=0.001) show
0 365.4 moveto
10 f4
(        VUB\(I\)= 1.0E+10) show
0 354.9 moveto
10 f4
(    5 CONTINUE) show
0 344.4 moveto
10 f4
(C ) show
0 333.9 moveto
10 f4
(      DO 6 J=1,NCON ) show
0 323.4 moveto
10 f4
(        ISC\(J\)=0) show
0 312.9 moveto
10 f4
(    6 CONTINUE) show
0 302.4 moveto
10 f4
(C ) show
0 291.9 moveto
10 f4
(C     READ THE PARAMETERS FOR CONMIN) show
0 281.4 moveto
10 f4
(C ) show
0 270.9 moveto
10 f4
(CCC   READ\(5,CONPAR\)      USE DEFAULT VALUES) show
0 260.4 moveto
10 f4
(      WRITE\(6,CONPAR\) ) show
0 249.9 moveto
10 f4
(      NLIM=ITMAX*\(NDV+5\)) show
0 239.4 moveto
10 f4
(C ) show
0 228.9 moveto
10 f4
(C     NON-ITERATIVE PART OF ANALYSIS) show
0 218.4 moveto
10 f4
(C ) show
0 207.9 moveto
10 f4
(      IGOTO = 0 ) show
0 197.4 moveto
10 f4
(C ) show
0 186.9 moveto
10 f4
(C     ITERATIVE PART OF ANALYSIS) show
0 176.4 moveto
10 f4
(C ) show
0 165.9 moveto
10 f4
(      DO 1000 I = 1,NLIM) show
0 155.4 moveto
10 f4
(        LOOPCNT=I ) show
0 144.9 moveto
10 f4
(C ) show
0 134.4 moveto
10 f4
(C       CALL THE OPTIMIZATION ROUTINE CONMIN) show
0 123.9 moveto
10 f4
(C ) show
0 113.4 moveto
10 f4
(        CALL CONMIN\(X,VLB,VUB,G,SCAL,DF,A,S,G1,G2,B,C,ISC,IC,MS1,N1,N2, ) show
0 102.9 moveto
10 f4
(     .              N3,N4,N5\) ) show
0 92.4 moveto
10 f4
(C ) show
0 81.9 moveto
10 f4
(        IF\(IGOTO.EQ.0\) LOOPCNT=-999 ) show
pagelevel restore
showpage
%%Page: 37 37
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
0 711.9 moveto
10 f4
(C ) show
0 701.4 moveto
10 f4
(C       ANALYSIS MODULE ) show
0 690.9 moveto
10 f4
(C ) show
0 680.4 moveto
10 f4
(        CALL ANALYS ) show
0 669.9 moveto
10 f4
(        OBJ=AOBJ) show
0 659.4 moveto
10 f4
(        IF \(IGOTO.EQ.0\) GO TO 1100) show
0 648.9 moveto
10 f4
( 1000 CONTINUE) show
0 638.4 moveto
10 f4
(C ) show
0 627.9 moveto
10 f4
(C ) show
0 617.4 moveto
10 f4
( 1100 CONTINUE) show
0 606.9 moveto
10 f4
(      CLOSE\(6\)) show
0 596.4 moveto
10 f4
(      STOP) show
0 585.9 moveto
10 f4
(      END ) show
0 554.4 moveto
10 f4
(      SUBROUTINE ANALYS ) show
0 543.9 moveto
10 f4
(      COMMON /VARABLE/ AOBJ,X\(4\),G\(10\)) show
0 533.4 moveto
10 f4
(      COMMON/GRAD/ ISC\(10\),IC\(10\),DF\(4\),A\(4,10\) ) show
0 522.9 moveto
10 f4
(      COMMON /CNMN1/ DELFUN,DABFUN,FDCH,FDCHM,CT,CTMIN,CTL,CTLMIN,) show
0 512.4 moveto
10 f4
(     .               ALPHAX,ABOBJ1,THETA,OBJ,NDV,NCON,NSIDE,IPRINT, ) show
0 501.9 moveto
10 f4
(     .               NFDG,NSCAL,LINOBJ,ITMAX,ITRM,ICNDIR,IGOTO,NAC, ) show
0 491.4 moveto
10 f4
(     .               INFO,INFOG,ITER) show
0 480.9 moveto
10 f4
(C ) show
0 470.4 moveto
10 f4
(C   ROUTINE TO CALCULATE OBJECTIVE FUNCTION AND ) show
0 459.9 moveto
10 f4
(C   CONSTRAINT  VALUES FOR OPTIMIZATION OF CONSTRAINED ROSEN-SUZUKI ) show
0 449.4 moveto
10 f4
(C   FUNCTION. ) show
0 438.9 moveto
10 f4
(C ) show
0 428.4 moveto
10 f4
(C) show
0 417.9 moveto
10 f4
(      RHO= 0.1) show
0 407.4 moveto
10 f4
(      A1= X\(1\)) show
0 396.9 moveto
10 f4
(      A2= X\(2\)) show
0 386.4 moveto
10 f4
(C ) show
0 375.9 moveto
10 f4
(      IF\(INFO.GE.2\) GO TO 10) show
0 365.4 moveto
10 f4
(C ) show
0 354.9 moveto
10 f4
(C  OBJECTIVE FUNCTION ) show
0 344.4 moveto
10 f4
(C ) show
0 333.9 moveto
10 f4
(      AOBJ= 10.*RHO*\(2.*SQRT\(2.\)*A1+A2\)) show
0 323.4 moveto
10 f4
(C ) show
0 312.9 moveto
10 f4
(C ) show
0 302.4 moveto
10 f4
(C   CONSTRAINT VALUES ) show
0 291.9 moveto
10 f4
(C ) show
0 281.4 moveto
10 f4
(      DENOM= 2.*A1*A2 + SQRT\(2.\)*A1*A1) show
0 270.9 moveto
10 f4
(      SIG11= 20.*\(SQRT\(2.\)*A1+A2\)/DENOM) show
0 260.4 moveto
10 f4
(      SIG21= 20.*SQRT\(2.\)*A1/DENOM) show
0 249.9 moveto
10 f4
(      SIG31= -20.*A2/DENOM) show
0 239.4 moveto
10 f4
(C) show
0 228.9 moveto
10 f4
(      G\(1\)= -SIG11/15.-1.) show
0 218.4 moveto
10 f4
(      G\(2\)= SIG11/20.-1.) show
0 207.9 moveto
10 f4
(      G\(3\)= -SIG21/15.-1.) show
0 197.4 moveto
10 f4
(      G\(4\)= SIG21/20.-1.) show
0 186.9 moveto
10 f4
(      G\(5\)= -SIG31/15.-1.) show
0 176.4 moveto
10 f4
(      G\(6\)= SIG31/20.-1.) show
0 165.9 moveto
10 f4
(C) show
0 155.4 moveto
10 f4
(      GO TO 999 ) show
0 144.9 moveto
10 f4
(   10 CONTINUE) show
0 134.4 moveto
10 f4
(C ) show
0 123.9 moveto
10 f4
(C ) show
0 113.4 moveto
10 f4
(C    GRADIENT INFORMATION ) show
0 102.9 moveto
10 f4
(C ) show
0 92.4 moveto
10 f4
(      DF\(1\)=20.*SQRT\(2.\)*RHO) show
0 81.9 moveto
10 f4
(      DF\(2\)=10.*RHO) show
pagelevel restore
showpage
%%Page: 38 38
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
0 711.9 moveto
10 f4
(C) show
0 701.4 moveto
10 f4
(C  GRADIENTS OF ACTIVE AND VIOLATED CONSTRAINTS ) show
0 690.9 moveto
10 f4
(C  WILL BE CALCULATED BY FINITE DIFFERENCE WITHIN ) show
0 680.4 moveto
10 f4
(C  CONMIN ) show
0 669.9 moveto
10 f4
(C) show
0 659.4 moveto
10 f4
(C) show
0 648.9 moveto
10 f4
(  999 RETURN) show
0 638.4 moveto
10 f4
(      END ) show
0 627.9 moveto
10 f4
(ccccc) show
0 608.4 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
217.6 578.1 moveto
14 f1
(LISTING 7) show
105.8 548.8 moveto
14 f1
(OPTIMIZATION RESULTS FOR EXAMPLE 3) show
0 524.5 moveto
10 f4
( $CONPAR) show
0 514 moveto
10 f4
( INFOG   =           0,) show
0 503.5 moveto
10 f4
( INFO    =           0,) show
0 493 moveto
10 f4
( NFDG    =           2,) show
0 482.5 moveto
10 f4
( IPRINT  =           1,) show
0 472 moveto
10 f4
( NDV     =           2,) show
0 461.5 moveto
10 f4
( ITMAX   =          40,) show
0 451 moveto
10 f4
( NCON    =           6,) show
0 440.5 moveto
10 f4
( NSIDE   =           1,) show
0 430 moveto
10 f4
( ICNDIR  =           0,) show
0 419.5 moveto
10 f4
( NSCAL   =           0,) show
0 409 moveto
10 f4
( FDCH    =  0.0000000E+00,) show
0 398.5 moveto
10 f4
( FDCHM   =  0.0000000E+00,) show
0 388 moveto
10 f4
( CT      =  0.0000000E+00,) show
0 377.5 moveto
10 f4
( CTMIN   =  0.0000000E+00,) show
0 367 moveto
10 f4
( CTLMIN  =  0.0000000E+00,) show
0 356.5 moveto
10 f4
( THETA   =  0.0000000E+00,) show
0 346 moveto
10 f4
( PHI     =  0.0000000E+00,) show
0 335.5 moveto
10 f4
( DELFUN  =  0.0000000E+00,) show
0 325 moveto
10 f4
( DABFUN  =  0.0000000E+00,) show
0 314.5 moveto
10 f4
( LINOBJ  =           1,) show
0 304 moveto
10 f4
( ITRM    =           0,) show
0 293.5 moveto
10 f4
( X       = 2*1.000000    , 2*0.0000000E+00,) show
0 283 moveto
10 f4
( VLB     = 2*1.0000000E-03, 2*0.0000000E+00,) show
0 272.5 moveto
10 f4
( VUB     = 2*1.0000000E+10, 2*0.0000000E+00,) show
0 262 moveto
10 f4
( N1      =           4,) show
0 251.5 moveto
10 f4
( N2      =          10,) show
0 241 moveto
10 f4
( N3      =          10,) show
0 230.5 moveto
10 f4
( N4      =          10,) show
0 220 moveto
10 f4
( N5      =          20,) show
0 209.5 moveto
10 f4
( ALPHAX  =  0.0000000E+00,) show
0 199 moveto
10 f4
( ABOBJ1  =  0.0000000E+00,) show
0 188.5 moveto
10 f4
( CTL     =  0.0000000E+00,) show
0 178 moveto
10 f4
( ISC     = 10*0,) show
0 167.5 moveto
10 f4
( SCAL    = 4*0.0000000E+00) show
0 157 moveto
10 f4
( $END) show
0 136 moveto
10 f4
(            * * * * * * * * * * * * * * * * * * * * * * * * * * * ) show
0 125.5 moveto
10 f4
(            *                                                   *) show
0 115 moveto
10 f4
(            *                    C O N M I N                    *) show
0 104.5 moveto
10 f4
(            *                                                   *) show
0 94 moveto
10 f4
(            *                FORTRAN PROGRAM FOR                *) show
0 83.5 moveto
10 f4
(            *                                                   *) show
pagelevel restore
showpage
%%Page: 39 39
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
0 711.9 moveto
10 f4
(            *         CONSTRAINED FUNCTION MINIMIZATION         *) show
0 701.4 moveto
10 f4
(            *                                                   *) show
0 690.9 moveto
10 f4
(            * * * * * * * * * * * * * * * * * * * * * * * * * * * ) show
0 659.4 moveto
10 f4
(     INITIAL FUNCTION INFORMATION) show
0 638.4 moveto
10 f4
(     OBJ =   0.382843E+01) show
0 617.4 moveto
10 f4
(     DECISION VARIABLES \(X-VECTOR\)) show
0 606.9 moveto
10 f4
(       1\)    0.10000E+01  0.10000E+01) show
0 585.9 moveto
10 f4
(     CONSTRAINT VALUES \(G-VECTOR\)) show
0 575.4 moveto
10 f4
(       1\)   -0.19428E+01 -0.29289E+00 -0.15523E+01 -0.58579E+00 -0.60948E+00 -0.12929E+01) show
0 554.4 moveto
10 f4
(    FINAL OPTIMIZATION INFORMATION) show
0 533.4 moveto
10 f4
(     OBJ =   0.263281E+01) show
0 512.4 moveto
10 f4
(     DECISION VARIABLES \(X-VECTOR\)) show
0 501.9 moveto
10 f4
(       1\)    0.77853E+00  0.43079E+00) show
0 480.9 moveto
10 f4
(     CONSTRAINT VALUES \(G-VECTOR\)) show
0 470.4 moveto
10 f4
(       1\)   -0.23367E+01  0.25257E-02 -0.19608E+01 -0.27942E+00 -0.62408E+00 -0.12819E+01) show
0 449.4 moveto
10 f4
(     THERE ARE    1 ACTIVE CONSTRAINTS) show
0 438.9 moveto
10 f4
(     CONSTRAINT NUMBERS ARE) show
0 428.4 moveto
10 f4
(         2) show
0 407.4 moveto
10 f4
(     THERE ARE    0 VIOLATED CONSTRAINTS) show
0 386.4 moveto
10 f4
(     THERE ARE    0 ACTIVE SIDE CONSTRAINTS) show
0 365.4 moveto
10 f4
(     TERMINATION CRITERION) show
0 354.9 moveto
10 f4
(          ABS\(OBJ\(I\)-OBJ\(I-1\)\)   LESS THAN DABFUN FOR  3 ITERATIONS) show
0 333.9 moveto
10 f4
(     NUMBER OF ITERATIONS =    7) show
0 312.9 moveto
10 f4
(     OBJECTIVE FUNCTION WAS EVALUATED           32  TIMES) show
0 291.9 moveto
10 f4
(     CONSTRAINT FUNCTIONS WERE EVALUATED        32  TIMES) show
0 270.9 moveto
10 f4
(     GRADIENT OF OBJECTIVE WAS CALCULATED        6  TIMES) show
0 240.9 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
204.9 210.6 moveto
14 f1
(REFERENCES) show
10.8 186.3 moveto
10 f4
(1.) show
28 186.3 moveto
10 f4
(Lund, S., "Direct Search Program for Optimization of Non-linear Functions with) show
28 175.8 moveto
10 f4
(Non-linear Constraints," Users Manual SK/P13, NTH, Trondheim, Norway, 1971. ) show
10.8 165.3 moveto
10 f4
(2.) show
28 165.3 moveto
10 f4
(Zoutendijk, G., "Methods of Feasible Directions," Elsevier Publishing Co.,) show
28 154.8 moveto
10 f4
(Amsterdam, 1960. ) show
10.8 144.3 moveto
10 f4
(3.) show
28 144.3 moveto
10 f4
(Vanderplaats, G. N., and Moses, F., "Structural Optimization by Methods of) show
28 133.8 moveto
10 f4
(Feasible Directions," National Symposium on Computerized Structural Analysis) show
28 123.3 moveto
10 f4
(and Design, Washington, D.C., March 1972. ) show
10.8 112.8 moveto
10 f4
(4.) show
28 112.8 moveto
10 f4
(Fletcher, R. and Reeves, C. M., "Function Minimization by Conjugate Gradients,") show
28 102.3 moveto
10 f4
(British Computer J., Vol. 7, No. 2, 1964. ) show
10.8 91.8 moveto
10 f4
(5.) show
28 91.8 moveto
10 f4
(Schmit, L. A., Jr., "Structural Design by Systematic Synthesis," Proceedings of) show
28 81.3 moveto
10 f4
(the Second National Conference on Electronic Computation, Structural Division,) show
pagelevel restore
showpage
%%Page: 40 40
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
28 711.9 moveto
10 f4
(ASCE, Pittsburgh, PA, Sept. 1960. ) show
pagelevel restore
showpage
%%EOF
