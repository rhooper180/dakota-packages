diff --git a/trilinos/packages/teuchos/numerics/src/Teuchos_SerialDenseMatrix.hpp b/trilinos/packages/teuchos/numerics/src/Teuchos_SerialDenseMatrix.hpp
index 7aa6b57..783db2e 100644
--- a/trilinos/packages/teuchos/numerics/src/Teuchos_SerialDenseMatrix.hpp
+++ b/trilinos/packages/teuchos/numerics/src/Teuchos_SerialDenseMatrix.hpp
@@ -636,20 +636,11 @@ SerialDenseMatrix<OrdinalType, ScalarType>::swap(
   //        static int tracebackMode (no swap for statics)
   //        std::string label_ (has been reported as a cause of memory overhead)
 
-  // cache B values
-  ScalarType* B_ptr  = B.values_;
-  OrdinalType B_rows = B.numRows_, B_cols = B.numCols_, B_str = B.stride_;
-  bool B_vc = B.valuesCopied_;
-
-  // assign values from this to B
-  B.values_  = values_;
-  B.numRows_ = numRows_; B.numCols_ = numCols_; B.stride_ = stride_;
-  B.valuesCopied_ = valuesCopied_;
-
-  // assign cached B values to this
-  values_  = B_ptr;
-  numRows_ = B_rows;  numCols_ = B_cols;  stride_ = B_str;
-  valuesCopied_ = B_vc;
+  std::swap(values_ ,      B.values_);
+  std::swap(numRows_,      B.numRows_);
+  std::swap(numCols_,      B.numCols_);
+  std::swap(stride_,       B.stride_);
+  std::swap(valuesCopied_, B.valuesCopied_);
 }
 
 template<typename OrdinalType, typename ScalarType>
diff --git a/trilinos/packages/teuchos/numerics/src/Teuchos_SerialSymDenseMatrix.hpp b/trilinos/packages/teuchos/numerics/src/Teuchos_SerialSymDenseMatrix.hpp
index 1c7a641..5f9d078 100644
--- a/trilinos/packages/teuchos/numerics/src/Teuchos_SerialSymDenseMatrix.hpp
+++ b/trilinos/packages/teuchos/numerics/src/Teuchos_SerialSymDenseMatrix.hpp
@@ -641,23 +641,12 @@ template<typename OrdinalType, typename ScalarType> void
 SerialSymDenseMatrix<OrdinalType, ScalarType>::swap(
   SerialSymDenseMatrix<OrdinalType, ScalarType> &B)
 {
-  // cache B values
-  ScalarType* B_ptr  = B.values_;
-  OrdinalType B_rc   = B.numRowCols_,   B_str   = B.stride_;
-  bool        B_vc   = B.valuesCopied_, B_upper = B.upper_;
-  char        B_uplo = B.UPLO_;
-
-  // assign values from this to B
-  B.values_       = values_;
-  B.numRowCols_   = numRowCols_;   B.stride_ = stride_;
-  B.valuesCopied_ = valuesCopied_; B.upper_  = upper_;
-  B.UPLO_         = UPLO_;
-
-  // assign cached B values to this
-  values_       = B_ptr;
-  numRowCols_   = B_rc;  stride_ = B_str;
-  valuesCopied_ = B_vc;  upper_  = B_upper;
-  UPLO_         = B_uplo;
+  std::swap(values_ ,      B.values_);
+  std::swap(numRowCols_,   B.numRowCols_);
+  std::swap(stride_,       B.stride_);
+  std::swap(valuesCopied_, B.valuesCopied_);
+  std::swap(upper_,        B.upper_);
+  std::swap(UPLO_,         B.UPLO_);
 }
 
 template<typename OrdinalType, typename ScalarType>
